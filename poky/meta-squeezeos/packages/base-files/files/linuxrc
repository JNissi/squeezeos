#!/bin/sh
#
# System initialisation

# Mount /proc and /sys filesystems
/bin/mount -a

# Mount read/write filesystem, we support ubifs or jffs2
UBIFS_DEV=`grep ubifs /proc/mtd | cut -c4`
JFFS2_DEV=`grep jffs2 /proc/mtd | cut -c4`

if [ ! -z $UBIFS_DEV ]
then
	# ubifs filesystem
	MOUNT_TYPE=ubifs
       	MOUNT_MTD=/dev/mtd${UBIFS_DEV}
	MOUNT_DEVICE=ubi0:ubifs
elif  [ ! -z $JFFS2_DEV ]
then
	# jffs2 filesystem
	MOUNT_TYPE=jffs2
	MOUNT_MTD=/dev/mtd${JFFS2_DEV}
	MOUNT_DEVICE=/dev/mtdblock${JFFS2_DEV}
fi

/bin/mount -t ${MOUNT_TYPE} -o noatime ${MOUNT_DEVICE} /mnt/storage
MOUNT_OK=$?

# Factory reset
if [ $MOUNT_OK -ne 0 -o -f /mnt/storage/.factoryreset ]
then
	/bin/echo "Factory Reset"

	/bin/umount /mnt/storage
	/usr/sbin/flash_eraseall -q ${MOUNT_MTD}
	/bin/mount -t ${MOUNT_TYPE} -o noatime ${MOUNT_DEVICE} /mnt/storage

	# Store version
	/bin/mkdir -p /mnt/storage/etc
	/bin/cp /etc/squeezeos.version /mnt/storage/etc/squeezeos.version
else
	# Upgraded?
	/usr/bin/diff -N /etc/squeezeos.version /mnt/storage/etc/squeezeos.version > /dev/null 2> /dev/null
	if [ $? -ne 0 ]
	then
		# Remove modified files
		/bin/echo "SqueezeOS Upgraded"
		/usr/bin/find /mnt/storage/ -type f | /bin/grep -v -f /etc/keep-after-upgrade | /usr/bin/xargs /bin/rm -f

		# Store version
		/bin/mkdir -p /mnt/storage/etc
		/bin/cp /etc/squeezeos.version /mnt/storage/etc/squeezeos.version
	fi
fi


# Mount overlay filesystem
/bin/mount -t mini_fo -o base=/,sto=/mnt/storage / /mnt/overlay

# Run init process
exec /usr/sbin/chroot /mnt/overlay /sbin/init

/bin/echo "Failed to run init"
exec /bin/sh

exit 1

