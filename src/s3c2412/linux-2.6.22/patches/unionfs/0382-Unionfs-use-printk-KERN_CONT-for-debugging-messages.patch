From 9738198478b4658d75f6b79033667a463021be32 Mon Sep 17 00:00:00 2001
From: Erez Zadok <ezk@cs.sunysb.edu>
Date: Tue, 1 Jan 2008 21:49:14 -0500
Subject: [PATCH] Unionfs: use printk KERN_CONT for debugging messages

Signed-off-by: Erez Zadok <ezk@cs.sunysb.edu>
---
 fs/unionfs/debug.c |   54 ++++++++++++++++++++++++++++-----------------------
 1 files changed, 30 insertions(+), 24 deletions(-)

diff --git a/fs/unionfs/debug.c b/fs/unionfs/debug.c
index 14feaf1..5e1864b 100644
--- a/fs/unionfs/debug.c
+++ b/fs/unionfs/debug.c
@@ -16,6 +16,10 @@
  * useful information back to maintainers)
  */
 
+#ifndef KERN_CONT
+# define KERN_CONT	""
+#endif /* not KERN_CONT */
+
 /* it's always useful to know what part of the code called us */
 #define PRINT_CALLER(fname, fxn, line)					\
 	do {								\
@@ -435,9 +439,10 @@ void __show_branch_counts(const struct super_block *sb,
 			mnt = UNIONFS_D(sb->s_root)->lower_paths[i].mnt;
 		else
 			mnt = NULL;
-		pr_debug("%d:", (mnt ? atomic_read(&mnt->mnt_count) : -99));
+		printk(KERN_CONT "%d:",
+		       (mnt ? atomic_read(&mnt->mnt_count) : -99));
 	}
-	pr_debug("%s:%s:%d\n", file, fxn, line);
+	printk(KERN_CONT "%s:%s:%d\n", file, fxn, line);
 }
 
 void __show_inode_times(const struct inode *inode,
@@ -451,15 +456,15 @@ void __show_inode_times(const struct inode *inode,
 		if (unlikely(!lower_inode))
 			continue;
 		pr_debug("IT(%lu:%d): ", inode->i_ino, bindex);
-		pr_debug("%s:%s:%d ", file, fxn, line);
-		pr_debug("um=%lu/%lu lm=%lu/%lu ",
-			 inode->i_mtime.tv_sec, inode->i_mtime.tv_nsec,
-			 lower_inode->i_mtime.tv_sec,
-			 lower_inode->i_mtime.tv_nsec);
-		pr_debug("uc=%lu/%lu lc=%lu/%lu\n",
-			 inode->i_ctime.tv_sec, inode->i_ctime.tv_nsec,
-			 lower_inode->i_ctime.tv_sec,
-			 lower_inode->i_ctime.tv_nsec);
+		printk(KERN_CONT "%s:%s:%d ", file, fxn, line);
+		printk(KERN_CONT "um=%lu/%lu lm=%lu/%lu ",
+		       inode->i_mtime.tv_sec, inode->i_mtime.tv_nsec,
+		       lower_inode->i_mtime.tv_sec,
+		       lower_inode->i_mtime.tv_nsec);
+		printk(KERN_CONT "uc=%lu/%lu lc=%lu/%lu\n",
+		       inode->i_ctime.tv_sec, inode->i_ctime.tv_nsec,
+		       lower_inode->i_ctime.tv_sec,
+		       lower_inode->i_ctime.tv_nsec);
 	}
 }
 
@@ -476,15 +481,15 @@ void __show_dinode_times(const struct dentry *dentry,
 			continue;
 		pr_debug("DT(%s:%lu:%d): ", dentry->d_name.name, inode->i_ino,
 			 bindex);
-		pr_debug("%s:%s:%d ", file, fxn, line);
-		pr_debug("um=%lu/%lu lm=%lu/%lu ",
-			 inode->i_mtime.tv_sec, inode->i_mtime.tv_nsec,
-			 lower_inode->i_mtime.tv_sec,
-			 lower_inode->i_mtime.tv_nsec);
-		pr_debug("uc=%lu/%lu lc=%lu/%lu\n",
-			 inode->i_ctime.tv_sec, inode->i_ctime.tv_nsec,
-			 lower_inode->i_ctime.tv_sec,
-			 lower_inode->i_ctime.tv_nsec);
+		printk(KERN_CONT "%s:%s:%d ", file, fxn, line);
+		printk(KERN_CONT "um=%lu/%lu lm=%lu/%lu ",
+		       inode->i_mtime.tv_sec, inode->i_mtime.tv_nsec,
+		       lower_inode->i_mtime.tv_sec,
+		       lower_inode->i_mtime.tv_nsec);
+		printk(KERN_CONT "uc=%lu/%lu lc=%lu/%lu\n",
+		       inode->i_ctime.tv_sec, inode->i_ctime.tv_nsec,
+		       lower_inode->i_ctime.tv_sec,
+		       lower_inode->i_ctime.tv_nsec);
 	}
 }
 
@@ -503,9 +508,10 @@ void __show_inode_counts(const struct inode *inode,
 		lower_inode = unionfs_lower_inode_idx(inode, bindex);
 		if (unlikely(!lower_inode))
 			continue;
-		pr_debug("SIC(%lu:%d:%d): ", inode->i_ino, bindex,
-			 atomic_read(&(inode)->i_count));
-		pr_debug("lc=%d ", atomic_read(&(lower_inode)->i_count));
-		pr_debug("%s:%s:%d\n", file, fxn, line);
+		printk(KERN_CONT "SIC(%lu:%d:%d): ", inode->i_ino, bindex,
+		       atomic_read(&(inode)->i_count));
+		printk(KERN_CONT "lc=%d ",
+		       atomic_read(&(lower_inode)->i_count));
+		printk(KERN_CONT "%s:%s:%d\n", file, fxn, line);
 	}
 }
-- 
1.5.4.3

