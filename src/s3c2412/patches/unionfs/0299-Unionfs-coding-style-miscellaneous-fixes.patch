From 406200aa1f78d51101cfa030d68bd6b304cfbcb5 Mon Sep 17 00:00:00 2001
From: Erez Zadok <ezk@cs.sunysb.edu>
Date: Sat, 29 Sep 2007 01:36:57 -0400
Subject: [PATCH] Unionfs: coding style: miscellaneous fixes

No braces around single-statement if's.
No externs in .c files.
use <linux/mman.h> not <asm/mman.h>.
Use (foo *) not (foo*).

Signed-off-by: Erez Zadok <ezk@cs.sunysb.edu>
---
 fs/unionfs/rdstate.c |    3 +--
 fs/unionfs/super.c   |    3 +--
 fs/unionfs/union.h   |    3 ++-
 fs/unionfs/xattr.c   |    6 +++---
 4 files changed, 7 insertions(+), 8 deletions(-)

diff --git a/fs/unionfs/rdstate.c b/fs/unionfs/rdstate.c
index 07e0ba8..a47b187 100644
--- a/fs/unionfs/rdstate.c
+++ b/fs/unionfs/rdstate.c
@@ -218,12 +218,11 @@ struct filldir_node *find_filldir_node(struct unionfs_dir_state *rdstate,
 			 * if the duplicate is in this branch, then the file
 			 * system is corrupted.
 			 */
-			if (unlikely(cursor->bindex == rdstate->bindex)) {
+			if (unlikely(cursor->bindex == rdstate->bindex))
 				printk(KERN_ERR "unionfs: filldir: possible "
 				       "I/O error: a file is duplicated "
 				       "in the same branch %d: %s\n",
 				       rdstate->bindex, cursor->name);
-			}
 			break;
 		}
 	}
diff --git a/fs/unionfs/super.c b/fs/unionfs/super.c
index ffffe01..ed2a0f9 100644
--- a/fs/unionfs/super.c
+++ b/fs/unionfs/super.c
@@ -26,7 +26,6 @@ static struct kmem_cache *unionfs_inode_cachep;
 
 static void unionfs_read_inode(struct inode *inode)
 {
-	extern struct address_space_operations unionfs_aops;
 	int size;
 	struct unionfs_inode_info *info = UNIONFS_I(inode);
 
@@ -965,7 +964,7 @@ static int unionfs_show_options(struct seq_file *m, struct vfsmount *mnt)
 
 	unionfs_lock_dentry(sb->s_root);
 
-	tmp_page = (char*) __get_free_page(GFP_KERNEL);
+	tmp_page = (char *) __get_free_page(GFP_KERNEL);
 	if (unlikely(!tmp_page)) {
 		ret = -ENOMEM;
 		goto out;
diff --git a/fs/unionfs/union.h b/fs/unionfs/union.h
index 6d5980a..07d6781 100644
--- a/fs/unionfs/union.h
+++ b/fs/unionfs/union.h
@@ -44,8 +44,8 @@
 #include <linux/magic.h>
 #include <linux/log2.h>
 #include <linux/poison.h>
+#include <linux/mman.h>
 
-#include <asm/mman.h>
 #include <asm/system.h>
 
 #include <linux/union_fs.h>
@@ -70,6 +70,7 @@ extern struct inode_operations unionfs_dir_iops;
 extern struct inode_operations unionfs_symlink_iops;
 extern struct super_operations unionfs_sops;
 extern struct dentry_operations unionfs_dops;
+extern struct address_space_operations unionfs_aops;
 
 /* How long should an entry be allowed to persist */
 #define RDCACHE_JIFFIES	(5*HZ)
diff --git a/fs/unionfs/xattr.c b/fs/unionfs/xattr.c
index 71ff7d0..602cedf 100644
--- a/fs/unionfs/xattr.c
+++ b/fs/unionfs/xattr.c
@@ -55,7 +55,7 @@ ssize_t unionfs_getxattr(struct dentry *dentry, const char *name, void *value,
 
 	lower_dentry = unionfs_lower_dentry(dentry);
 
-	err = vfs_getxattr(lower_dentry, (char*) name, value, size);
+	err = vfs_getxattr(lower_dentry, (char *) name, value, size);
 
 out:
 	unionfs_unlock_dentry(dentry);
@@ -84,7 +84,7 @@ int unionfs_setxattr(struct dentry *dentry, const char *name,
 
 	lower_dentry = unionfs_lower_dentry(dentry);
 
-	err = vfs_setxattr(lower_dentry, (char*) name, (void*) value,
+	err = vfs_setxattr(lower_dentry, (char *) name, (void *) value,
 			   size, flags);
 
 out:
@@ -113,7 +113,7 @@ int unionfs_removexattr(struct dentry *dentry, const char *name)
 
 	lower_dentry = unionfs_lower_dentry(dentry);
 
-	err = vfs_removexattr(lower_dentry, (char*) name);
+	err = vfs_removexattr(lower_dentry, (char *) name);
 
 out:
 	unionfs_unlock_dentry(dentry);
-- 
1.5.4.3

