From 354de95fee43a9b340cdf1b195ce23e4b43a4839 Mon Sep 17 00:00:00 2001
From: Erez_Zadok <ezk@cs.sunysb.edu>
Date: Sat, 24 Mar 2007 17:41:57 -0400
Subject: [PATCH] cleanup: remove trailing spaces

---
 fs/unionfs/inode.c   |    2 +-
 fs/unionfs/lookup.c  |    2 +-
 fs/unionfs/main.c    |    2 +-
 fs/unionfs/rdstate.c |    2 +-
 fs/unionfs/super.c   |    2 +-
 fs/unionfs/union.h   |    6 +++---
 6 files changed, 8 insertions(+), 8 deletions(-)

diff --git a/fs/unionfs/inode.c b/fs/unionfs/inode.c
index 97dad8c..f91cf8c 100644
--- a/fs/unionfs/inode.c
+++ b/fs/unionfs/inode.c
@@ -795,7 +795,7 @@ static void unionfs_put_link(struct dentry *dentry, struct nameidata *nd,
 
 /* Basically copied from the kernel vfs permission(), but we've changed
  * the following:
- *   (1) the IS_RDONLY check is skipped, and 
+ *   (1) the IS_RDONLY check is skipped, and
  *   (2) if you set the mount option `mode=nfsro', we assume that -EACCES
  *   means that the export is read-only and we should check standard Unix
  *   permissions.  This means that NFS ACL checks (or other advanced
diff --git a/fs/unionfs/lookup.c b/fs/unionfs/lookup.c
index 5157f36..8069698 100644
--- a/fs/unionfs/lookup.c
+++ b/fs/unionfs/lookup.c
@@ -305,7 +305,7 @@ out_negative:
 			err = PTR_ERR(first_hidden_dentry);
 			goto out;
 		}
-		
+
 		/* FIXME: the following line needs to be changed to allow
 		 * mountpoint crossing
 		 */
diff --git a/fs/unionfs/main.c b/fs/unionfs/main.c
index 4fffafa..75b7129 100644
--- a/fs/unionfs/main.c
+++ b/fs/unionfs/main.c
@@ -483,7 +483,7 @@ out:
 	return hidden_root_info;
 }
 
-/* our custom d_alloc_root workalike 
+/* our custom d_alloc_root workalike
  *
  * we can't use d_alloc_root if we want to use our own interpose function
  * unchanged, so we simply call our own "fake" d_alloc_root
diff --git a/fs/unionfs/rdstate.c b/fs/unionfs/rdstate.c
index b67a86a..2265031 100644
--- a/fs/unionfs/rdstate.c
+++ b/fs/unionfs/rdstate.c
@@ -87,7 +87,7 @@ int init_rdstate(struct file *file)
 
 	UNIONFS_F(file)->rdstate = alloc_rdstate(file->f_dentry->d_inode,
 						 fbstart(file));
-	
+
 	return (UNIONFS_F(file)->rdstate ? 0 : -ENOMEM);
 }
 
diff --git a/fs/unionfs/super.c b/fs/unionfs/super.c
index c1048e9..0426773 100644
--- a/fs/unionfs/super.c
+++ b/fs/unionfs/super.c
@@ -102,7 +102,7 @@ static void unionfs_put_super(struct super_block *sb)
 	spd = UNIONFS_SB(sb);
 	if (!spd)
 		return;
-		
+
 	bstart = sbstart(sb);
 	bend = sbend(sb);
 
diff --git a/fs/unionfs/union.h b/fs/unionfs/union.h
index b6fa0a2..0d722bd 100644
--- a/fs/unionfs/union.h
+++ b/fs/unionfs/union.h
@@ -98,7 +98,7 @@ struct unionfs_inode_info {
 	int rdcount;
 	int hashsize;
 	int cookie;
-	
+
 	/* The hidden inodes */
 	struct inode **lower_inodes;
 	/* to keep track of reads/writes for unlinks before closes */
@@ -152,8 +152,8 @@ struct filldir_node {
 
 	/* we can check for duplicate whiteouts and files in the same branch
 	 * in order to return -EIO.
-	 */ 
-	int bindex;		
+	 */
+	int bindex;
 
 	/* is this a whiteout entry? */
 	int whiteout;
-- 
1.5.4.3

