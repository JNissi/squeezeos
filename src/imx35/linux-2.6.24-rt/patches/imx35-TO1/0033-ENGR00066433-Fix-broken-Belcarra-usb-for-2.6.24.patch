From aaab6ef6df8296e89b225ccdd44b9910a281405d Mon Sep 17 00:00:00 2001
From: Rob Herring <r.herring@freescale.com>
Date: Wed, 20 Feb 2008 16:48:57 -0600
Subject: [PATCH] ENGR00066433 Fix broken Belcarra usb for 2.6.24

This fixes a build break of Belcarra USB due to interrupt handler
changes in 2.6.24 kernel.

Signed-off-by: Rob Herring <r.herring@freescale.com>
---
 drivers/otg/hardware/mxc-ocd.c |   48 ++++++++++++++++++++--------------------
 1 files changed, 24 insertions(+), 24 deletions(-)

diff --git a/drivers/otg/hardware/mxc-ocd.c b/drivers/otg/hardware/mxc-ocd.c
index 437bf50..49a9100 100644
--- a/drivers/otg/hardware/mxc-ocd.c
+++ b/drivers/otg/hardware/mxc-ocd.c
@@ -1,5 +1,5 @@
 /*
- * Copyright 2005-2007 Freescale Semiconductor, Inc. All Rights Reserved.
+ * Copyright 2005-2008 Freescale Semiconductor, Inc. All Rights Reserved.
  */
 
 /*
@@ -291,8 +291,8 @@ void mxc_ocd_init(struct otg_instance *otg, u8 flag)
 
 struct ocd_ops ocd_ops;
 
-extern irqreturn_t mxc_pcd_int_hndlr (void);
-extern irqreturn_t mxc_hcd_hw_int_hndlr(int irq, void *dev_id, struct pt_regs *regs);
+irqreturn_t mxc_pcd_int_hndlr(void);
+irqreturn_t mxc_hcd_hw_int_hndlr(int irq, void *dev_id);
 
 extern void mxc_func_clock_on(void);
 extern void mxc_func_clock_off(void);
@@ -301,7 +301,7 @@ extern void mxc_main_clock_off(void);
 extern void mxc_set_hw_mode(int);
 
 #if defined(CONFIG_OTG_USB_PERIPHERAL) || defined(CONFIG_OTG_BDEVICE_WITH_SRP)
-irqreturn_t mxc_hcd_hw_int_hndlr(int irq, void *dev_id, struct pt_regs *regs)
+irqreturn_t mxc_hcd_hw_int_hndlr(int irq, void *dev_id)
 {
         return IRQ_HANDLED;
 }
@@ -315,7 +315,7 @@ irqreturn_t mxc_hcd_hw_int_hndlr(int irq, void *dev_id, struct pt_regs *regs)
  * @param dev_id
  * @param regs
  */
-irqreturn_t ocd_hnp_int_hndlr (int irq, void *dev_id, struct pt_regs *regs)
+irqreturn_t ocd_hnp_int_hndlr(int irq, void *dev_id)
 {
         u32 hint_stat = fs_rl(OTG_CORE_HINT_STAT);
         u32 hnp_cstat = fs_rl(OTG_CORE_HNP_CSTAT);
@@ -335,7 +335,7 @@ irqreturn_t ocd_hnp_int_hndlr (int irq, void *dev_id, struct pt_regs *regs)
  * @param dev_id
  * @param regs
  */
-static irqreturn_t pcd_bwkup_int_hndlr (int irq, void *dev_id, struct pt_regs *regs)
+static irqreturn_t pcd_bwkup_int_hndlr(int irq, void *dev_id)
 {
         u32 sys_ctrl = fs_rl(OTG_SYS_CTRL);
         //static int bwkup_count = 0;
@@ -359,7 +359,7 @@ static irqreturn_t pcd_bwkup_int_hndlr (int irq, void *dev_id, struct pt_regs *r
  * @param dev_id
  * @param regs
  */
-static irqreturn_t ocd_dma_int_hndlr (int irq, void *dev_id, struct pt_regs *regs)
+static irqreturn_t ocd_dma_int_hndlr(int irq, void *dev_id)
 {
         u32 dint_stat = fs_rl(OTG_DMA_DINT_STAT);
         u32 etd_err = fs_rl(OTG_DMA_ETD_ERR);
@@ -392,12 +392,12 @@ static irqreturn_t ocd_dma_int_hndlr (int irq, void *dev_id, struct pt_regs *reg
  * @param dev_id
  * @param regs
  */
-static irqreturn_t hcd_host_int_hndlr (int irq, void *dev_id, struct pt_regs *regs)
+static irqreturn_t hcd_host_int_hndlr(int irq, void *dev_id)
 {
         u32 sint_stat = fs_rl(OTG_HOST_SINT_STAT);
         static u32 hcd_interrupts = 0;
         //printk(KERN_INFO"%s: %d\n", __FUNCTION__, hcd_interrupts++);
-        mxc_hcd_hw_int_hndlr(irq, NULL, regs);
+	mxc_hcd_hw_int_hndlr(irq, NULL);
         return IRQ_HANDLED;
 }
 
@@ -408,7 +408,7 @@ static irqreturn_t hcd_host_int_hndlr (int irq, void *dev_id, struct pt_regs *re
  * @param dev_id
  * @param regs
  */
-static irqreturn_t ocd_ctrl_int_hndlr (int irq, void *dev_id, struct pt_regs *regs)
+static irqreturn_t ocd_ctrl_int_hndlr(int irq, void *dev_id)
 {
         u32 sys_ctrl = fs_rl(OTG_SYS_CTRL);            // C.f. 23.8 USB Control Register
         u32 cint_stat = fs_rl(OTG_CORE_CINT_STAT);     // C.f. 23.9.2 USBOTG Module Interrupt Status Register
@@ -451,7 +451,7 @@ static irqreturn_t ocd_ctrl_int_hndlr (int irq, void *dev_id, struct pt_regs *re
 
                 //fs_wl_set(OCD, OTG_CORE_HINT_STAT, hint_stat);
                 fs_wl(OTG_CORE_HINT_STAT, hint_stat);
-                ocd_hnp_int_hndlr(irq, dev_id, regs);
+		ocd_hnp_int_hndlr(irq, dev_id);
         }
         if (cint_stat & MODULE_ASFCINT) {                               // Asynchronous Function interrupt, enable Func clock
                 //TRACE_MSG1(OCD, "MODULE_ASFCINT %08x", cint_stat);
@@ -465,14 +465,14 @@ static irqreturn_t ocd_ctrl_int_hndlr (int irq, void *dev_id, struct pt_regs *re
         }
 
         if ((cint_stat & MODULE_HNPINT) || hint_stat)                                  // HNP interrupt
-                ocd_hnp_int_hndlr(irq, dev_id, regs);
+		ocd_hnp_int_hndlr(irq, dev_id);
 
         if (cint_stat & MODULE_FCINT)
                 mxc_pcd_int_hndlr();
 
         if (cint_stat & MODULE_HCINT) {
                 //TRACE_MSG1(OCD, "MODULE_HCINT %08x", cint_stat);
-                mxc_hcd_hw_int_hndlr(irq, NULL, regs);
+		mxc_hcd_hw_int_hndlr(irq, NULL);
         }
 
         return IRQ_HANDLED;
@@ -485,12 +485,12 @@ static irqreturn_t ocd_ctrl_int_hndlr (int irq, void *dev_id, struct pt_regs *re
  * @param dev_id
  * @param regs
  */
-irqreturn_t pcd_bwkup_int_hndlr_isr (int irq, void *dev_id)
+irqreturn_t pcd_bwkup_int_hndlr_isr(int irq, void *dev_id)
 {
         //pcd_instance->otg->interrupts++;
         //TRACE_MSG0(OCD, "--");
         //printk(KERN_INFO"%s:\n", __FUNCTION__);
-        return pcd_bwkup_int_hndlr (irq, dev_id, regs);
+	return pcd_bwkup_int_hndlr(irq, dev_id);
 }
 
 /*!
@@ -499,12 +499,12 @@ irqreturn_t pcd_bwkup_int_hndlr_isr (int irq, void *dev_id)
  * @param dev_id
  * @param regs
  */
-irqreturn_t ocd_hnp_int_hndlr_isr (int irq, void *dev_id)
+irqreturn_t ocd_hnp_int_hndlr_isr(int irq, void *dev_id)
 {
         //pcd_instance->otg->interrupts++;
         //TRACE_MSG0(OCD, "--");
         //printk(KERN_INFO"%s:\n", __FUNCTION__);
-        return ocd_hnp_int_hndlr (irq, dev_id, regs);
+	return ocd_hnp_int_hndlr(irq, dev_id);
 }
 
 /*!
@@ -513,7 +513,7 @@ irqreturn_t ocd_hnp_int_hndlr_isr (int irq, void *dev_id)
  * @param dev_id
  * @param regs
  */
-irqreturn_t pcd_func_int_hndlr_isr (int irq, void *dev_id)
+irqreturn_t pcd_func_int_hndlr_isr(int irq, void *dev_id)
 {
         //pcd_instance->otg->interrupts++;
         //TRACE_MSG0(OCD, "--");
@@ -529,12 +529,12 @@ irqreturn_t pcd_func_int_hndlr_isr (int irq, void *dev_id)
  * @param dev_id
  * @param regs
  */
-irqreturn_t hcd_host_int_hndlr_isr (int irq, void *dev_id)
+irqreturn_t hcd_host_int_hndlr_isr(int irq, void *dev_id)
 {
         //pcd_instance->otg->interrupts++;
         //TRACE_MSG0(OCD, "--");
         //printk(KERN_INFO"%s:\n", __FUNCTION__);
-        return hcd_host_int_hndlr (irq, dev_id, regs);
+	return hcd_host_int_hndlr(irq, dev_id);
 }
 
 /*!
@@ -543,12 +543,12 @@ irqreturn_t hcd_host_int_hndlr_isr (int irq, void *dev_id)
  * @param dev_id
  * @param regs
  */
-irqreturn_t ocd_ctrl_int_hndlr_isr (int irq, void *dev_id)
+irqreturn_t ocd_ctrl_int_hndlr_isr(int irq, void *dev_id)
 {
         //pcd_instance->otg->interrupts++;
         //TRACE_MSG0(OCD, "--");
         //printk(KERN_INFO"%s:\n", __FUNCTION__);
-        return ocd_ctrl_int_hndlr (irq, dev_id, regs);
+	return ocd_ctrl_int_hndlr(irq, dev_id);
 }
 
 /*!
@@ -557,11 +557,11 @@ irqreturn_t ocd_ctrl_int_hndlr_isr (int irq, void *dev_id)
  * @param dev_id
  * @param regs
  */
-irqreturn_t ocd_dma_int_hndlr_isr (int irq, void *dev_id)
+irqreturn_t ocd_dma_int_hndlr_isr(int irq, void *dev_id)
 {
         //pcd_instance->otg->interrupts++;
         //TRACE_MSG0(OCD, "--");
-        return ocd_dma_int_hndlr (irq, dev_id, regs);
+	return ocd_dma_int_hndlr(irq, dev_id);
 }
 
 /* ********************************************************************************************* */
-- 
1.5.4.4

