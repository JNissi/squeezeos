From 5fb122717f2576663a10f5eddd2df0d1e6380af5 Mon Sep 17 00:00:00 2001
From: Mahesh Mahadevan <r9aadq@freescale.com>
Date: Wed, 16 Apr 2008 09:46:34 -0500
Subject: [PATCH] ENGR00073116 Fix I2C Start function to add error handling

The I2C Start function returns a BUSY if the I2C Bus could be
grabbed after sending a START bit

Signed-off-by: Mahesh Mahadevan <r9aadq@freescale.com>
---
 drivers/i2c/busses/mxc_i2c.c |    9 +++++++--
 1 files changed, 7 insertions(+), 2 deletions(-)

diff --git a/drivers/i2c/busses/mxc_i2c.c b/drivers/i2c/busses/mxc_i2c.c
index 3b66026..4331cce 100644
--- a/drivers/i2c/busses/mxc_i2c.c
+++ b/drivers/i2c/busses/mxc_i2c.c
@@ -187,8 +187,10 @@ static int mxc_i2c_wait_for_tc(mxc_i2c_device * dev, int trans_flag)
  * @param   dev   the mxc i2c structure used to get to the right i2c device
  * @param   *msg  pointer to a message structure that contains the slave
  *                address
+ *
+ * @return  The function returns EBUSY on failure, 0 on success.
  */
-static void mxc_i2c_start(mxc_i2c_device * dev, struct i2c_msg *msg)
+static int mxc_i2c_start(mxc_i2c_device *dev, struct i2c_msg *msg)
 {
 	volatile unsigned int cr, sr;
 	unsigned int addr_trans;
@@ -216,6 +218,7 @@ static void mxc_i2c_start(mxc_i2c_device * dev, struct i2c_msg *msg)
 	}
 	if (retry <= 0) {
 		printk(KERN_DEBUG "Could not grab Bus ownership\n");
+		return -EBUSY;
 	}
 
 	/* Set the Transmit bit */
@@ -224,6 +227,7 @@ static void mxc_i2c_start(mxc_i2c_device * dev, struct i2c_msg *msg)
 	writew(cr, dev->membase + MXC_I2CR);
 
 	writew(addr_trans, dev->membase + MXC_I2DR);
+	return 0;
 }
 
 /*!
@@ -444,7 +448,8 @@ static int mxc_i2c_xfer(struct i2c_adapter *adap, struct i2c_msg msgs[],
 			/*
 			 * Send a start or repeat start signal
 			 */
-			mxc_i2c_start(dev, &msgs[0]);
+			if (mxc_i2c_start(dev, &msgs[0]))
+				return -EREMOTEIO;
 			/* Wait for the address cycle to complete */
 			if (mxc_i2c_wait_for_tc(dev, msgs[0].flags)) {
 				mxc_i2c_stop(dev);
-- 
1.5.4.4

