From f1abd0538655948cd5acc0aa2de266739916a4d7 Mon Sep 17 00:00:00 2001
From: Dinh Nguyen <Dinh.Nguyen@freescale.com>
Date: Sun, 1 Jun 2008 23:08:19 -0500
Subject: [PATCH] ENGR00078404  Turn on Debug Port clock if JTAG flag is set to TRUE

Should turn on the DAP(Debug Access Port) clock if jtag=true is
passed as part of the exec command. This will allow JTAG connection
when the Linux kernel image is currently running.

Signed-off-by: Dinh Nguyen <Dinh.Nguyen@freescale.com>
---
 arch/arm/mach-mx37/clock.c    |   14 +++++++++++---
 arch/arm/mach-mx37/crm_regs.h |    1 +
 2 files changed, 12 insertions(+), 3 deletions(-)

diff --git a/arch/arm/mach-mx37/clock.c b/arch/arm/mach-mx37/clock.c
index 190244e..57820e8 100644
--- a/arch/arm/mach-mx37/clock.c
+++ b/arch/arm/mach-mx37/clock.c
@@ -24,6 +24,8 @@
 
 #include "crm_regs.h"
 
+extern int mxc_jtag_enabled;
+
 static unsigned long pll_base[] = {
 	(unsigned long)MXC_DPLL1_BASE,
 	(unsigned long)MXC_DPLL2_BASE,
@@ -1904,9 +1906,15 @@ int __init mxc_clocks_init(void)
 		clk_register(*clkp);
 	}
 	/* Turn off all possible clocks */
-	__raw_writel(MXC_CCM_CCGR0_CG0_MASK | MXC_CCM_CCGR0_CG1_MASK |
-		     MXC_CCM_CCGR0_CG12_MASK | MXC_CCM_CCGR0_CG13_MASK |
-		     MXC_CCM_CCGR0_CG14_MASK, MXC_CCM_CCGR0);
+	if (mxc_jtag_enabled)
+		__raw_writel(MXC_CCM_CCGR0_CG0_MASK | MXC_CCM_CCGR0_CG1_MASK |
+			     MXC_CCM_CCGR0_CG2_MASK | MXC_CCM_CCGR0_CG12_MASK |
+			     MXC_CCM_CCGR0_CG13_MASK |
+			     MXC_CCM_CCGR0_CG14_MASK, MXC_CCM_CCGR0);
+	else
+		__raw_writel(MXC_CCM_CCGR0_CG0_MASK | MXC_CCM_CCGR0_CG1_MASK |
+			     MXC_CCM_CCGR0_CG12_MASK | MXC_CCM_CCGR0_CG13_MASK |
+			     MXC_CCM_CCGR0_CG14_MASK, MXC_CCM_CCGR0);
 	__raw_writel(0, MXC_CCM_CCGR1);
 	__raw_writel(0, MXC_CCM_CCGR2);
 	__raw_writel(0, MXC_CCM_CCGR3);
diff --git a/arch/arm/mach-mx37/crm_regs.h b/arch/arm/mach-mx37/crm_regs.h
index 28c6c8f..e7b45ff 100644
--- a/arch/arm/mach-mx37/crm_regs.h
+++ b/arch/arm/mach-mx37/crm_regs.h
@@ -406,6 +406,7 @@
 #define MXC_CCM_CCGR0_CG4_OFFSET			8
 #define MXC_CCM_CCGR0_CG3_OFFSET			6
 #define MXC_CCM_CCGR0_CG2_OFFSET			4
+#define MXC_CCM_CCGR0_CG2_MASK				(0x3 << 4)
 #define MXC_CCM_CCGR0_CG1_OFFSET			2
 #define MXC_CCM_CCGR0_CG1_MASK				(0x3 << 2)
 #define MXC_CCM_CCGR0_CG0_OFFSET			0
-- 
1.5.4.4

