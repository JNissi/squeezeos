From 5fccf1d4dd569e50ff9c9dc21a1161b3777c85c7 Mon Sep 17 00:00:00 2001
From: Dinh Nguyen <Dinh.Nguyen@freescale.com>
Date: Tue, 27 May 2008 15:12:58 -0500
Subject: [PATCH] ENGR00077431 Fix Gadget USB driver to support USBHSET test

Fixed the Gadget driver to be able to handle the test
SET_FEATURE functionality as part of the USBHSET test suite
that is from usb.org. The fix is to send a ZLP when the
SET_FEATURE is received and wait for the USB HW to go into
test mode.

Signed-off-by: Dinh Nguyen <Dinh.Nguyen@freescale.com>
---
 drivers/usb/gadget/arcotg_udc.c |   17 +++++++++++++++++
 1 files changed, 17 insertions(+), 0 deletions(-)

diff --git a/drivers/usb/gadget/arcotg_udc.c b/drivers/usb/gadget/arcotg_udc.c
index 645f746..6511177 100644
--- a/drivers/usb/gadget/arcotg_udc.c
+++ b/drivers/usb/gadget/arcotg_udc.c
@@ -85,6 +85,10 @@ volatile static struct usb_dr_device *usb_slave_regs;
 /* it is initialized in probe()  */
 static struct arcotg_udc *udc_controller;
 
+/* workqueue function for using msleep to allow the USB HW to go into a
+  * test mode */
+static struct delayed_work usbhset_work;
+
 /*ep name is important in gadget, it should obey the convention of ep_match()*/
 /* even numbered EPs are OUT or setup, odd are IN/INTERRUPT */
 static const char *const ep_name[] = {
@@ -1779,11 +1783,22 @@ static void setup_received_irq(struct arcotg_udc *udc,
 	}
 
 	if (ptc) {
+		if (ep0_prime_status(udc, EP_DIR_IN))
+			Ep0Stall(udc);
+
 		usb_slave_regs->portsc1 |= ptc << 16;
 		pr_debug("udc: switch to test mode.\n");
+		/* schedule a msleep wait for the USB HW to go into test mode */
+		schedule_delayed_work(&usbhset_work, 0);
 	}
 }
 
+/* use a global workqueue to use msleep, and not mdelay */
+static void usbhset_workqueue_handler(struct work_struct *work)
+{
+	msleep(10);
+}
+
 static void ep0_req_complete(struct arcotg_udc *udc, struct arcotg_ep *ep0,
 			     struct arcotg_req *req)
 {
@@ -3087,6 +3102,8 @@ static int __init udc_init(void)
 {
 	int rc;
 
+	INIT_DELAYED_WORK(&usbhset_work, usbhset_workqueue_handler);
+
 	printk(KERN_INFO "%s version %s init \n", driver_desc, DRIVER_VERSION);
 	rc = platform_driver_register(&udc_driver);
 	pr_debug("udc: %s() driver_register returns %d\n", __FUNCTION__, rc);
-- 
1.5.4.4

