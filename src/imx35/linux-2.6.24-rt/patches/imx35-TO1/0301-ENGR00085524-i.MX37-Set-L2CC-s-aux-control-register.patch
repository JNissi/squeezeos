From 549d856d6f6260276ba78cecf1e2bae458e6c0d5 Mon Sep 17 00:00:00 2001
From: Fred Fan <r01011@freescale.com>
Date: Mon, 28 Jul 2008 15:25:35 +0800
Subject: [PATCH] ENGR00085524 i.MX37 Set L2CC's aux control register to 0x0003001B.

The redboot set aux control register to 0x0003001B.
But during kernel initial, the aux control register is set to 0x00030024.
The setting is too conservative: read/write wait cycles is 5 cycles.
To keep alignment of L2CC setting with WINCE.
The L2CC aux control register will be set to 0x0003001B.

Signed-off-by: Fred Fan <r01011@freescale.com>
---
 arch/arm/mach-mx37/cpu.c |    8 ++------
 1 files changed, 2 insertions(+), 6 deletions(-)

diff --git a/arch/arm/mach-mx37/cpu.c b/arch/arm/mach-mx37/cpu.c
index 74e6caa..c9ed9a6 100644
--- a/arch/arm/mach-mx37/cpu.c
+++ b/arch/arm/mach-mx37/cpu.c
@@ -1,6 +1,6 @@
 /*
  *  Copyright (C) 2001 Deep Blue Solutions Ltd.
- *  Copyright 2004-2007 Freescale Semiconductor, Inc. All Rights Reserved.
+ *  Copyright 2004-2008 Freescale Semiconductor, Inc. All Rights Reserved.
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License version 2 as
@@ -46,13 +46,9 @@ static int __init post_cpu_init(void)
 	/* Initialize L2 cache */
 	l2_base = ioremap(L2CC_BASE_ADDR, SZ_4K);
 	if (l2_base) {
-		l2x0_init(l2_base, 0x00030024, 0x00000000);
+		l2x0_init(l2_base, 0x0003001B, 0x00000000);
 	}
 
-	/*
-	 * S/W workaround: Clear the off platform peripheral modules
-	 * Supervisor Protect bit for SDMA to access them.
-	 */
 	__raw_writel(0x0, IO_ADDRESS(AIPS1_BASE_ADDR + 0x40));
 	__raw_writel(0x0, IO_ADDRESS(AIPS1_BASE_ADDR + 0x44));
 	__raw_writel(0x0, IO_ADDRESS(AIPS1_BASE_ADDR + 0x48));
-- 
1.5.4.4

