From 0aec81d0ef86ffcf7a078146d72b77073a399943 Mon Sep 17 00:00:00 2001
From: Fred Fan <r01011@freescale.com>
Date: Thu, 8 May 2008 14:45:13 +0800
Subject: [PATCH] ENGR00075645 Fix bugs in i.MX35 3stack clock module

Default to enable AUDMUX and ECT clock. Change the wrong offset in spdif gate
register.And change some clocks parent field.

Signed-off-by: Fred Fan <r01011@freescale.com>
---
 arch/arm/mach-mx35/clock.c    |   39 ++++++++++++++-------------------------
 arch/arm/mach-mx35/crm_regs.h |    5 +++--
 2 files changed, 17 insertions(+), 27 deletions(-)

diff --git a/arch/arm/mach-mx35/clock.c b/arch/arm/mach-mx35/clock.c
index 92d0cf4..f493145 100644
--- a/arch/arm/mach-mx35/clock.c
+++ b/arch/arm/mach-mx35/clock.c
@@ -646,7 +646,10 @@ static void _clk_mstick1_recalc(struct clk *clk)
 
 static void _clk_asrc_recalc(struct clk *clk)
 {
-
+	unsigned long div;
+	div = __raw_readl(MXC_CCM_COSR) & MXC_CCM_COSR_ASRC_AUDIO_PODF_MASK;
+	div = div >> MXC_CCM_COSR_ASRC_AUDIO_PODF_OFFSET;
+	clk->rate = clk->parent->rate / (div + 1);
 }
 
 static void _clk_sdhc_recalc(struct clk *clk)
@@ -967,7 +970,7 @@ static struct clk mlb_clk = {
 static struct clk mstick_clk = {
 	.name = "mstick_clk",
 	.id = 0,
-	.parent = &cpu_clk,
+	.parent = &peri_pll_clk,
 	.recalc = _clk_mstick1_recalc,
 	.enable = _clk_enable,
 	.enable_reg = MXC_CCM_CGR1,
@@ -1050,10 +1053,10 @@ static struct clk spba_clk = {
 static struct clk spdif_clk[] = {
 	{
 	 .name = "spdif_clk",
-	 .parent = &ipg_clk,
+	 .parent = &peri_pll_clk,
 	 .enable = _clk_enable,
 	 .enable_reg = MXC_CCM_CGR2,
-	 .enable_shift = MXC_CCM_CGR2_SPBA_OFFSET,
+	 .enable_shift = MXC_CCM_CGR2_SPDIF_OFFSET,
 	 .disable = _clk_disable,},
 	{
 	 .name = "spdif_audio_clk",
@@ -1418,53 +1421,35 @@ static void mxc_update_clocks(void)
 
 	if (reg & MXC_CCM_PDR0_PER_SEL)
 		perclk_clk.parent = &cpu_clk;
-	else
-		perclk_clk.parent = &peri_pll_clk;
 
 	reg = __raw_readl(MXC_CCM_PDR1);
 	if (reg & MXC_CCM_PDR1_MSHC_M_U)
 		mstick_clk.parent = &cpu_clk;
-	else
-		mstick_clk.parent = &peri_pll_clk;
 
 	reg = __raw_readl(MXC_CCM_PDR2);
 	if (reg & MXC_CCM_PDR2_CSI_M_U)
 		csi_clk.parent = &cpu_clk;
-	else
-		csi_clk.parent = &peri_pll_clk;
-
 	if (reg & MXC_CCM_PDR2_SSI_M_U) {
 		ssi_clk[0].parent = &cpu_clk;
 		ssi_clk[1].parent = &cpu_clk;
-	} else {
-		ssi_clk[0].parent = &peri_pll_clk;
-		ssi_clk[1].parent = &peri_pll_clk;
 	}
+
 	reg = __raw_readl(MXC_CCM_PDR3);
 	if (reg & MXC_CCM_PDR3_SPDIF_M_U)
 		spdif_clk[0].parent = &cpu_clk;
-	else
-		spdif_clk[0].parent = &peri_pll_clk;
 
 	if (reg & MXC_CCM_PDR3_UART_M_U)
 		uart_per_clk.parent = &cpu_clk;
-	else
-		uart_per_clk.parent = &peri_pll_clk;
 
 	if (reg & MXC_CCM_PDR3_ESDHC_M_U) {
 		sdhc_clk[0].parent = &cpu_clk;
 		sdhc_clk[1].parent = &cpu_clk;
 		sdhc_clk[2].parent = &cpu_clk;
-	} else {
-		sdhc_clk[0].parent = &peri_pll_clk;
-		sdhc_clk[1].parent = &peri_pll_clk;
-		sdhc_clk[2].parent = &peri_pll_clk;
 	}
+
 	reg = __raw_readl(MXC_CCM_PDR4);
 	if (reg & MXC_CCM_PDR4_USB_M_U)
 		usb_clk[0].parent = &cpu_clk;
-	else
-		usb_clk[0].parent = &peri_pll_clk;
 
 	mxc_clockout_scan();
 }
@@ -1476,11 +1461,13 @@ int __init mxc_clocks_init(void)
 		clk_register(*clkp);
 
 	/* Turn off all possible clocks */
-	__raw_writel(MXC_CCM_CGR0_EMI_MASK, MXC_CCM_CGR0);
+	__raw_writel(MXC_CCM_CGR0_ECT_MASK | MXC_CCM_CGR0_EMI_MASK,
+		     MXC_CCM_CGR0);
 	__raw_writel(MXC_CCM_CGR1_GPIO1_MASK | MXC_CCM_CGR1_GPIO2_MASK |
 		     MXC_CCM_CGR1_GPIO3_MASK | MXC_CCM_CGR1_GPT_MASK |
 		     MXC_CCM_CGR1_IOMUXC_MASK, MXC_CCM_CGR1);
 	__raw_writel(MXC_CCM_CGR2_MAX_MASK | MXC_CCM_CGR2_SPBA_MASK,
+		     MXC_CCM_CGR2_AUDMUX_MASK | MXC_CCM_CGR2_MAX_ENABLE |
 		     MXC_CCM_CGR2);
 	__raw_writel(MXC_CCM_CGR3_IIM_MASK, MXC_CCM_CGR3);
 
@@ -1489,6 +1476,8 @@ int __init mxc_clocks_init(void)
 
 	/* This will propagate to all children and init all the clock rates */
 	propagate_rate(&ckih_clk);
+	propagate_rate(&ckil_clk);
+	propagate_rate(&ckie_clk);
 
 	clk_enable(&mcu_pll_clk);
 	clk_enable(&gpt_clk);
diff --git a/arch/arm/mach-mx35/crm_regs.h b/arch/arm/mach-mx35/crm_regs.h
index 4840fad..be90f27 100644
--- a/arch/arm/mach-mx35/crm_regs.h
+++ b/arch/arm/mach-mx35/crm_regs.h
@@ -261,6 +261,7 @@
 #define MXC_CCM_CGR2_WDOG_MASK                	(0x3 << 24)
 #define MXC_CCM_CGR2_MAX_OFFSET              	26
 #define MXC_CCM_CGR2_MAX_MASK                	(0x3 << 26)
+#define MXC_CCM_CGR2_MAX_ENABLE                	(0x2 << 26)
 #define MXC_CCM_CGR2_AUDMUX_OFFSET              30
 #define MXC_CCM_CGR2_AUDMUX_MASK                (0x3 << 30)
 
@@ -406,8 +407,8 @@
 #define MXC_CCM_COSR_SSI2_TX_SRC_SEL_MASK       (0x3 << 22)
 #define MXC_CCM_COSR_SSI2_TX_SRC_SEL_OFFSET     22
 #define MXC_CCM_COSR_ASRC_AUDIO_EN              (1 << 24)
-#define MXC_CCM_COSR_ASRC_AUDIO_PODF_MASK       (0x3F << 25)
-#define MXC_CCM_COSR_ASRC_AUDIO_PODF_OFFSET     25
+#define MXC_CCM_COSR_ASRC_AUDIO_PODF_MASK       (0x3F << 26)
+#define MXC_CCM_COSR_ASRC_AUDIO_PODF_OFFSET     26
 
 /*
  * PMCR0 register offsets
-- 
1.5.4.4

