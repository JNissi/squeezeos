From c3580dd09981f7705e65853d1bd5a9accfcf991c Mon Sep 17 00:00:00 2001
From: Dinh Nguyen <Dinh.Nguyen@freescale.com>
Date: Mon, 21 Jul 2008 15:55:37 -0500
Subject: [PATCH] ENGR00083330-13 Fix Devtech's USB code integration

Fix a fault when doing a rmmod after an insmod for the
USB host software. Also fixed a kconfig option for
MX31-3DS USB OTG port.

Signed-off-by: Dinh Nguyen <Dinh.Nguyen@freescale.com>
---
 arch/arm/plat-mxc/isp1301xc.c      |    3 ++-
 arch/arm/plat-mxc/isp1504xc.c      |    5 +++--
 arch/arm/plat-mxc/mc13783_xc.c     |    3 ++-
 arch/arm/plat-mxc/usb_common.c     |    4 +---
 arch/arm/plat-mxc/utmixc.c         |    7 ++++---
 drivers/usb/host/Kconfig           |    2 +-
 include/asm-arm/arch-mxc/fsl_usb.h |    2 +-
 include/linux/usb/fsl_xcvr.h       |    7 +++++--
 8 files changed, 19 insertions(+), 14 deletions(-)

diff --git a/arch/arm/plat-mxc/isp1301xc.c b/arch/arm/plat-mxc/isp1301xc.c
index 4954ee3..006b38e 100644
--- a/arch/arm/plat-mxc/isp1301xc.c
+++ b/arch/arm/plat-mxc/isp1301xc.c
@@ -219,7 +219,8 @@ static inline void isp1301_set_serial_dev(void)
 			  (DP_PULLDOWN | DM_PULLDOWN | DP_PULLUP));
 }
 
-static void isp1301_set_vbus_power(struct fsl_xcvr_ops *this, int on)
+static void isp1301_set_vbus_power(struct fsl_xcvr_ops *this,
+				   struct fsl_usb2_platform_data *pdata, int on)
 {
 	pr_debug("%s(on=%d)\n", __FUNCTION__, on);
 	if (on) {
diff --git a/arch/arm/plat-mxc/isp1504xc.c b/arch/arm/plat-mxc/isp1504xc.c
index ef18c90..37f4e92 100644
--- a/arch/arm/plat-mxc/isp1504xc.c
+++ b/arch/arm/plat-mxc/isp1504xc.c
@@ -148,9 +148,10 @@ static void isp1508_fix(u32 *view)
  * @param       view  viewport register
  * @param       on    power on or off
  */
-static void isp1504_set_vbus_power(struct fsl_xcvr_ops *this, int on)
+static void isp1504_set_vbus_power(struct fsl_xcvr_ops *this,
+				   struct fsl_usb2_platform_data *pdata, int on)
 {
-	u32 *view = this->pdata->regs + ULPIVW_OFF;
+	u32 *view = pdata->regs + ULPIVW_OFF;
 
 	pr_debug("real %s(on=%d) view=0x%p\n", __FUNCTION__, on, view);
 
diff --git a/arch/arm/plat-mxc/mc13783_xc.c b/arch/arm/plat-mxc/mc13783_xc.c
index 8cbc54d..16cba70 100644
--- a/arch/arm/plat-mxc/mc13783_xc.c
+++ b/arch/arm/plat-mxc/mc13783_xc.c
@@ -168,7 +168,8 @@ static inline void mc13783_set_peripheral(void)
 		printk(KERN_ERR "mc13783_set_peripheral failed\n");
 }
 
-void mc13783_set_vbus_power(struct fsl_xcvr_ops *this, int on)
+void mc13783_set_vbus_power(struct fsl_xcvr_ops *this,
+			    struct fsl_usb2_platform_data *pdata, int on)
 {
 	if (on) {
 		p_event = MC13783_USB_VBUS_ON;
diff --git a/arch/arm/plat-mxc/usb_common.c b/arch/arm/plat-mxc/usb_common.c
index 7e01a8f..72ea2f4 100644
--- a/arch/arm/plat-mxc/usb_common.c
+++ b/arch/arm/plat-mxc/usb_common.c
@@ -194,7 +194,7 @@ struct platform_device *host_pdev_register(struct resource *res, int n_res,
 void fsl_platform_set_vbus_power(struct fsl_usb2_platform_data *pdata, int on)
 {
 	if (pdata->xcvr_ops && pdata->xcvr_ops->set_vbus_power)
-		pdata->xcvr_ops->set_vbus_power(pdata->xcvr_ops, on);
+		pdata->xcvr_ops->set_vbus_power(pdata->xcvr_ops, pdata, on);
 }
 EXPORT_SYMBOL(fsl_platform_set_vbus_power);
 
@@ -338,7 +338,6 @@ int fsl_usb_host_init(struct platform_device *pdev)
 	pdata->xcvr_ops = xops;
 	pdata->xcvr_type = xops->xcvr_type;
 	pdata->pdev = pdev;
-	xops->pdata = pdata;
 
 	if (fsl_check_usbclk() != 0)
 		return -EINVAL;
@@ -575,7 +574,6 @@ int usbotg_init(struct platform_device *pdev)
 	pdata->xcvr_ops = xops;
 	pdata->xcvr_type = xops->xcvr_type;
 	pdata->pdev = pdev;
-	xops->pdata = pdata;
 
 	if (!otg_used) {
 		if (fsl_check_usbclk() != 0)
diff --git a/arch/arm/plat-mxc/utmixc.c b/arch/arm/plat-mxc/utmixc.c
index ccf4a8c..c0626f5 100644
--- a/arch/arm/plat-mxc/utmixc.c
+++ b/arch/arm/plat-mxc/utmixc.c
@@ -40,12 +40,13 @@ static void usb_utmi_uninit(struct fsl_xcvr_ops *this)
  * @param       view  viewport register
  * @param       on    power on or off
  */
-static void set_power(struct fsl_xcvr_ops *this, int on)
+static void set_power(struct fsl_xcvr_ops *this,
+		      struct fsl_usb2_platform_data *pdata, int on)
 {
-	struct device *dev = &this->pdata->pdev->dev;
+	struct device *dev = &pdata->pdev->dev;
 	struct regulator *usbotg_regux;
 
-	pr_debug("real %s(on=%d) pdata=0x%p\n", __func__, on, this->pdata);
+	pr_debug("real %s(on=%d) pdata=0x%p\n", __func__, on, pdata);
 	if (machine_is_mx37_3ds()) {
 		usbotg_regux = regulator_get(dev, "DCDC2");
 		if (on) {
diff --git a/drivers/usb/host/Kconfig b/drivers/usb/host/Kconfig
index b3027e4..f5b701e 100644
--- a/drivers/usb/host/Kconfig
+++ b/drivers/usb/host/Kconfig
@@ -99,7 +99,7 @@ config USB_EHCI_FSL_1301
 
 config USB_EHCI_FSL_1504
 	bool "Philips ISP1504"
-	depends on MACH_MX27ADS || MACH_MX31ADS || MACH_MX32ADS
+	depends on MACH_MX27ADS || MACH_MX31ADS || MACH_MX32ADS ||MACH_MX31_3DS
 	---help---
 	  Enable support for the High Speed Philips ISP1504 transceiver.
 
diff --git a/include/asm-arm/arch-mxc/fsl_usb.h b/include/asm-arm/arch-mxc/fsl_usb.h
index 5803c2d..1444a29 100644
--- a/include/asm-arm/arch-mxc/fsl_usb.h
+++ b/include/asm-arm/arch-mxc/fsl_usb.h
@@ -53,5 +53,5 @@ static inline void
 fsl_platform_set_vbus_power(struct fsl_usb2_platform_data *pdata, int on)
 {
 	if (pdata->xcvr_ops && pdata->xcvr_ops->set_vbus_power)
-		pdata->xcvr_ops->set_vbus_power(pdata->xcvr_ops, on);
+		pdata->xcvr_ops->set_vbus_power(pdata->xcvr_ops, pdata, on);
 }
diff --git a/include/linux/usb/fsl_xcvr.h b/include/linux/usb/fsl_xcvr.h
index 8cc8172..e63779a 100644
--- a/include/linux/usb/fsl_xcvr.h
+++ b/include/linux/usb/fsl_xcvr.h
@@ -2,6 +2,9 @@
 #define __LINUX_USB_FSL_XCVR_H
 #include <linux/platform_device.h>
 #include <linux/regulator/regulator.h>
+
+struct fsl_usb2_platform_data;
+
 /**
  * @name: transceiver name
  * @xcvr_type: one of PORTSC_PTS_{UTMI,SERIAL,ULPI}
@@ -15,14 +18,14 @@
 struct fsl_xcvr_ops {
 	char *name;
 	u32 xcvr_type;
-	struct fsl_usb2_platform_data *pdata;
 
 	void (*init)(struct fsl_xcvr_ops *ops);
 	void (*uninit)(struct fsl_xcvr_ops *ops);
 	void (*suspend)(struct fsl_xcvr_ops *ops);
 	void (*set_host)(void);
 	void (*set_device)(void);
-	void (*set_vbus_power)(struct fsl_xcvr_ops *ops, int on);
+	void (*set_vbus_power)(struct fsl_xcvr_ops *ops,
+			       struct fsl_usb2_platform_data *pdata, int on);
 	void (*set_remote_wakeup)(u32 *view);
 	void (*pullup)(int on);
 };
-- 
1.5.4.4

