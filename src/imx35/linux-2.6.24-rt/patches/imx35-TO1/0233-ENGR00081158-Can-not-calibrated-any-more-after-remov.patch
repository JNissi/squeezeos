From a9acdf8000b70b7839fbb3a9d7f8af6baa787e98 Mon Sep 17 00:00:00 2001
From: Fred Fan <r01011@freescale.com>
Date: Fri, 27 Jun 2008 12:06:05 +0800
Subject: [PATCH] ENGR00081158 Can not calibrated any more after removing the default calibration.

Changes the penup threshold from 10 to 30 for i.MX35 3stack board.

Signed-off-by: Fred Fan <r01011@freescale.com>
---
 arch/arm/mach-mx35/mx35_3stack.c    |    1 +
 drivers/input/touchscreen/tsc2007.c |   16 +++++++++++++---
 include/asm-arm/arch-mxc/mxc.h      |    1 +
 3 files changed, 15 insertions(+), 3 deletions(-)

diff --git a/arch/arm/mach-mx35/mx35_3stack.c b/arch/arm/mach-mx35/mx35_3stack.c
index 01c0120..e92cb0d 100644
--- a/arch/arm/mach-mx35/mx35_3stack.c
+++ b/arch/arm/mach-mx35/mx35_3stack.c
@@ -260,6 +260,7 @@ static inline void mxc_init_bl(void)
 
 static struct mxc_tsc_platform_data tsc2007_data = {
 	.vdd_reg = "SW1",
+	.penup_threshold = 30,
 	.active = gpio_tsc_active,
 	.inactive = gpio_tsc_inactive,
 };
diff --git a/drivers/input/touchscreen/tsc2007.c b/drivers/input/touchscreen/tsc2007.c
index 04be406..82f14f0 100644
--- a/drivers/input/touchscreen/tsc2007.c
+++ b/drivers/input/touchscreen/tsc2007.c
@@ -77,6 +77,7 @@ struct tsc2007_data {
 	struct completion penup_completion;
 	enum tsc2007_m m;
 	int penirq;
+	int penup_threshold;
 	struct regulator *vdd_reg;
 };
 
@@ -186,14 +187,14 @@ static int tsc2007ts_thread(void *v)
 		input_report_abs(d->idev, ABS_PRESSURE, p);
 		input_sync(d->idev);
 
-		while (p > 10) {
+		while (p > d->penup_threshold) {
 			tsc2007_restart_pen_up_timer(d);
 			wait_for_completion_interruptible(&d->penup_completion);
 			/* Pen Down */
 			tsc2007_read_xpos(d, PD_PENIRQ_DISARM, &x);
 			tsc2007_read_ypos(d, PD_PENIRQ_DISARM, &y);
 			tsc2007_read_pressure(d, PD_PENIRQ_DISARM, &p);
-			if (p <= 10)
+			if (p <= d->penup_threshold)
 				break;
 
 			input_report_abs(d->idev, ABS_X, 4096 - x);
@@ -328,13 +329,22 @@ static int tsc2007_i2c_probe(struct i2c_client *client)
 
 	tsc_data = (struct mxc_tsc_platform_data *)(client->dev).platform_data;
 	if (tsc_data && tsc_data->vdd_reg) {
+		if (tsc_data->penup_threshold > (ADC_MAX >> 3))
+			data->penup_threshold = (ADC_MAX >> 3);
+		else if (tsc_data->penup_threshold > 0)
+			data->penup_threshold = tsc_data->penup_threshold;
+		else
+			data->penup_threshold = 10;
+
 		data->vdd_reg = regulator_get(&client->dev, tsc_data->vdd_reg);
 		if (data->vdd_reg)
 			regulator_enable(data->vdd_reg);
 		if (tsc_data->active)
 			tsc_data->active();
-	} else
+	} else {
 		data->vdd_reg = NULL;
+		data->penup_threshold = 10;
+	}
 
 	err = tsc2007_powerdown(data);
 	if (err >= 0) {
diff --git a/include/asm-arm/arch-mxc/mxc.h b/include/asm-arm/arch-mxc/mxc.h
index b78ab7d..dd214a7 100644
--- a/include/asm-arm/arch-mxc/mxc.h
+++ b/include/asm-arm/arch-mxc/mxc.h
@@ -111,6 +111,7 @@ struct mxc_lcd_platform_data {
 
 struct mxc_tsc_platform_data {
 	char *vdd_reg;
+	int penup_threshold;
 	void (*active) (void);
 	void (*inactive) (void);
 };
-- 
1.5.4.4

