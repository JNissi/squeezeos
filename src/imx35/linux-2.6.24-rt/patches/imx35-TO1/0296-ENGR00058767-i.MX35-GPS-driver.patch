From 96928a67591bc7afcf63bdd75ca6b8f129294d6c Mon Sep 17 00:00:00 2001
From: Jun Li <r65092@freescale.com>
Date: Tue, 29 Jul 2008 17:22:42 +0800
Subject: [PATCH] ENGR00058767 i.MX35 GPS driver

Required to support GPS driver in MX35 platform

Signed-off-by: Jun Li <r65092@freescale.com>
---
 arch/arm/configs/imx35_3stack_defconfig |    3 +-
 arch/arm/mach-mx35/board-mx35_3stack.h  |    2 +-
 arch/arm/mach-mx35/mx35_3stack.c        |   25 +++++++++++++
 arch/arm/mach-mx35/mx35_3stack_gpio.c   |   59 +++++++++++++++++++++++++++++++
 arch/arm/mach-mx35/serial.h             |    8 ++--
 drivers/mxc/gps_ioctrl/Kconfig          |    2 +-
 6 files changed, 92 insertions(+), 7 deletions(-)

diff --git a/arch/arm/configs/imx35_3stack_defconfig b/arch/arm/configs/imx35_3stack_defconfig
index 74bac81..603319b 100644
--- a/arch/arm/configs/imx35_3stack_defconfig
+++ b/arch/arm/configs/imx35_3stack_defconfig
@@ -1,7 +1,7 @@
 #
 # Automatically generated make config: don't edit
 # Linux kernel version: 2.6.24
-# Tue Jul 29 15:46:06 2008
+# Tue Jul 29 16:50:35 2008
 #
 CONFIG_ARM=y
 CONFIG_SYS_SUPPORTS_APM_EMULATION=y
@@ -1323,6 +1323,7 @@ CONFIG_MXC_BLUETOOTH=m
 #
 # Broadcom GPS ioctrl support
 #
+CONFIG_GPS_IOCTRL=m
 
 #
 # MXC Media Local Bus Driver
diff --git a/arch/arm/mach-mx35/board-mx35_3stack.h b/arch/arm/mach-mx35/board-mx35_3stack.h
index 74d6451..99c6bc4 100644
--- a/arch/arm/mach-mx35/board-mx35_3stack.h
+++ b/arch/arm/mach-mx35/board-mx35_3stack.h
@@ -71,7 +71,7 @@
 #define UART1_ENABLED           1
 /*! @} */
 /* UART 2 configuration */
-#define UART2_MODE              MODE_DCE
+#define UART2_MODE              MODE_DTE
 #define UART2_IR                NO_IRDA
 #define UART2_ENABLED           1
 
diff --git a/arch/arm/mach-mx35/mx35_3stack.c b/arch/arm/mach-mx35/mx35_3stack.c
index 0fa849f..c2f2344 100644
--- a/arch/arm/mach-mx35/mx35_3stack.c
+++ b/arch/arm/mach-mx35/mx35_3stack.c
@@ -602,6 +602,30 @@ static void __init mxc_init_pata(void)
 }
 #endif				/* CONFIG_PATA_FSL */
 
+#if defined(CONFIG_GPS_IOCTRL) || defined(CONFIG_GPS_IOCTRL_MODULE)
+static struct mxc_gps_platform_data gps_data = {
+	.core_reg = "SW1",
+	.analog_reg = "SW2",
+};
+
+static struct platform_device mxc_gps_device = {
+	.name = "gps_ioctrl",
+	.id = 0,
+	.dev = {
+		.platform_data = &gps_data,
+		},
+};
+
+static void __init mxc_init_gps(void)
+{
+	(void)platform_device_register(&mxc_gps_device);
+}
+#else
+static void __init mxc_init_gps(void)
+{
+}
+#endif
+
 static void pmic_power_off(void)
 {
 #ifdef CONFIG_MXC_PMIC_MC9SDZ60
@@ -691,6 +715,7 @@ static void __init mxc_board_init(void)
 	mxc_init_mmc();
 	mxc_init_pata();
 	mxc_init_bluetooth();
+	mxc_init_gps();
 	mxc_init_mlb();
 
 	pm_power_off = pmic_power_off;
diff --git a/arch/arm/mach-mx35/mx35_3stack_gpio.c b/arch/arm/mach-mx35/mx35_3stack_gpio.c
index c8fa0ac..3761a60 100644
--- a/arch/arm/mach-mx35/mx35_3stack_gpio.c
+++ b/arch/arm/mach-mx35/mx35_3stack_gpio.c
@@ -999,6 +999,65 @@ void gpio_deactivate_esai_ports(void)
 EXPORT_SYMBOL(gpio_deactivate_esai_ports);
 
 /*!
+ * This function enable and reset GPS GPIO
+ */
+void gpio_gps_active(void)
+{
+	/* PWR_EN_GPS is set to be 0, will be toggled on in app by ioctl */
+	pmic_gpio_set_bit_val(MCU_GPIO_REG_GPIO_CONTROL_2, 0, 0);
+
+	/* GPS 32KHz clock enbale */
+	pmic_gpio_set_bit_val(MCU_GPIO_REG_GPIO_CONTROL_1, 7, 1);
+
+	/* GPS reset */
+	pmic_gpio_set_bit_val(MCU_GPIO_REG_RESET_1, 5, 0);
+	msleep(5);
+	pmic_gpio_set_bit_val(MCU_GPIO_REG_RESET_1, 5, 1);
+	msleep(5);
+}
+
+EXPORT_SYMBOL(gpio_gps_active);
+
+/*!
+ * This function get GPS GPIO status.
+ */
+int gpio_gps_access(int para)
+{
+	unsigned int gps_val;
+
+	if (para & 0x4) {	/* Read GPIO */
+		if (para & 0x1) /* Read PWR_EN */
+			pmic_gpio_get_bit_val(MCU_GPIO_REG_GPIO_CONTROL_2, 0,
+						&gps_val);
+		else		/* Read nReset */
+			pmic_gpio_get_bit_val(MCU_GPIO_REG_RESET_1, 5,
+						&gps_val);
+		return gps_val;
+	} else {		/* Write GPIO */
+		gps_val = (para & 0x2) ? 1 : 0;
+		if (para & 0x1)
+			pmic_gpio_set_bit_val(MCU_GPIO_REG_GPIO_CONTROL_2, 0,
+						gps_val);
+		else
+			pmic_gpio_set_bit_val(MCU_GPIO_REG_RESET_1, 5, gps_val);
+	}
+	return 0;
+}
+
+EXPORT_SYMBOL(gpio_gps_access);
+
+/*!
+ * This function disable GPS GPIO
+ */
+void gpio_gps_inactive(void)
+{
+	/* GPS disable */
+	pmic_gpio_set_bit_val(MCU_GPIO_REG_GPIO_CONTROL_2, 0, 0);
+}
+
+EXPORT_SYMBOL(gpio_gps_inactive);
+
+/*!
  * The MLB gpio configuration routine
  */
 void gpio_mlb_active(void)
diff --git a/arch/arm/mach-mx35/serial.h b/arch/arm/mach-mx35/serial.h
index d18bb22..8fae583 100644
--- a/arch/arm/mach-mx35/serial.h
+++ b/arch/arm/mach-mx35/serial.h
@@ -60,10 +60,10 @@
  */
 #define UART1_UFCR_TXTL         16
 /* UART 2 configuration */
-#define UART2_HW_FLOW           0
-#define UART2_UCR4_CTSTL        -1
-#define UART2_DMA_ENABLE        0
-#define UART2_DMA_RXBUFSIZE     512
+#define UART2_HW_FLOW           1
+#define UART2_UCR4_CTSTL        16
+#define UART2_DMA_ENABLE        1
+#define UART2_DMA_RXBUFSIZE     1024
 #define UART2_UFCR_RXTL         16
 #define UART2_UFCR_TXTL         16
 /* UART 3 configuration */
diff --git a/drivers/mxc/gps_ioctrl/Kconfig b/drivers/mxc/gps_ioctrl/Kconfig
index 92dcb6a..d59ef8e 100644
--- a/drivers/mxc/gps_ioctrl/Kconfig
+++ b/drivers/mxc/gps_ioctrl/Kconfig
@@ -6,7 +6,7 @@ menu "Broadcom GPS ioctrl support"
 
 config GPS_IOCTRL
 	tristate "GPS ioctrl support"
-	depends on MACH_MX31_3DS
+	depends on MACH_MX31_3DS || MACH_MX35_3DS
 	default m
 	---help---
 	  Say Y to enable Broadcom GPS ioctrl on MXC platform.
-- 
1.5.4.4

