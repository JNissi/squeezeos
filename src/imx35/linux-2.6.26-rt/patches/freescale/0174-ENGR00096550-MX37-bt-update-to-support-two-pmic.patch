From 00b03e0cc5e29e490500a73633f92fb57824b00e Mon Sep 17 00:00:00 2001
From: Katherine Lu <katherine.lu@freescale.com>
Date: Tue, 28 Oct 2008 13:56:06 +0800
Subject: [PATCH] ENGR00096550 MX37: bt update to support two pmic

MX37: bt update to support two pmic

Signed-off-by: Katherine Lu <katherine.lu@freescale.com>
---
 arch/arm/mach-mx37/mx37_3stack.c        |   14 +++++++++++---
 drivers/regulator/mc13892/reg-mc13892.c |   10 ++++++++--
 2 files changed, 19 insertions(+), 5 deletions(-)

diff --git a/arch/arm/mach-mx37/mx37_3stack.c b/arch/arm/mach-mx37/mx37_3stack.c
index d50bb30..c4fac45 100644
--- a/arch/arm/mach-mx37/mx37_3stack.c
+++ b/arch/arm/mach-mx37/mx37_3stack.c
@@ -581,9 +581,17 @@ static inline void mxc_init_mmc(void)
 
 static void bt_reset(void)
 {
-	mxc_request_iomux(MX37_PIN_AUD5_RXC, IOMUX_CONFIG_GPIO);
-	mxc_set_gpio_dataout(MX37_PIN_AUD5_RXC, 1);
-	mxc_set_gpio_direction(MX37_PIN_AUD5_RXC, 0);
+	struct regulator *gpo4;
+	if (board_is_mx37(BOARD_REV_2)) {
+		gpo4 = regulator_get(NULL, "GPO4");
+		if (!IS_ERR(gpo4))
+			regulator_enable(gpo4);
+		regulator_put(gpo4, NULL);
+	} else {
+		mxc_request_iomux(MX37_PIN_AUD5_RXC, IOMUX_CONFIG_GPIO);
+		mxc_set_gpio_dataout(MX37_PIN_AUD5_RXC, 1);
+		mxc_set_gpio_direction(MX37_PIN_AUD5_RXC, 0);
+	}
 }
 
 static struct mxc_bt_platform_data mxc_bt_data = {
diff --git a/drivers/regulator/mc13892/reg-mc13892.c b/drivers/regulator/mc13892/reg-mc13892.c
index 96f9c0b..46dacc8 100644
--- a/drivers/regulator/mc13892/reg-mc13892.c
+++ b/drivers/regulator/mc13892/reg-mc13892.c
@@ -255,6 +255,11 @@ enum {
 #define GPO4_EN_ENABLE	1
 #define GPO4_EN_DISABLE	0
 
+#define GPO4_ADIN_LSH	21
+#define GPO4_ADIN_WID	1
+#define GPO4_ADIN_ENABLE	1
+#define GPO4_ADIN_DISABLE	0
+
 static int mc13892_get_sw_hi_bit(int sw)
 {
 	unsigned int register_val = 0;
@@ -1377,8 +1382,9 @@ static int mc13892_gpo_enable(struct regulator *reg)
 		register_mask = BITFMASK(GPO3_EN);
 		break;
 	case MC13892_GPO4:
-		register_val = BITFVAL(GPO4_EN, GPO4_EN_ENABLE);
-		register_mask = BITFMASK(GPO4_EN);
+		register_val = BITFVAL(GPO4_EN, GPO4_EN_ENABLE) +
+		    BITFVAL(GPO4_ADIN, GPO4_ADIN_DISABLE);
+		register_mask = BITFMASK(GPO4_EN) + BITFMASK(GPO4_ADIN);
 		break;
 	default:
 		return -EINVAL;
-- 
1.5.4.4

