From aa53dc7a46b11c1897e247afb12616cd5f72fbd8 Mon Sep 17 00:00:00 2001
From: Liu Ying <b17645@freescale.com>
Date: Tue, 20 Jan 2009 13:06:42 +0800
Subject: [PATCH] ENGR00105180 Enhance the frame rate of ov3640 camera for VGA mode

Enhance the frame rate of ov3640 camera for VGA mode.
The frame rate can be set to 15fps or 30fps.

Signed-off-by: Liu Ying <b17645@freescale.com>
---
 drivers/media/video/mxc/capture/ov3640.c |  534 +++++++++++++++++++-----------
 1 files changed, 348 insertions(+), 186 deletions(-)

diff --git a/drivers/media/video/mxc/capture/ov3640.c b/drivers/media/video/mxc/capture/ov3640.c
index 16ef199..c9b2f45 100644
--- a/drivers/media/video/mxc/capture/ov3640.c
+++ b/drivers/media/video/mxc/capture/ov3640.c
@@ -1,5 +1,5 @@
 /*
- * Copyright 2005-2008 Freescale Semiconductor, Inc. All Rights Reserved.
+ * Copyright 2005-2009 Freescale Semiconductor, Inc. All Rights Reserved.
  */
 
 /*
@@ -36,7 +36,7 @@
 
 
 /* Check these values! */
-#define MIN_FPS 5
+#define MIN_FPS 15
 #define MAX_FPS 30
 #define DEFAULT_FPS 30
 
@@ -52,9 +52,15 @@ enum ov3640_mode {
 	ov3640_mode_MAX = 3
 };
 
+enum ov3640_frame_rate {
+	ov3640_15_fps,
+	ov3640_30_fps
+};
+
 struct reg_value {
 	u16 u16RegAddr;
 	u8 u8Val;
+	u8 u8Mask;
 	u32 u32Delay_ms;
 };
 
@@ -89,176 +95,280 @@ struct sensor {
 
 	u32 mclk;
 	int csi;
-
 } ov3640_data;
 
-static struct reg_value ov3640_setting_QXGA_2048_1536[] = {
-	{0x3012, 0x80, 0}, {0x304d, 0x45, 0}, {0x30a7, 0x5e, 0},
-	{0x3087, 0x16, 0}, {0x309c, 0x1a, 0}, {0x30a2, 0xe4, 0},
-	{0x30aa, 0x42, 0}, {0x30b0, 0xff, 0}, {0x30b1, 0xff, 0},
-	{0x30b2, 0x10, 0}, {0x300e, 0x32, 0}, {0x300f, 0x21, 0},
-	{0x3010, 0x20, 0}, {0x3011, 0x00, 0}, {0x304c, 0x81, 0},
-	{0x30d7, 0x10, 0}, {0x30d9, 0x0d, 0}, {0x30db, 0x08, 0},
-	{0x3016, 0x82, 0}, {0x3018, 0x38, 0}, {0x3019, 0x30, 0},
-	{0x301a, 0x61, 0}, {0x307d, 0x00, 0}, {0x3087, 0x02, 0},
-	{0x3082, 0x20, 0}, {0x3015, 0x12, 0}, {0x3014, 0x04, 0},
-	{0x3013, 0xf7, 0}, {0x303c, 0x08, 0}, {0x303d, 0x18, 0},
-	{0x303e, 0x06, 0}, {0x303f, 0x0c, 0}, {0x3030, 0x62, 0},
-	{0x3031, 0x26, 0}, {0x3032, 0xe6, 0}, {0x3033, 0x6e, 0},
-	{0x3034, 0xea, 0}, {0x3035, 0xae, 0}, {0x3036, 0xa6, 0},
-	{0x3037, 0x6a, 0}, {0x3104, 0x02, 0}, {0x3105, 0xfd, 0},
-	{0x3106, 0x00, 0}, {0x3107, 0xff, 0}, {0x3300, 0x12, 0},
-	{0x3301, 0xde, 0}, {0x3302, 0xcf, 0}, {0x3312, 0x26, 0},
-	{0x3314, 0x42, 0}, {0x3313, 0x2b, 0}, {0x3315, 0x42, 0},
-	{0x3310, 0xd0, 0}, {0x3311, 0xbd, 0}, {0x330c, 0x18, 0},
-	{0x330d, 0x18, 0}, {0x330e, 0x56, 0}, {0x330f, 0x5c, 0},
-	{0x330b, 0x1c, 0}, {0x3306, 0x5c, 0}, {0x3307, 0x11, 0},
-	{0x336a, 0x52, 0}, {0x3370, 0x46, 0}, {0x3376, 0x38, 0},
-	{0x30b8, 0x20, 0}, {0x30b9, 0x17, 0}, {0x30ba, 0x04, 0},
-	{0x30bb, 0x08, 0}, {0x3507, 0x06, 0}, {0x350a, 0x4f, 0},
-	{0x3100, 0x02, 0}, {0x3301, 0xde, 0}, {0x3304, 0x00, 0},
-	{0x3400, 0x01, 0}, {0x3404, 0x1d, 0}, {0x3600, 0xc4, 0},
-	{0x3302, 0xef, 0}, {0x3020, 0x01, 0}, {0x3021, 0x1d, 0},
-	{0x3022, 0x00, 0}, {0x3023, 0x0a, 0}, {0x3024, 0x08, 0},
-	{0x3025, 0x00, 0}, {0x3026, 0x06, 0}, {0x3027, 0x00, 0},
-	{0x335f, 0x68, 0}, {0x3360, 0x00, 0}, {0x3361, 0x00, 0},
-	{0x3362, 0x68, 0}, {0x3363, 0x00, 0}, {0x3364, 0x00, 0},
-	{0x3403, 0x00, 0}, {0x3088, 0x08, 0}, {0x3089, 0x00, 0},
-	{0x308a, 0x06, 0}, {0x308b, 0x00, 0}, {0x307c, 0x10, 0},
-	{0x3090, 0xc0, 0}, {0x304c, 0x84, 0}, {0x308d, 0x04, 0},
-	{0x3086, 0x03, 0}, {0x3086, 0x00, 0},
-
-	{0x3012, 0x0, 0}, {0x3020, 0x1, 0}, {0x3021, 0x1d, 0},
-	{0x3022, 0x0, 0}, {0x3023, 0xa, 0}, {0x3024, 0x8, 0},
-	{0x3025, 0x18, 0}, {0x3026, 0x6, 0}, {0x3027, 0xc, 0},
-	{0x302a, 0x6, 0}, {0x302b, 0x20, 0}, {0x3075, 0x44, 0},
-	{0x300d, 0x0, 0}, {0x30d7, 0x0, 0}, {0x3069, 0x40, 0},
-	{0x303e, 0x1, 0}, {0x303f, 0x80, 0}, {0x3302, 0x20, 0},
-	{0x335f, 0x68, 0}, {0x3360, 0x18, 0}, {0x3361, 0xc, 0},
-	{0x3362, 0x68, 0}, {0x3363, 0x8, 0}, {0x3364, 0x4, 0},
-	{0x3403, 0x42, 0}, {0x3088, 0x8, 0}, {0x3089, 0x0, 0},
-	{0x308a, 0x6, 0}, {0x308b, 0x0, 0},
+static struct reg_value ov3640_setting_15fps_QXGA_2048_1536[] = {
+	{0x3012, 0x80, 0, 0}, {0x304d, 0x45, 0, 0}, {0x30a7, 0x5e, 0, 0},
+	{0x3087, 0x16, 0, 0}, {0x309c, 0x1a, 0, 0}, {0x30a2, 0xe4, 0, 0},
+	{0x30aa, 0x42, 0, 0}, {0x30b0, 0xff, 0, 0}, {0x30b1, 0xff, 0, 0},
+	{0x30b2, 0x10, 0, 0}, {0x300e, 0x32, 0, 0}, {0x300f, 0x21, 0, 0},
+	{0x3010, 0x20, 0, 0}, {0x3011, 0x00, 0, 0}, {0x304c, 0x81, 0, 0},
+	{0x30d7, 0x10, 0, 0}, {0x30d9, 0x0d, 0, 0}, {0x30db, 0x08, 0, 0},
+	{0x3016, 0x82, 0, 0}, {0x3018, 0x38, 0, 0}, {0x3019, 0x30, 0, 0},
+	{0x301a, 0x61, 0, 0}, {0x307d, 0x00, 0, 0}, {0x3087, 0x02, 0, 0},
+	{0x3082, 0x20, 0, 0}, {0x3015, 0x12, 0, 0}, {0x3014, 0x04, 0, 0},
+	{0x3013, 0xf7, 0, 0}, {0x303c, 0x08, 0, 0}, {0x303d, 0x18, 0, 0},
+	{0x303e, 0x06, 0, 0}, {0x303f, 0x0c, 0, 0}, {0x3030, 0x62, 0, 0},
+	{0x3031, 0x26, 0, 0}, {0x3032, 0xe6, 0, 0}, {0x3033, 0x6e, 0, 0},
+	{0x3034, 0xea, 0, 0}, {0x3035, 0xae, 0, 0}, {0x3036, 0xa6, 0, 0},
+	{0x3037, 0x6a, 0, 0}, {0x3104, 0x02, 0, 0}, {0x3105, 0xfd, 0, 0},
+	{0x3106, 0x00, 0, 0}, {0x3107, 0xff, 0, 0}, {0x3300, 0x12, 0, 0},
+	{0x3301, 0xde, 0, 0}, {0x3302, 0xcf, 0, 0}, {0x3312, 0x26, 0, 0},
+	{0x3314, 0x42, 0, 0}, {0x3313, 0x2b, 0, 0}, {0x3315, 0x42, 0, 0},
+	{0x3310, 0xd0, 0, 0}, {0x3311, 0xbd, 0, 0}, {0x330c, 0x18, 0, 0},
+	{0x330d, 0x18, 0, 0}, {0x330e, 0x56, 0, 0}, {0x330f, 0x5c, 0, 0},
+	{0x330b, 0x1c, 0, 0}, {0x3306, 0x5c, 0, 0}, {0x3307, 0x11, 0, 0},
+	{0x336a, 0x52, 0, 0}, {0x3370, 0x46, 0, 0}, {0x3376, 0x38, 0, 0},
+	{0x30b8, 0x20, 0, 0}, {0x30b9, 0x17, 0, 0}, {0x30ba, 0x04, 0, 0},
+	{0x30bb, 0x08, 0, 0}, {0x3507, 0x06, 0, 0}, {0x350a, 0x4f, 0, 0},
+	{0x3100, 0x02, 0, 0}, {0x3301, 0xde, 0, 0}, {0x3304, 0x00, 0, 0},
+	{0x3400, 0x00, 0, 0}, {0x3404, 0x02, 0, 0}, {0x3600, 0xc4, 0, 0},
+	{0x3302, 0xef, 0, 0}, {0x3020, 0x01, 0, 0}, {0x3021, 0x1d, 0, 0},
+	{0x3022, 0x00, 0, 0}, {0x3023, 0x0a, 0, 0}, {0x3024, 0x08, 0, 0},
+	{0x3025, 0x00, 0, 0}, {0x3026, 0x06, 0, 0}, {0x3027, 0x00, 0, 0},
+	{0x335f, 0x68, 0, 0}, {0x3360, 0x00, 0, 0}, {0x3361, 0x00, 0, 0},
+	{0x3362, 0x68, 0, 0}, {0x3363, 0x00, 0, 0}, {0x3364, 0x00, 0, 0},
+	{0x3403, 0x00, 0, 0}, {0x3088, 0x08, 0, 0}, {0x3089, 0x00, 0, 0},
+	{0x308a, 0x06, 0, 0}, {0x308b, 0x00, 0, 0}, {0x307c, 0x10, 0, 0},
+	{0x3090, 0xc0, 0, 0}, {0x304c, 0x84, 0, 0}, {0x308d, 0x04, 0, 0},
+	{0x3086, 0x03, 0, 0}, {0x3086, 0x00, 0, 0}, {0x3012, 0x00, 0, 0},
+	{0x3020, 0x01, 0, 0}, {0x3021, 0x1d, 0, 0}, {0x3022, 0x00, 0, 0},
+	{0x3023, 0x0a, 0, 0}, {0x3024, 0x08, 0, 0}, {0x3025, 0x18, 0, 0},
+	{0x3026, 0x06, 0, 0}, {0x3027, 0x0c, 0, 0}, {0x302a, 0x06, 0, 0},
+	{0x302b, 0x20, 0, 0}, {0x3075, 0x44, 0, 0}, {0x300d, 0x00, 0, 0},
+	{0x30d7, 0x00, 0, 0}, {0x3069, 0x40, 0, 0}, {0x303e, 0x01, 0, 0},
+	{0x303f, 0x80, 0, 0}, {0x3302, 0x20, 0, 0}, {0x335f, 0x68, 0, 0},
+	{0x3360, 0x18, 0, 0}, {0x3361, 0x0c, 0, 0}, {0x3362, 0x68, 0, 0},
+	{0x3363, 0x08, 0, 0}, {0x3364, 0x04, 0, 0}, {0x3403, 0x42, 0, 0},
+	{0x3088, 0x08, 0, 0}, {0x3089, 0x00, 0, 0}, {0x308a, 0x06, 0, 0},
+	{0x308b, 0x00, 0, 0},
+};
+
+static struct reg_value ov3640_setting_15fps_XGA_1024_768[] = {
+	{0x3012, 0x80, 0, 0}, {0x304d, 0x45, 0, 0}, {0x30a7, 0x5e, 0, 0},
+	{0x3087, 0x16, 0, 0}, {0x309c, 0x1a, 0, 0}, {0x30a2, 0xe4, 0, 0},
+	{0x30aa, 0x42, 0, 0}, {0x30b0, 0xff, 0, 0}, {0x30b1, 0xff, 0, 0},
+	{0x30b2, 0x10, 0, 0}, {0x300e, 0x32, 0, 0}, {0x300f, 0x21, 0, 0},
+	{0x3010, 0x20, 0, 0}, {0x3011, 0x00, 0, 0}, {0x304c, 0x81, 0, 0},
+	{0x3016, 0x82, 0, 0}, {0x3018, 0x38, 0, 0}, {0x3019, 0x30, 0, 0},
+	{0x301a, 0x61, 0, 0}, {0x307d, 0x00, 0, 0}, {0x3087, 0x02, 0, 0},
+	{0x3082, 0x20, 0, 0}, {0x3015, 0x12, 0, 0}, {0x3014, 0x04, 0, 0},
+	{0x3013, 0xf7, 0, 0}, {0x303c, 0x08, 0, 0}, {0x303d, 0x18, 0, 0},
+	{0x303e, 0x06, 0, 0}, {0x303f, 0x0c, 0, 0}, {0x3030, 0x62, 0, 0},
+	{0x3031, 0x26, 0, 0}, {0x3032, 0xe6, 0, 0}, {0x3033, 0x6e, 0, 0},
+	{0x3034, 0xea, 0, 0}, {0x3035, 0xae, 0, 0}, {0x3036, 0xa6, 0, 0},
+	{0x3037, 0x6a, 0, 0}, {0x3104, 0x02, 0, 0}, {0x3105, 0xfd, 0, 0},
+	{0x3106, 0x00, 0, 0}, {0x3107, 0xff, 0, 0}, {0x3300, 0x12, 0, 0},
+	{0x3301, 0xde, 0, 0}, {0x3302, 0xcf, 0, 0}, {0x3312, 0x26, 0, 0},
+	{0x3314, 0x42, 0, 0}, {0x3313, 0x2b, 0, 0}, {0x3315, 0x42, 0, 0},
+	{0x3310, 0xd0, 0, 0}, {0x3311, 0xbd, 0, 0}, {0x330c, 0x18, 0, 0},
+	{0x330d, 0x18, 0, 0}, {0x330e, 0x56, 0, 0}, {0x330f, 0x5c, 0, 0},
+	{0x330b, 0x1c, 0, 0}, {0x3306, 0x5c, 0, 0}, {0x3307, 0x11, 0, 0},
+	{0x336a, 0x52, 0, 0}, {0x3370, 0x46, 0, 0}, {0x3376, 0x38, 0, 0},
+	{0x30b8, 0x20, 0, 0}, {0x30b9, 0x17, 0, 0}, {0x30ba, 0x04, 0, 0},
+	{0x30bb, 0x08, 0, 0}, {0x3507, 0x06, 0, 0}, {0x350a, 0x4f, 0, 0},
+	{0x3100, 0x02, 0, 0}, {0x3301, 0xde, 0, 0}, {0x3304, 0x00, 0, 0},
+	{0x3400, 0x01, 0, 0}, {0x3404, 0x1d, 0, 0}, {0x3600, 0xc4, 0, 0},
+	{0x3302, 0xef, 0, 0}, {0x3020, 0x01, 0, 0}, {0x3021, 0x1d, 0, 0},
+	{0x3022, 0x00, 0, 0}, {0x3023, 0x0a, 0, 0}, {0x3024, 0x08, 0, 0},
+	{0x3025, 0x00, 0, 0}, {0x3026, 0x06, 0, 0}, {0x3027, 0x00, 0, 0},
+	{0x335f, 0x68, 0, 0}, {0x3360, 0x00, 0, 0}, {0x3361, 0x00, 0, 0},
+	{0x3362, 0x34, 0, 0}, {0x3363, 0x00, 0, 0}, {0x3364, 0x00, 0, 0},
+	{0x3403, 0x00, 0, 0}, {0x3088, 0x04, 0, 0}, {0x3089, 0x00, 0, 0},
+	{0x308a, 0x03, 0, 0}, {0x308b, 0x00, 0, 0}, {0x307c, 0x10, 0, 0},
+	{0x3090, 0xc0, 0, 0}, {0x304c, 0x84, 0, 0}, {0x308d, 0x04, 0, 0},
+	{0x3086, 0x03, 0, 0}, {0x3086, 0x00, 0, 0}, {0x3011, 0x01, 0, 0},
+};
+
+static struct reg_value ov3640_setting_30fps_XGA_1024_768[] = {
+	{0x0, 0x0, 0}
 };
 
-static struct reg_value ov3640_setting_XGA_1024_768[] = {
-	{0x3012, 0x80, 0}, {0x304d, 0x45, 0}, {0x30a7, 0x5e, 0},
-	{0x3087, 0x16, 0}, {0x309c, 0x1a, 0}, {0x30a2, 0xe4, 0},
-	{0x30aa, 0x42, 0}, {0x30b0, 0xff, 0}, {0x30b1, 0xff, 0},
-	{0x30b2, 0x10, 0}, {0x300e, 0x32, 0}, {0x300f, 0x21, 0},
-	{0x3010, 0x20, 0}, {0x3011, 0x00, 0}, {0x304c, 0x81, 0},
-	{0x3016, 0x82, 0}, {0x3018, 0x38, 0}, {0x3019, 0x30, 0},
-	{0x301a, 0x61, 0}, {0x307d, 0x00, 0}, {0x3087, 0x02, 0},
-	{0x3082, 0x20, 0}, {0x3015, 0x12, 0}, {0x3014, 0x04, 0},
-	{0x3013, 0xf7, 0}, {0x303c, 0x08, 0}, {0x303d, 0x18, 0},
-	{0x303e, 0x06, 0}, {0x303f, 0x0c, 0}, {0x3030, 0x62, 0},
-	{0x3031, 0x26, 0}, {0x3032, 0xe6, 0}, {0x3033, 0x6e, 0},
-	{0x3034, 0xea, 0}, {0x3035, 0xae, 0}, {0x3036, 0xa6, 0},
-	{0x3037, 0x6a, 0}, {0x3104, 0x02, 0}, {0x3105, 0xfd, 0},
-	{0x3106, 0x00, 0}, {0x3107, 0xff, 0}, {0x3300, 0x12, 0},
-	{0x3301, 0xde, 0}, {0x3302, 0xcf, 0}, {0x3312, 0x26, 0},
-	{0x3314, 0x42, 0}, {0x3313, 0x2b, 0}, {0x3315, 0x42, 0},
-	{0x3310, 0xd0, 0}, {0x3311, 0xbd, 0}, {0x330c, 0x18, 0},
-	{0x330d, 0x18, 0}, {0x330e, 0x56, 0}, {0x330f, 0x5c, 0},
-	{0x330b, 0x1c, 0}, {0x3306, 0x5c, 0}, {0x3307, 0x11, 0},
-	{0x336a, 0x52, 0}, {0x3370, 0x46, 0}, {0x3376, 0x38, 0},
-	{0x30b8, 0x20, 0}, {0x30b9, 0x17, 0}, {0x30ba, 0x04, 0},
-	{0x30bb, 0x08, 0}, {0x3507, 0x06, 0}, {0x350a, 0x4f, 0},
-	{0x3100, 0x02, 0}, {0x3301, 0xde, 0}, {0x3304, 0x00, 0},
-	{0x3400, 0x01, 0}, {0x3404, 0x1d, 0}, {0x3600, 0xc4, 0},
-	{0x3302, 0xef, 0}, {0x3020, 0x01, 0}, {0x3021, 0x1d, 0},
-	{0x3022, 0x00, 0}, {0x3023, 0x0a, 0}, {0x3024, 0x08, 0},
-	{0x3025, 0x00, 0}, {0x3026, 0x06, 0}, {0x3027, 0x00, 0},
-	{0x335f, 0x68, 0}, {0x3360, 0x00, 0}, {0x3361, 0x00, 0},
-	{0x3362, 0x34, 0}, {0x3363, 0x00, 0}, {0x3364, 0x00, 0},
-	{0x3403, 0x00, 0}, {0x3088, 0x04, 0}, {0x3089, 0x00, 0},
-	{0x308a, 0x03, 0}, {0x308b, 0x00, 0}, {0x307c, 0x10, 0},
-	{0x3090, 0xc0, 0}, {0x304c, 0x84, 0}, {0x308d, 0x04, 0},
-	{0x3086, 0x03, 0}, {0x3086, 0x00, 0}, {0x3011, 0x01, 0},
+static struct reg_value ov3640_setting_15fps_VGA_640_480[] = {
+	{0x3012, 0x80, 0, 0}, {0x304d, 0x45, 0, 0}, {0x30a7, 0x5e, 0, 0},
+	{0x3087, 0x16, 0, 0}, {0x309c, 0x1a, 0, 0}, {0x30a2, 0xe4, 0, 0},
+	{0x30aa, 0x42, 0, 0}, {0x30b0, 0xff, 0, 0}, {0x30b1, 0xff, 0, 0},
+	{0x30b2, 0x10, 0, 0}, {0x300e, 0x32, 0, 0}, {0x300f, 0x21, 0, 0},
+	{0x3010, 0x20, 0, 0}, {0x3011, 0x00, 0, 0}, {0x304c, 0x81, 0, 0},
+	{0x30d7, 0x10, 0, 0}, {0x30d9, 0x0d, 0, 0}, {0x30db, 0x08, 0, 0},
+	{0x3016, 0x82, 0, 0}, {0x3018, 0x38, 0, 0}, {0x3019, 0x30, 0, 0},
+	{0x301a, 0x61, 0, 0}, {0x307d, 0x00, 0, 0}, {0x3087, 0x02, 0, 0},
+	{0x3082, 0x20, 0, 0}, {0x3015, 0x12, 0, 0}, {0x3014, 0x04, 0, 0},
+	{0x3013, 0xf7, 0, 0}, {0x303c, 0x08, 0, 0}, {0x303d, 0x18, 0, 0},
+	{0x303e, 0x06, 0, 0}, {0x303f, 0x0c, 0, 0}, {0x3030, 0x62, 0, 0},
+	{0x3031, 0x26, 0, 0}, {0x3032, 0xe6, 0, 0}, {0x3033, 0x6e, 0, 0},
+	{0x3034, 0xea, 0, 0}, {0x3035, 0xae, 0, 0}, {0x3036, 0xa6, 0, 0},
+	{0x3037, 0x6a, 0, 0}, {0x3104, 0x02, 0, 0}, {0x3105, 0xfd, 0, 0},
+	{0x3106, 0x00, 0, 0}, {0x3107, 0xff, 0, 0}, {0x3300, 0x12, 0, 0},
+	{0x3301, 0xde, 0, 0}, {0x3302, 0xcf, 0, 0}, {0x3312, 0x26, 0, 0},
+	{0x3314, 0x42, 0, 0}, {0x3313, 0x2b, 0, 0}, {0x3315, 0x42, 0, 0},
+	{0x3310, 0xd0, 0, 0}, {0x3311, 0xbd, 0, 0}, {0x330c, 0x18, 0, 0},
+	{0x330d, 0x18, 0, 0}, {0x330e, 0x56, 0, 0}, {0x330f, 0x5c, 0, 0},
+	{0x330b, 0x1c, 0, 0}, {0x3306, 0x5c, 0, 0}, {0x3307, 0x11, 0, 0},
+	{0x336a, 0x52, 0, 0}, {0x3370, 0x46, 0, 0}, {0x3376, 0x38, 0, 0},
+	{0x30b8, 0x20, 0, 0}, {0x30b9, 0x17, 0, 0}, {0x30ba, 0x04, 0, 0},
+	{0x30bb, 0x08, 0, 0}, {0x3507, 0x06, 0, 0}, {0x350a, 0x4f, 0, 0},
+	{0x3100, 0x02, 0, 0}, {0x3301, 0xde, 0, 0}, {0x3304, 0x00, 0, 0},
+	{0x3400, 0x00, 0, 0}, {0x3404, 0x42, 0, 0}, {0x3600, 0xc4, 0, 0},
+	{0x3302, 0xef, 0, 0}, {0x3020, 0x01, 0, 0}, {0x3021, 0x1d, 0, 0},
+	{0x3022, 0x00, 0, 0}, {0x3023, 0x0a, 0, 0}, {0x3024, 0x08, 0, 0},
+	{0x3025, 0x00, 0, 0}, {0x3026, 0x06, 0, 0}, {0x3027, 0x00, 0, 0},
+	{0x335f, 0x68, 0, 0}, {0x3360, 0x00, 0, 0}, {0x3361, 0x00, 0, 0},
+	{0x3362, 0x12, 0, 0}, {0x3363, 0x80, 0, 0}, {0x3364, 0xe0, 0, 0},
+	{0x3403, 0x00, 0, 0}, {0x3088, 0x02, 0, 0}, {0x3089, 0x80, 0, 0},
+	{0x308a, 0x01, 0, 0}, {0x308b, 0xe0, 0, 0}, {0x307c, 0x10, 0, 0},
+	{0x3090, 0xc0, 0, 0}, {0x304c, 0x84, 0, 0}, {0x308d, 0x04, 0, 0},
+	{0x3086, 0x03, 0, 0}, {0x3086, 0x00, 0, 0}, {0x3011, 0x00, 0, 0},
 };
 
-static struct reg_value ov3640_setting_VGA_640_480[] = {
-	{0x3012, 0x80, 0}, {0x304d, 0x45, 0}, {0x30a7, 0x5e, 0},
-	{0x3087, 0x16, 0}, {0x309c, 0x1a, 0}, {0x30a2, 0xe4, 0},
-	{0x30aa, 0x42, 0}, {0x30b0, 0xff, 0}, {0x30b1, 0xff, 0},
-	{0x30b2, 0x10, 0}, {0x300e, 0x32, 0}, {0x300f, 0x21, 0},
-	{0x3010, 0x20, 0}, {0x3011, 0x00, 0}, {0x304c, 0x81, 0},
-	{0x30d7, 0x10, 0}, {0x30d9, 0x0d, 0}, {0x30db, 0x08, 0},
-	{0x3016, 0x82, 0}, {0x3018, 0x38, 0}, {0x3019, 0x30, 0},
-	{0x301a, 0x61, 0}, {0x307d, 0x00, 0}, {0x3087, 0x02, 0},
-	{0x3082, 0x20, 0}, {0x3015, 0x12, 0}, {0x3014, 0x04, 0},
-	{0x3013, 0xf7, 0}, {0x303c, 0x08, 0}, {0x303d, 0x18, 0},
-	{0x303e, 0x06, 0}, {0x303f, 0x0c, 0}, {0x3030, 0x62, 0},
-	{0x3031, 0x26, 0}, {0x3032, 0xe6, 0}, {0x3033, 0x6e, 0},
-	{0x3034, 0xea, 0}, {0x3035, 0xae, 0}, {0x3036, 0xa6, 0},
-	{0x3037, 0x6a, 0}, {0x3104, 0x02, 0}, {0x3105, 0xfd, 0},
-	{0x3106, 0x00, 0}, {0x3107, 0xff, 0}, {0x3300, 0x12, 0},
-	{0x3301, 0xde, 0}, {0x3302, 0xcf, 0}, {0x3312, 0x26, 0},
-	{0x3314, 0x42, 0}, {0x3313, 0x2b, 0}, {0x3315, 0x42, 0},
-	{0x3310, 0xd0, 0}, {0x3311, 0xbd, 0}, {0x330c, 0x18, 0},
-	{0x330d, 0x18, 0}, {0x330e, 0x56, 0}, {0x330f, 0x5c, 0},
-	{0x330b, 0x1c, 0}, {0x3306, 0x5c, 0}, {0x3307, 0x11, 0},
-	{0x336a, 0x52, 0}, {0x3370, 0x46, 0}, {0x3376, 0x38, 0},
-	{0x30b8, 0x20, 0}, {0x30b9, 0x17, 0}, {0x30ba, 0x04, 0},
-	{0x30bb, 0x08, 0}, {0x3507, 0x06, 0}, {0x350a, 0x4f, 0},
-	{0x3100, 0x02, 0}, {0x3301, 0xde, 0}, {0x3304, 0x00, 0},
-	{0x3400, 0x00, 0}, {0x3404, 0x42, 0}, {0x3600, 0xc4, 0},
-	{0x3302, 0xef, 0}, {0x3020, 0x01, 0}, {0x3021, 0x1d, 0},
-	{0x3022, 0x00, 0}, {0x3023, 0x0a, 0}, {0x3024, 0x08, 0},
-	{0x3025, 0x00, 0}, {0x3026, 0x06, 0}, {0x3027, 0x00, 0},
-	{0x335f, 0x68, 0}, {0x3360, 0x00, 0}, {0x3361, 0x00, 0},
-	{0x3362, 0x12, 0}, {0x3363, 0x80, 0}, {0x3364, 0xe0, 0},
-	{0x3403, 0x00, 0}, {0x3088, 0x02, 0}, {0x3089, 0x80, 0},
-	{0x308a, 0x01, 0}, {0x308b, 0xe0, 0}, {0x307c, 0x10, 0},
-	{0x3090, 0xc0, 0}, {0x304c, 0x84, 0}, {0x308d, 0x04, 0},
-	{0x3086, 0x03, 0}, {0x3086, 0x00, 0}, {0x3011, 0x01, 0},
+static struct reg_value ov3640_setting_30fps_VGA_640_480[] = {
+	{0x3012, 0x80, 0, 0}, {0x304d, 0x45, 0, 0}, {0x30a7, 0x5e, 0, 0},
+	{0x3087, 0x16, 0, 0}, {0x309c, 0x1a, 0, 0}, {0x30a2, 0xe4, 0, 0},
+	{0x30aa, 0x42, 0, 0}, {0x30b0, 0xff, 0, 0}, {0x30b1, 0xff, 0, 0},
+	{0x30b2, 0x10, 0, 0}, {0x300e, 0x32, 0, 0}, {0x300f, 0x21, 0, 0},
+	{0x3010, 0x20, 0, 0}, {0x3011, 0x01, 0, 0}, {0x304c, 0x82, 0, 0},
+	{0x30d7, 0x10, 0, 0}, {0x30d9, 0x0d, 0, 0}, {0x30db, 0x08, 0, 0},
+	{0x3016, 0x82, 0, 0}, {0x3018, 0x38, 0, 0}, {0x3019, 0x30, 0, 0},
+	{0x301a, 0x61, 0, 0}, {0x307d, 0x00, 0, 0}, {0x3087, 0x02, 0, 0},
+	{0x3082, 0x20, 0, 0}, {0x3015, 0x12, 0, 0}, {0x3014, 0x0c, 0, 0},
+	{0x3013, 0xf7, 0, 0}, {0x303c, 0x08, 0, 0}, {0x303d, 0x18, 0, 0},
+	{0x303e, 0x06, 0, 0}, {0x303f, 0x0c, 0, 0}, {0x3030, 0x62, 0, 0},
+	{0x3031, 0x26, 0, 0}, {0x3032, 0xe6, 0, 0}, {0x3033, 0x6e, 0, 0},
+	{0x3034, 0xea, 0, 0}, {0x3035, 0xae, 0, 0}, {0x3036, 0xa6, 0, 0},
+	{0x3037, 0x6a, 0, 0}, {0x3104, 0x02, 0, 0}, {0x3105, 0xfd, 0, 0},
+	{0x3106, 0x00, 0, 0}, {0x3107, 0xff, 0, 0}, {0x3300, 0x12, 0, 0},
+	{0x3301, 0xde, 0, 0}, {0x3302, 0xcf, 0, 0}, {0x3312, 0x26, 0, 0},
+	{0x3314, 0x42, 0, 0}, {0x3313, 0x2b, 0, 0}, {0x3315, 0x42, 0, 0},
+	{0x3310, 0xd0, 0, 0}, {0x3311, 0xbd, 0, 0}, {0x330c, 0x18, 0, 0},
+	{0x330d, 0x18, 0, 0}, {0x330e, 0x56, 0, 0}, {0x330f, 0x5c, 0, 0},
+	{0x330b, 0x1c, 0, 0}, {0x3306, 0x5c, 0, 0}, {0x3307, 0x11, 0, 0},
+	{0x336a, 0x52, 0, 0}, {0x3370, 0x46, 0, 0}, {0x3376, 0x38, 0, 0},
+	{0x3300, 0x13, 0, 0}, {0x30b8, 0x20, 0, 0}, {0x30b9, 0x17, 0, 0},
+	{0x30ba, 0x04, 0, 0}, {0x30bb, 0x08, 0, 0}, {0x3100, 0x02, 0, 0},
+	{0x3301, 0x10, 0x30, 0}, {0x3304, 0x00, 0x03, 0}, {0x3400, 0x00, 0, 0},
+	{0x3404, 0x02, 0, 0}, {0x3600, 0xc0, 0, 0}, {0x308d, 0x04, 0, 0},
+	{0x3086, 0x03, 0, 0}, {0x3086, 0x00, 0, 0}, {0x3012, 0x10, 0, 0},
+	{0x3023, 0x06, 0, 0}, {0x3026, 0x03, 0, 0}, {0x3027, 0x04, 0, 0},
+	{0x302a, 0x03, 0, 0}, {0x302b, 0x10, 0, 0}, {0x3075, 0x24, 0, 0},
+	{0x300d, 0x01, 0, 0}, {0x30d7, 0x80, 0x80, 0}, {0x3069, 0x00, 0x40, 0},
+	{0x303e, 0x00, 0, 0}, {0x303f, 0xc0, 0, 0}, {0x3302, 0x20, 0x20, 0},
+	{0x335f, 0x34, 0, 0}, {0x3360, 0x0c, 0, 0}, {0x3361, 0x04, 0, 0},
+	{0x3362, 0x12, 0, 0}, {0x3363, 0x88, 0, 0}, {0x3364, 0xe4, 0, 0},
+	{0x3403, 0x42, 0, 0}, {0x3088, 0x02, 0, 0}, {0x3089, 0x80, 0, 0},
+	{0x308a, 0x01, 0, 0}, {0x308b, 0xe0, 0, 0}, {0x3362, 0x12, 0, 0},
+	{0x3363, 0x88, 0, 0}, {0x3364, 0xe4, 0, 0}, {0x3403, 0x42, 0, 0},
+	{0x3088, 0x02, 0, 0}, {0x3089, 0x80, 0, 0}, {0x308a, 0x01, 0, 0},
+	{0x308b, 0xe0, 0, 0}, {0x300e, 0x37, 0, 0}, {0x300f, 0xe1, 0, 0},
+	{0x3010, 0x22, 0, 0}, {0x3011, 0x01, 0, 0}, {0x304c, 0x84, 0, 0},
+	{0x3014, 0x04, 0, 0}, {0x3015, 0x02, 0, 0}, {0x302e, 0x00, 0, 0},
+	{0x302d, 0x00, 0, 0},
 };
 
-static struct reg_value ov3640_setting_QVGA_320_240[] = {
-	{0x3012, 0x80, 0}, {0x304d, 0x45, 0}, {0x30a7, 0x5e, 0},
-	{0x3087, 0x16, 0}, {0x309c, 0x1a, 0}, {0x30a2, 0xe4, 0},
-	{0x30aa, 0x42, 0}, {0x30b0, 0xff, 0}, {0x30b1, 0xff, 0},
-	{0x30b2, 0x10, 0}, {0x300e, 0x32, 0}, {0x300f, 0x21, 0},
-	{0x3010, 0x20, 0}, {0x3011, 0x00, 0}, {0x304c, 0x81, 0},
-	{0x30d7, 0x10, 0}, {0x30d9, 0x0d, 0}, {0x30db, 0x08, 0},
-	{0x3016, 0x82, 0}, {0x3018, 0x38, 0}, {0x3019, 0x30, 0},
-	{0x301a, 0x61, 0}, {0x307d, 0x00, 0}, {0x3087, 0x02, 0},
-	{0x3082, 0x20, 0}, {0x3015, 0x12, 0}, {0x3014, 0x04, 0},
-	{0x3013, 0xf7, 0}, {0x303c, 0x08, 0}, {0x303d, 0x18, 0},
-	{0x303e, 0x06, 0}, {0x303f, 0x0c, 0}, {0x3030, 0x62, 0},
-	{0x3031, 0x26, 0}, {0x3032, 0xe6, 0}, {0x3033, 0x6e, 0},
-	{0x3034, 0xea, 0}, {0x3035, 0xae, 0}, {0x3036, 0xa6, 0},
-	{0x3037, 0x6a, 0}, {0x3104, 0x02, 0}, {0x3105, 0xfd, 0},
-	{0x3106, 0x00, 0}, {0x3107, 0xff, 0}, {0x3300, 0x12, 0},
-	{0x3301, 0xde, 0}, {0x3302, 0xcf, 0}, {0x3312, 0x26, 0},
-	{0x3314, 0x42, 0}, {0x3313, 0x2b, 0}, {0x3315, 0x42, 0},
-	{0x3310, 0xd0, 0}, {0x3311, 0xbd, 0}, {0x330c, 0x18, 0},
-	{0x330d, 0x18, 0}, {0x330e, 0x56, 0}, {0x330f, 0x5c, 0},
-	{0x330b, 0x1c, 0}, {0x3306, 0x5c, 0}, {0x3307, 0x11, 0},
-	{0x336a, 0x52, 0}, {0x3370, 0x46, 0}, {0x3376, 0x38, 0},
-	{0x30b8, 0x20, 0}, {0x30b9, 0x17, 0}, {0x30ba, 0x04, 0},
-	{0x30bb, 0x08, 0}, {0x3507, 0x06, 0}, {0x350a, 0x4f, 0},
-	{0x3100, 0x02, 0}, {0x3301, 0xde, 0}, {0x3304, 0x00, 0},
-	{0x3400, 0x00, 0}, {0x3404, 0x42, 0}, {0x3600, 0xc4, 0},
-	{0x3302, 0xef, 0}, {0x3020, 0x01, 0}, {0x3021, 0x1d, 0},
-	{0x3022, 0x00, 0}, {0x3023, 0x0a, 0}, {0x3024, 0x08, 0},
-	{0x3025, 0x00, 0}, {0x3026, 0x06, 0}, {0x3027, 0x00, 0},
-	{0x335f, 0x68, 0}, {0x3360, 0x00, 0}, {0x3361, 0x00, 0},
-	{0x3362, 0x01, 0}, {0x3363, 0x40, 0}, {0x3364, 0xf0, 0},
-	{0x3403, 0x00, 0}, {0x3088, 0x01, 0}, {0x3089, 0x40, 0},
-	{0x308a, 0x00, 0}, {0x308b, 0xf0, 0}, {0x307c, 0x10, 0},
-	{0x3090, 0xc0, 0}, {0x304c, 0x84, 0}, {0x308d, 0x04, 0},
-	{0x3086, 0x03, 0}, {0x3086, 0x00, 0}, {0x3011, 0x01, 0},
+static struct reg_value ov3640_setting_15fps_QVGA_320_240[] = {
+	{0x3012, 0x80, 0, 0}, {0x304d, 0x45, 0, 0}, {0x30a7, 0x5e, 0, 0},
+	{0x3087, 0x16, 0, 0}, {0x309c, 0x1a, 0, 0}, {0x30a2, 0xe4, 0, 0},
+	{0x30aa, 0x42, 0, 0}, {0x30b0, 0xff, 0, 0}, {0x30b1, 0xff, 0, 0},
+	{0x30b2, 0x10, 0, 0}, {0x300e, 0x32, 0, 0}, {0x300f, 0x21, 0, 0},
+	{0x3010, 0x20, 0, 0}, {0x3011, 0x00, 0, 0}, {0x304c, 0x81, 0, 0},
+	{0x30d7, 0x10, 0, 0}, {0x30d9, 0x0d, 0, 0}, {0x30db, 0x08, 0, 0},
+	{0x3016, 0x82, 0, 0}, {0x3018, 0x38, 0, 0}, {0x3019, 0x30, 0, 0},
+	{0x301a, 0x61, 0, 0}, {0x307d, 0x00, 0, 0}, {0x3087, 0x02, 0, 0},
+	{0x3082, 0x20, 0, 0}, {0x3015, 0x12, 0, 0}, {0x3014, 0x04, 0, 0},
+	{0x3013, 0xf7, 0, 0}, {0x303c, 0x08, 0, 0}, {0x303d, 0x18, 0, 0},
+	{0x303e, 0x06, 0, 0}, {0x303f, 0x0c, 0, 0}, {0x3030, 0x62, 0, 0},
+	{0x3031, 0x26, 0, 0}, {0x3032, 0xe6, 0, 0}, {0x3033, 0x6e, 0, 0},
+	{0x3034, 0xea, 0, 0}, {0x3035, 0xae, 0, 0}, {0x3036, 0xa6, 0, 0},
+	{0x3037, 0x6a, 0, 0}, {0x3104, 0x02, 0, 0}, {0x3105, 0xfd, 0, 0},
+	{0x3106, 0x00, 0, 0}, {0x3107, 0xff, 0, 0}, {0x3300, 0x12, 0, 0},
+	{0x3301, 0xde, 0, 0}, {0x3302, 0xcf, 0, 0}, {0x3312, 0x26, 0, 0},
+	{0x3314, 0x42, 0, 0}, {0x3313, 0x2b, 0, 0}, {0x3315, 0x42, 0, 0},
+	{0x3310, 0xd0, 0, 0}, {0x3311, 0xbd, 0, 0}, {0x330c, 0x18, 0, 0},
+	{0x330d, 0x18, 0, 0}, {0x330e, 0x56, 0, 0}, {0x330f, 0x5c, 0, 0},
+	{0x330b, 0x1c, 0, 0}, {0x3306, 0x5c, 0, 0}, {0x3307, 0x11, 0, 0},
+	{0x336a, 0x52, 0, 0}, {0x3370, 0x46, 0, 0}, {0x3376, 0x38, 0, 0},
+	{0x30b8, 0x20, 0, 0}, {0x30b9, 0x17, 0, 0}, {0x30ba, 0x04, 0, 0},
+	{0x30bb, 0x08, 0, 0}, {0x3507, 0x06, 0, 0}, {0x350a, 0x4f, 0, 0},
+	{0x3100, 0x02, 0, 0}, {0x3301, 0xde, 0, 0}, {0x3304, 0x00, 0, 0},
+	{0x3400, 0x00, 0, 0}, {0x3404, 0x42, 0, 0}, {0x3600, 0xc4, 0, 0},
+	{0x3302, 0xef, 0, 0}, {0x3020, 0x01, 0, 0}, {0x3021, 0x1d, 0, 0},
+	{0x3022, 0x00, 0, 0}, {0x3023, 0x0a, 0, 0}, {0x3024, 0x08, 0, 0},
+	{0x3025, 0x00, 0, 0}, {0x3026, 0x06, 0, 0}, {0x3027, 0x00, 0, 0},
+	{0x335f, 0x68, 0, 0}, {0x3360, 0x00, 0, 0}, {0x3361, 0x00, 0, 0},
+	{0x3362, 0x01, 0, 0}, {0x3363, 0x40, 0, 0}, {0x3364, 0xf0, 0, 0},
+	{0x3403, 0x00, 0, 0}, {0x3088, 0x01, 0, 0}, {0x3089, 0x40, 0, 0},
+	{0x308a, 0x00, 0, 0}, {0x308b, 0xf0, 0, 0}, {0x307c, 0x10, 0, 0},
+	{0x3090, 0xc0, 0, 0}, {0x304c, 0x84, 0, 0}, {0x308d, 0x04, 0, 0},
+	{0x3086, 0x03, 0, 0}, {0x3086, 0x00, 0, 0}, {0x3011, 0x01, 0, 0},
 };
 
-static struct ov3640_mode_info ov3640_mode_info_data[] = {
-	{ov3640_mode_VGA_640_480,    640,  480,  ov3640_setting_VGA_640_480,
-	ARRAY_SIZE(ov3640_setting_VGA_640_480)},
-	{ov3640_mode_QVGA_320_240,   320,  240,  ov3640_setting_QVGA_320_240,
-	ARRAY_SIZE(ov3640_setting_QVGA_320_240)},
-	{ov3640_mode_QXGA_2048_1536, 2048, 1536, ov3640_setting_QXGA_2048_1536,
-	ARRAY_SIZE(ov3640_setting_QXGA_2048_1536)},
-	{ov3640_mode_XGA_1024_768,   1024, 768,  ov3640_setting_XGA_1024_768,
-	ARRAY_SIZE(ov3640_setting_XGA_1024_768)},
+static struct reg_value ov3640_setting_30fps_QVGA_320_240[] = {
+	{0x3012, 0x80, 0, 0}, {0x304d, 0x45, 0, 0}, {0x30a7, 0x5e, 0, 0},
+	{0x3087, 0x16, 0, 0}, {0x309c, 0x1a, 0, 0}, {0x30a2, 0xe4, 0, 0},
+	{0x30aa, 0x42, 0, 0}, {0x30b0, 0xff, 0, 0}, {0x30b1, 0xff, 0, 0},
+	{0x30b2, 0x10, 0, 0}, {0x300e, 0x32, 0, 0}, {0x300f, 0x21, 0, 0},
+	{0x3010, 0x20, 0, 0}, {0x3011, 0x01, 0, 0}, {0x304c, 0x82, 0, 0},
+	{0x30d7, 0x10, 0, 0}, {0x30d9, 0x0d, 0, 0}, {0x30db, 0x08, 0, 0},
+	{0x3016, 0x82, 0, 0}, {0x3018, 0x38, 0, 0}, {0x3019, 0x30, 0, 0},
+	{0x301a, 0x61, 0, 0}, {0x307d, 0x00, 0, 0}, {0x3087, 0x02, 0, 0},
+	{0x3082, 0x20, 0, 0}, {0x3015, 0x12, 0, 0}, {0x3014, 0x0c, 0, 0},
+	{0x3013, 0xf7, 0, 0}, {0x303c, 0x08, 0, 0}, {0x303d, 0x18, 0, 0},
+	{0x303e, 0x06, 0, 0}, {0x303f, 0x0c, 0, 0}, {0x3030, 0x62, 0, 0},
+	{0x3031, 0x26, 0, 0}, {0x3032, 0xe6, 0, 0}, {0x3033, 0x6e, 0, 0},
+	{0x3034, 0xea, 0, 0}, {0x3035, 0xae, 0, 0}, {0x3036, 0xa6, 0, 0},
+	{0x3037, 0x6a, 0, 0}, {0x3104, 0x02, 0, 0}, {0x3105, 0xfd, 0, 0},
+	{0x3106, 0x00, 0, 0}, {0x3107, 0xff, 0, 0}, {0x3300, 0x12, 0, 0},
+	{0x3301, 0xde, 0, 0}, {0x3302, 0xcf, 0, 0}, {0x3312, 0x26, 0, 0},
+	{0x3314, 0x42, 0, 0}, {0x3313, 0x2b, 0, 0}, {0x3315, 0x42, 0, 0},
+	{0x3310, 0xd0, 0, 0}, {0x3311, 0xbd, 0, 0}, {0x330c, 0x18, 0, 0},
+	{0x330d, 0x18, 0, 0}, {0x330e, 0x56, 0, 0}, {0x330f, 0x5c, 0, 0},
+	{0x330b, 0x1c, 0, 0}, {0x3306, 0x5c, 0, 0}, {0x3307, 0x11, 0, 0},
+	{0x336a, 0x52, 0, 0}, {0x3370, 0x46, 0, 0}, {0x3376, 0x38, 0, 0},
+	{0x3300, 0x13, 0, 0}, {0x30b8, 0x20, 0, 0}, {0x30b9, 0x17, 0, 0},
+	{0x30ba, 0x04, 0, 0}, {0x30bb, 0x08, 0, 0}, {0x3100, 0x02, 0, 0},
+	{0x3301, 0x10, 0x30, 0}, {0x3304, 0x00, 0x03, 0}, {0x3400, 0x00, 0, 0},
+	{0x3404, 0x02, 0, 0}, {0x3600, 0xc0, 0, 0}, {0x308d, 0x04, 0, 0},
+	{0x3086, 0x03, 0, 0}, {0x3086, 0x00, 0, 0}, {0x3012, 0x10, 0, 0},
+	{0x3023, 0x06, 0, 0}, {0x3026, 0x03, 0, 0}, {0x3027, 0x04, 0, 0},
+	{0x302a, 0x03, 0, 0}, {0x302b, 0x10, 0, 0}, {0x3075, 0x24, 0, 0},
+	{0x300d, 0x01, 0, 0}, {0x30d7, 0x80, 0x80, 0}, {0x3069, 0x00, 0x40, 0},
+	{0x303e, 0x00, 0, 0}, {0x303f, 0xc0, 0, 0}, {0x3302, 0x20, 0x20, 0},
+	{0x335f, 0x34, 0, 0}, {0x3360, 0x0c, 0, 0}, {0x3361, 0x04, 0, 0},
+	{0x3362, 0x34, 0, 0}, {0x3363, 0x08, 0, 0}, {0x3364, 0x04, 0, 0},
+	{0x3403, 0x42, 0, 0}, {0x3088, 0x04, 0, 0}, {0x3089, 0x00, 0, 0},
+	{0x308a, 0x03, 0, 0}, {0x308b, 0x00, 0, 0}, {0x3362, 0x12, 0, 0},
+	{0x3363, 0x88, 0, 0}, {0x3364, 0xe4, 0, 0}, {0x3403, 0x42, 0, 0},
+	{0x3088, 0x02, 0, 0}, {0x3089, 0x80, 0, 0}, {0x308a, 0x01, 0, 0},
+	{0x308b, 0xe0, 0, 0}, {0x300e, 0x37, 0, 0}, {0x300f, 0xe1, 0, 0},
+	{0x3010, 0x22, 0, 0}, {0x3011, 0x01, 0, 0}, {0x304c, 0x84, 0, 0},
+};
+
+static struct ov3640_mode_info ov3640_mode_info_data[2][ov3640_mode_MAX + 1] = {
+	{
+		{ov3640_mode_VGA_640_480,    640,  480,
+		ov3640_setting_15fps_VGA_640_480,
+		ARRAY_SIZE(ov3640_setting_15fps_VGA_640_480)},
+		{ov3640_mode_QVGA_320_240,   320,  240,
+		ov3640_setting_15fps_QVGA_320_240,
+		ARRAY_SIZE(ov3640_setting_15fps_QVGA_320_240)},
+		{ov3640_mode_XGA_1024_768,   1024, 768,
+		ov3640_setting_15fps_XGA_1024_768,
+		ARRAY_SIZE(ov3640_setting_15fps_XGA_1024_768)},
+		{ov3640_mode_QXGA_2048_1536, 2048, 1536,
+		ov3640_setting_15fps_QXGA_2048_1536,
+		ARRAY_SIZE(ov3640_setting_15fps_QXGA_2048_1536)},
+	},
+	{
+		{ov3640_mode_VGA_640_480,    640,  480,
+		ov3640_setting_30fps_VGA_640_480,
+		ARRAY_SIZE(ov3640_setting_30fps_VGA_640_480)},
+		{ov3640_mode_QVGA_320_240,   320,  240,
+		ov3640_setting_30fps_QVGA_320_240,
+		ARRAY_SIZE(ov3640_setting_30fps_QVGA_320_240)},
+		{ov3640_mode_XGA_1024_768,   1024, 768,
+		ov3640_setting_30fps_XGA_1024_768,
+		ARRAY_SIZE(ov3640_setting_30fps_XGA_1024_768)},
+		{ov3640_mode_QXGA_2048_1536, 0, 0, NULL, 0},
+	},
 };
 
 static struct regulator *io_regulator;
@@ -270,7 +380,7 @@ static int ov3640_probe(struct i2c_client *adapter,
 				const struct i2c_device_id *device_id);
 static int ov3640_remove(struct i2c_client *client);
 
-/* static s32 ov3640_read_reg(u16 reg, u8 *val);  Not currently used. */
+static s32 ov3640_read_reg(u16 reg, u8 *val);
 static s32 ov3640_write_reg(u16 reg, u8 val);
 
 static const struct i2c_device_id ov3640_id[] = {
@@ -310,7 +420,6 @@ static s32 ov3640_write_reg(u16 reg, u8 val)
 	return 0;
 }
 
-#ifdef DEBUG
 static s32 ov3640_read_reg(u16 reg, u8 *val)
 {
 	u8 au8RegBuf[2] = {0};
@@ -335,13 +444,19 @@ static s32 ov3640_read_reg(u16 reg, u8 *val)
 
 	return u8RdVal;
 }
-#endif
 
-static int ov3640_init_mode(enum ov3640_mode mode)
+static int ov3640_init_mode(enum ov3640_frame_rate frame_rate,
+			    enum ov3640_mode mode)
 {
 	struct reg_value *pModeSetting = NULL;
 	s32 i = 0;
 	s32 iModeSettingArySize = 0;
+	register u32 Delay_ms = 0;
+	register u16 RegAddr = 0;
+	register u8 Mask = 0;
+	register u8 Val = 0;
+	u8 RegVal = 0;
+	int retval = 0;
 
 	CAMERA_TRACE(("CAMERA_DBG Entry: ov3640_init_mode\n"));
 
@@ -350,24 +465,40 @@ static int ov3640_init_mode(enum ov3640_mode mode)
 		return -1;
 	}
 
-	pModeSetting = ov3640_mode_info_data[mode].init_data_ptr;
-	iModeSettingArySize = ov3640_mode_info_data[mode].init_data_size;
-
-	ov3640_data.pix.width = ov3640_mode_info_data[mode].width;
-	ov3640_data.pix.height = ov3640_mode_info_data[mode].height;
+	pModeSetting = ov3640_mode_info_data[frame_rate][mode].init_data_ptr;
+	iModeSettingArySize =
+		ov3640_mode_info_data[frame_rate][mode].init_data_size;
 
+	ov3640_data.pix.width = ov3640_mode_info_data[frame_rate][mode].width;
+	ov3640_data.pix.height = ov3640_mode_info_data[frame_rate][mode].height;
 
 	for (i = 0; i < iModeSettingArySize; ++i, ++pModeSetting) {
-		u32 u32TmpVal = pModeSetting->u32Delay_ms;
+		Delay_ms = pModeSetting->u32Delay_ms;
+		RegAddr = pModeSetting->u16RegAddr;
+		Val = pModeSetting->u8Val;
+		Mask = pModeSetting->u8Mask;
+
+		if (Mask) {
+			retval = ov3640_read_reg(RegAddr, &RegVal);
+			if (retval < 0)
+				goto err;
+
+			RegVal &= ~(u8)Mask;
+			Val &= Mask;
+			Val |= RegVal;
+		}
 
-		ov3640_write_reg(pModeSetting->u16RegAddr, pModeSetting->u8Val);
-		if (u32TmpVal)
-			msleep(u32TmpVal);
-	}
+		retval = ov3640_write_reg(RegAddr, Val);
+		if (retval < 0)
+			goto err;
 
+		if (Delay_ms)
+			msleep(Delay_ms);
+	}
+err:
 	CAMERA_TRACE(("CAMERA_DBG Exit: ov3640_init_mode\n"));
 
-	return 0;
+	return retval;
 }
 
 /* --------------- IOCTL functions from v4l2_int_ioctl_desc --------------- */
@@ -499,6 +630,7 @@ static int ioctl_s_parm(struct v4l2_int_device *s, struct v4l2_streamparm *a)
 	struct sensor *sensor = s->priv;
 	struct v4l2_fract *timeperframe = &a->parm.capture.timeperframe;
 	u32 tgt_fps;	/* target frames per secound */
+	enum ov3640_frame_rate frame_rate;
 	int ret = 0;
 
 	CAMERA_TRACE(("In ov3640:ioctl_s_parm\n"));
@@ -508,13 +640,14 @@ static int ioctl_s_parm(struct v4l2_int_device *s, struct v4l2_streamparm *a)
 		CAMERA_TRACE(("   type is V4L2_BUF_TYPE_VIDEO_CAPTURE\n"));
 
 		/* Check that the new frame rate is allowed. */
-		if ((timeperframe->numerator == 0)
-		    || (timeperframe->denominator == 0)) {
+		if ((timeperframe->numerator == 0) ||
+		    (timeperframe->denominator == 0)) {
 			timeperframe->denominator = DEFAULT_FPS;
 			timeperframe->numerator = 1;
 		}
-		tgt_fps = timeperframe->denominator
-			  / timeperframe->numerator;
+
+		tgt_fps = timeperframe->denominator /
+			  timeperframe->numerator;
 
 		if (tgt_fps > MAX_FPS) {
 			timeperframe->denominator = MAX_FPS;
@@ -523,11 +656,26 @@ static int ioctl_s_parm(struct v4l2_int_device *s, struct v4l2_streamparm *a)
 			timeperframe->denominator = MIN_FPS;
 			timeperframe->numerator = 1;
 		}
+
+		/* Actual frame rate we use */
+		tgt_fps = timeperframe->denominator /
+			  timeperframe->numerator;
+
+		if (tgt_fps == 15)
+			frame_rate = ov3640_15_fps;
+		else if (tgt_fps == 30)
+			frame_rate = ov3640_30_fps;
+		else {
+			pr_err(" The camera frame rate is not supported!\n");
+			return -EINVAL;
+		}
+
 		sensor->streamcap.timeperframe = *timeperframe;
 		sensor->streamcap.capturemode =
 				(u32)a->parm.capture.capturemode;
 
-		ret = ov3640_init_mode(sensor->streamcap.capturemode);
+		ret = ov3640_init_mode(frame_rate,
+				       sensor->streamcap.capturemode);
 		break;
 
 	/* These are all the possible cases. */
@@ -703,13 +851,15 @@ static int ioctl_dev_init(struct v4l2_int_device *s)
 {
 	struct sensor *sensor = s->priv;
 	u32 tgt_xclk;	/* target xclk */
+	u32 tgt_fps;	/* target frames per secound */
+	enum ov3640_frame_rate frame_rate;
 
 	CAMERA_TRACE(("In ov3640:ioctl_dev_init\n"));
 
-
 	gpio_sensor_active(ov3640_data.csi);
 	ov3640_data.on = true;
 
+	/* mclk */
 	tgt_xclk = ov3640_data.mclk;
 	tgt_xclk = min(tgt_xclk, (u32)OV3640_XCLK_MAX);
 	tgt_xclk = max(tgt_xclk, (u32)OV3640_XCLK_MIN);
@@ -718,7 +868,19 @@ static int ioctl_dev_init(struct v4l2_int_device *s)
 	pr_debug("   Setting mclk to %d MHz\n", tgt_xclk / 1000000);
 	set_mclk_rate(&ov3640_data.mclk, ov3640_data.csi);
 
-	return ov3640_init_mode(sensor->streamcap.capturemode);
+	/* Default camera frame rate is set in probe */
+	tgt_fps = sensor->streamcap.timeperframe.denominator /
+		  sensor->streamcap.timeperframe.numerator;
+
+	if (tgt_fps == 15)
+		frame_rate = ov3640_15_fps;
+	else if (tgt_fps == 30)
+		frame_rate = ov3640_30_fps;
+	else
+		return -EINVAL; /* Only support 15fps or 30fps now. */
+
+	return ov3640_init_mode(frame_rate,
+				sensor->streamcap.capturemode);
 }
 
 /*!
@@ -785,8 +947,8 @@ static int ov3640_probe(struct i2c_client *client,
 	ov3640_data.pix.pixelformat = V4L2_PIX_FMT_UYVY;
 	ov3640_data.pix.width = 640;
 	ov3640_data.pix.height = 480;
-	ov3640_data.streamcap.capability = V4L2_MODE_HIGHQUALITY
-					   | V4L2_CAP_TIMEPERFRAME;
+	ov3640_data.streamcap.capability = V4L2_MODE_HIGHQUALITY |
+					   V4L2_CAP_TIMEPERFRAME;
 	ov3640_data.streamcap.capturemode = 0;
 	ov3640_data.streamcap.timeperframe.denominator = DEFAULT_FPS;
 	ov3640_data.streamcap.timeperframe.numerator = 1;
-- 
1.5.4.4

