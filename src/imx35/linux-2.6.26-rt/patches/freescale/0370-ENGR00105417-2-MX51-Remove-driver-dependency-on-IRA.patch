From badf081d7c46375a0aa2d395e1ce82fc5fef3a61 Mon Sep 17 00:00:00 2001
From: Dinh Nguyen <Dinh.Nguyen@freescale.com>
Date: Fri, 30 Jan 2009 16:51:08 -0600
Subject: [PATCH] ENGR00105417-2 MX51: Remove driver dependency on IRAM_BASE_ADDR for MX51

Because the IRAM base address is different for MX51 TO1 and TO2,
drivers that refer to IRAM_BASE_ADDR should be updated so that
it gets the IRAM base address and size dynamically.

Signed-off-by: Dinh Nguyen <Dinh.Nguyen@freescale.com>
---
 arch/arm/mach-mx51/mx51_3stack.c |   12 ------------
 arch/arm/mach-mx51/pm.c          |    5 ++---
 arch/arm/mach-mx51/system.c      |    7 ++++---
 include/asm-arm/arch-mxc/mx51.h  |   27 +++++++++++++++------------
 4 files changed, 21 insertions(+), 30 deletions(-)

diff --git a/arch/arm/mach-mx51/mx51_3stack.c b/arch/arm/mach-mx51/mx51_3stack.c
index dd6a7b4..9f9a4f5 100644
--- a/arch/arm/mach-mx51/mx51_3stack.c
+++ b/arch/arm/mach-mx51/mx51_3stack.c
@@ -690,17 +690,6 @@ static void expio_unmask_irq(u32 irq)
 	__raw_writew(reg, brd_io + INTR_MASK_REG);
 }
 
-static void mxc_init_iram()
-{
-	if (cpu_is_mx51_rev(CHIP_REV_2_0) < 0) {
-		if (TOTAL_IRAM_NEEDED > (12*SZ_8K))
-			pr_err("IRAM exceeded\n");
-	} else {
-		if (TOTAL_IRAM_NEEDED > (16*SZ_8K))
-			pr_err("IRAM exceeded\n");
-	}
-}
-
 static struct irq_chip expio_irq_chip = {
 	.ack = expio_ack_irq,
 	.mask = expio_mask_irq,
@@ -982,7 +971,6 @@ static void __init mxc_board_init(void)
 	early_console_setup(saved_command_line);
 	mxc_init_devices();
 
-	mxc_init_iram();
 	mxc_expio_init();
 	mxc_init_enet();
 	mxc_init_pata();
diff --git a/arch/arm/mach-mx51/pm.c b/arch/arm/mach-mx51/pm.c
index dffdffd..5b74d30 100644
--- a/arch/arm/mach-mx51/pm.c
+++ b/arch/arm/mach-mx51/pm.c
@@ -53,11 +53,10 @@ static int mx51_suspend_enter(suspend_state_t state)
 	} else {
 		if ((mxc_cpu_is_rev(CHIP_REV_2_0)) < 0) {
 			/* do cpu_idle_workaround */
-			u32 l2_iram_addr = IRAM_AVAILABLE_ADDR;
+			u32 l2_iram_addr = IDLE_IRAM_BASE_ADDR;
 			if (!iram_ready)
 				return;
-			if ((l2_iram_addr + 0x1000) <
-					(IRAM_BASE_ADDR + IRAM_SIZE))
+			if (l2_iram_addr > 0x1FFE8000)
 				cpu_cortexa8_do_idle(IO_ADDRESS(l2_iram_addr));
 		} else {
 			cpu_do_idle();
diff --git a/arch/arm/mach-mx51/system.c b/arch/arm/mach-mx51/system.c
index 9b9a241..547b19f 100644
--- a/arch/arm/mach-mx51/system.c
+++ b/arch/arm/mach-mx51/system.c
@@ -160,11 +160,12 @@ void arch_idle(void)
 		clk_enable(gpc_dvfs_clk);
 		mxc_cpu_lp_set(arch_idle_mode);
 		if ((mxc_cpu_is_rev(CHIP_REV_2_0)) < 0) {
-			u32 l2_iram_addr = IRAM_AVAILABLE_ADDR;
+			u32 l2_iram_addr = IDLE_IRAM_BASE_ADDR;
+
 			if (!iram_ready)
 				return;
-			if ((l2_iram_addr + 0x1000) <
-					(IRAM_BASE_ADDR + IRAM_SIZE))
+
+			if (l2_iram_addr > 0x1FFE8000)
 				cpu_cortexa8_do_idle(IO_ADDRESS(l2_iram_addr));
 		} else {
 			cpu_do_idle();
diff --git a/include/asm-arm/arch-mxc/mx51.h b/include/asm-arm/arch-mxc/mx51.h
index 528911e..c0adb7f 100644
--- a/include/asm-arm/arch-mxc/mx51.h
+++ b/include/asm-arm/arch-mxc/mx51.h
@@ -64,13 +64,14 @@
  */
 #define MXC_SDMA_V2
 
-/*
+ /*
  * IRAM
  */
-#define IRAM_BASE_ADDR		0x1FFE8000	/* internal ram */
-#define IRAM_BASE_ADDR_VIRT	0xFA3E8000
-
-#define IRAM_SIZE		(16*SZ_8K)
+#define IRAM_BASE_ADDR		0x1FFE0000	/* internal ram */
+#define IRAM_BASE_ADDR_VIRT	0xFA3E0000
+#define IRAM_PARTITIONS		16
+#define IRAM_PARTITIONS_TO1	12
+#define IRAM_SIZE		(IRAM_PARTITIONS*SZ_8K)	/* 128KB */
 
 #if defined(CONFIG_MXC_SECURITY_SCC2) \
     || defined(CONFIG_MXC_SECURITY_SCC2_MODULE)
@@ -97,14 +98,16 @@
 #define VPU_IRAM_SIZE 0
 #endif
 
-#define TOTAL_IRAM_NEEDED	(SDMA_IRAM_SIZE + SND_RAM_SIZE + VPU_IRAM_SIZE + \
-	SCC_IRAM_SIZE)
+#if (IRAM_SIZE < (SDMA_IRAM_SIZE + SND_RAM_SIZE + VPU_IRAM_SIZE + \
+	SCC_IRAM_SIZE))
+#error "IRAM size exceeded"
+#endif
 
-#define SDMA_RAM_BASE_ADDR	(IRAM_BASE_ADDR)
-#define SND_RAM_BASE_ADDR	(IRAM_BASE_ADDR + SDMA_IRAM_SIZE)
-#define VPU_IRAM_BASE_ADDR	(SND_RAM_BASE_ADDR + SND_RAM_SIZE)
-#define SCC_IRAM_BASE_ADDR	(VPU_IRAM_BASE_ADDR + VPU_IRAM_SIZE)
-#define IRAM_AVAILABLE_ADDR	(SCC_IRAM_BASE_ADDR + SCC_IRAM_SIZE)
+#define SCC_IRAM_BASE_ADDR	(IRAM_BASE_ADDR + IRAM_SIZE - SCC_IRAM_SIZE)
+#define VPU_IRAM_BASE_ADDR	(SCC_IRAM_BASE_ADDR - VPU_IRAM_SIZE)
+#define SND_RAM_BASE_ADDR	(VPU_IRAM_BASE_ADDR - SND_RAM_SIZE)
+#define SDMA_IRAM_BASE_ADDR	(SND_RAM_BASE_ADDR - SDMA_IRAM_SIZE)
+#define IDLE_IRAM_BASE_ADDR	(SDMA_IRAM_BASE_ADDR - SZ_4K)
 
 /*
  * NFC
-- 
1.5.4.4

