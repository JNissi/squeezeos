From ae26cf7f6814a244fb5ca8fc3d5250b0e8708aed Mon Sep 17 00:00:00 2001
From: Sam Yang <r52096@freescale.com>
Date: Thu, 22 Jan 2009 15:36:33 +0800
Subject: [PATCH] ENGR00103870 FEC reopening causes network wdog timeout

1.After FEC interface is reopened, there are network watchdog timeout messages.
The root cause is the packet queue does not enabled. But the interface is
active. network module treats it as an error.
  The solution is queue should be enabled.
2.There are mismatch about the operations in fec_stop and fec_open.
  fec_stop: will reset FEC control.
  fec_open: FEC control just restart without phy information.
  Changed fec_open function to restart FEC control in both two cases.

Signed-off-by: Sam Yang <r52096@freescale.com>
---
 drivers/net/fec.c |   23 +++++++++++------------
 1 files changed, 11 insertions(+), 12 deletions(-)

diff --git a/drivers/net/fec.c b/drivers/net/fec.c
index 134e0ba..e581eeb 100644
--- a/drivers/net/fec.c
+++ b/drivers/net/fec.c
@@ -25,7 +25,7 @@
  * Copyright (c) 2004-2006 Macq Electronique SA.
  */
 /*
- * Copyright 2006-2008 Freescale Semiconductor, Inc. All Rights Reserved.
+ * Copyright 2006-2009 Freescale Semiconductor, Inc. All Rights Reserved.
  */
 
 #include <linux/module.h>
@@ -2661,6 +2661,8 @@ fec_enet_open(struct net_device *dev)
 	fep->sequence_done = 0;
 	fep->link = 0;
 
+	/* no phy,  go full duplex,  it's most likely a hub chip */
+	fec_restart(dev, 1);
 	if (fep->phy) {
 		mii_do_cmd(dev, fep->phy->ack_int);
 		mii_do_cmd(dev, fep->phy->config);
@@ -2678,18 +2680,14 @@ fec_enet_open(struct net_device *dev)
 
 		mii_do_cmd(dev, fep->phy->startup);
 
-		/* Set the initial link state to true. A lot of hardware
-		 * based on this device does not implement a PHY interrupt,
-		 * so we are never notified of link change.
-		 */
-		fep->link = 1;
-	} else {
-		fep->link = 1; /* lets just try it and see */
-		/* no phy,  go full duplex,  it's most likely a hub chip */
-		fec_restart(dev, 1);
 	}
-
+	/* Set the initial link state to true. A lot of hardware
+	 * based on this device does not implement a PHY interrupt,
+	 * so we are never notified of link change.
+	 */
+	fep->link = 1;
 	fep->opened = 1;
+	netif_start_queue(dev);
 	return 0;		/* Success */
 }
 
@@ -3098,7 +3096,8 @@ fec_restart(struct net_device *dev, int duplex)
 	fecp->fec_ecntrl = 2;
 	fecp->fec_r_des_active = 0x01000000;
 
-	netif_start_queue(dev);
+	if (fep->link)
+		netif_start_queue(dev);
 }
 
 static void
-- 
1.5.4.4

