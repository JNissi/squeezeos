From 6ef692460aa4c27d65c7e35d772bf0f9c1484b75 Mon Sep 17 00:00:00 2001
From: Wallace Wang <r59996@freescale.com>
Date: Thu, 28 Aug 2008 16:50:59 +0800
Subject: [PATCH] ENGR00088035 MX35: Support IRAM audio playback

Implement IRAM SDMA buffer for audio playback
IRAM audio playback can reduce the peak bus loading

Signed-off-by: Wallace Wang <r59996@freescale.com>
---
 arch/arm/configs/imx35_3stack_defconfig |   19 ++++++++++++++++---
 arch/arm/mach-mx35/Kconfig              |   18 ++++++++++++++++++
 arch/arm/mach-mx35/dma.c                |   23 +++++++++++++++++------
 arch/arm/mach-mx35/mx35_3stack.c        |    4 ++--
 include/asm-arm/arch-mxc/mx35.h         |    8 +++++++-
 5 files changed, 60 insertions(+), 12 deletions(-)

diff --git a/arch/arm/configs/imx35_3stack_defconfig b/arch/arm/configs/imx35_3stack_defconfig
index f34d961..0f73525 100644
--- a/arch/arm/configs/imx35_3stack_defconfig
+++ b/arch/arm/configs/imx35_3stack_defconfig
@@ -1,7 +1,7 @@
 #
 # Automatically generated make config: don't edit
 # Linux kernel version: 2.6.24
-# Fri Aug  1 16:25:39 2008
+# Thu Aug 28 16:42:06 2008
 #
 CONFIG_ARM=y
 CONFIG_SYS_SUPPORTS_APM_EMULATION=y
@@ -164,6 +164,7 @@ CONFIG_ARCH_MX35=y
 CONFIG_I2C_MXC_SELECT1=y
 # CONFIG_I2C_MXC_SELECT2 is not set
 CONFIG_MXC_SDMA_API=y
+# CONFIG_SDMA_IRAM is not set
 CONFIG_ARCH_MXC_HAS_NFC_V2=y
 # CONFIG_I2C_MXC_SELECT3 is not set
 
@@ -173,6 +174,10 @@ CONFIG_ARCH_MXC_HAS_NFC_V2=y
 CONFIG_MACH_MX35_3DS=y
 # CONFIG_MACH_MX35EVB is not set
 # CONFIG_MX35_DOZE_DURING_IDLE is not set
+
+#
+# SDMA options
+#
 CONFIG_ARCH_MXC_HAS_NFC_V2_1=y
 
 #
@@ -257,6 +262,11 @@ CONFIG_CMDLINE="noinitrd console=ttymxc0,115200 root=/dev/mtdblock2 rw rootfstyp
 # CONFIG_KEXEC is not set
 
 #
+# CPU Frequency scaling
+#
+# CONFIG_CPU_FREQ is not set
+
+#
 # Floating point emulation
 #
 
@@ -997,10 +1007,11 @@ CONFIG_SND_SOC=y
 CONFIG_SND_MXC_SOC=y
 CONFIG_SND_MXC_SOC_SSI=y
 CONFIG_SND_MXC_SOC_ESAI=y
-# CONFIG_SND_MXC_SOC_IRAM is not set
+CONFIG_SND_MXC_SOC_IRAM=y
 # CONFIG_SND_SOC_IMX_3STACK_WM8350 is not set
 CONFIG_SND_SOC_IMX_3STACK_AK4647=y
 CONFIG_SND_SOC_IMX_3STACK_WM8580=y
+# CONFIG_SND_SOC_IMX_3STACK_WM8903 is not set
 CONFIG_SND_SOC_AK4647=y
 CONFIG_SND_SOC_WM8580=y
 
@@ -1297,7 +1308,9 @@ CONFIG_MXC_MC9SDZ60_POWER=y
 #
 CONFIG_MXC_SECURITY_SCC=y
 # CONFIG_SCC_DEBUG is not set
-CONFIG_MXC_SECURITY_RNG=y 
+CONFIG_MXC_SECURITY_RNG=y
+# CONFIG_MXC_RNG_TEST_DRIVER is not set
+# CONFIG_MXC_RNG_DEBUG is not set
 CONFIG_MXC_SECURITY_RTIC=y
 # CONFIG_MXC_RTIC_TEST_DEBUG is not set
 CONFIG_MXC_SECURITY_CORE=y
diff --git a/arch/arm/mach-mx35/Kconfig b/arch/arm/mach-mx35/Kconfig
index 6d222a9..31ddb26 100644
--- a/arch/arm/mach-mx35/Kconfig
+++ b/arch/arm/mach-mx35/Kconfig
@@ -39,6 +39,24 @@ config MXC_SDMA_API
            This selects the Freescale MXC SDMA API.
            If unsure, say N.
 
+menu "SDMA options"
+        depends on MXC_SDMA_API
+
+config SDMA_IRAM
+        bool "Use Internal RAM for SDMA transfer"
+        default n
+       help
+           Support Internal RAM as SDMA buffer or control structures
+
+config SDMA_IRAM_SIZE
+        hex "Reserved bytes of IRAM for SDMA (0x800-0x1000)"
+        range 0x800 0x1000
+        depends on SDMA_IRAM
+        default "0x1000"
+        help
+           Set the size of IRAM for SDMA. It must be a multiple of 512bytes.
+endmenu
+
 config ARCH_MXC_HAS_NFC_V2
         bool "MXC NFC Hardware Version 2"
         depends on ARCH_MX35
diff --git a/arch/arm/mach-mx35/dma.c b/arch/arm/mach-mx35/dma.c
index aa5d585..721fc8a 100644
--- a/arch/arm/mach-mx35/dma.c
+++ b/arch/arm/mach-mx35/dma.c
@@ -17,6 +17,12 @@
 
 #include "serial.h"
 
+#ifdef CONFIG_SND_MXC_SOC_IRAM
+#define trans_type  int_2_per
+#else
+#define trans_type emi_2_per
+#endif
+
 #define MXC_SPDIF_TXFIFO_WML      8
 #define MXC_SPDIF_RXFIFO_WML      8
 #define MXC_SPDIF_TX_REG          0x2C
@@ -202,7 +208,7 @@ static mxc_sdma_channel_params_t mxc_sdma_ssi1_8bit_tx0_params = {
 			.watermark_level = MXC_SSI_TXFIFO_WML,
 			.per_address = SSI1_BASE_ADDR + MXC_SSI_TX0_REG,
 			.peripheral_type = SSI,
-			.transfer_type = emi_2_per,
+			.transfer_type = trans_type,
 			.event_id = DMA_REQ_SSI1_TX1,
 			.bd_number = 32,
 			.word_size = TRANSFER_8BIT,
@@ -230,7 +236,7 @@ static mxc_sdma_channel_params_t mxc_sdma_ssi1_16bit_tx0_params = {
 			.watermark_level = MXC_SSI_TXFIFO_WML,
 			.per_address = SSI1_BASE_ADDR + MXC_SSI_TX0_REG,
 			.peripheral_type = SSI,
-			.transfer_type = emi_2_per,
+			.transfer_type = trans_type,
 			.event_id = DMA_REQ_SSI1_TX1,
 			.bd_number = 32,
 			.word_size = TRANSFER_16BIT,
@@ -258,7 +264,7 @@ static mxc_sdma_channel_params_t mxc_sdma_ssi1_24bit_tx0_params = {
 			.watermark_level = MXC_SSI_TXFIFO_WML,
 			.per_address = SSI1_BASE_ADDR + MXC_SSI_TX0_REG,
 			.peripheral_type = SSI,
-			.transfer_type = emi_2_per,
+			.transfer_type = trans_type,
 			.event_id = DMA_REQ_SSI1_TX1,
 			.bd_number = 32,
 			.word_size = TRANSFER_32BIT,
@@ -286,7 +292,7 @@ static mxc_sdma_channel_params_t mxc_sdma_ssi1_8bit_tx1_params = {
 			.watermark_level = MXC_SSI_TXFIFO_WML,
 			.per_address = SSI1_BASE_ADDR + MXC_SSI_TX1_REG,
 			.peripheral_type = SSI,
-			.transfer_type = emi_2_per,
+			.transfer_type = trans_type,
 			.event_id = DMA_REQ_SSI1_TX2,
 			.bd_number = 32,
 			.word_size = TRANSFER_8BIT,
@@ -314,7 +320,7 @@ static mxc_sdma_channel_params_t mxc_sdma_ssi1_16bit_tx1_params = {
 			.watermark_level = MXC_SSI_TXFIFO_WML,
 			.per_address = SSI1_BASE_ADDR + MXC_SSI_TX1_REG,
 			.peripheral_type = SSI,
-			.transfer_type = emi_2_per,
+			.transfer_type = trans_type,
 			.event_id = DMA_REQ_SSI1_TX2,
 			.bd_number = 32,
 			.word_size = TRANSFER_16BIT,
@@ -342,7 +348,7 @@ static mxc_sdma_channel_params_t mxc_sdma_ssi1_24bit_tx1_params = {
 			.watermark_level = MXC_SSI_TXFIFO_WML,
 			.per_address = SSI1_BASE_ADDR + MXC_SSI_TX1_REG,
 			.peripheral_type = SSI,
-			.transfer_type = emi_2_per,
+			.transfer_type = trans_type,
 			.event_id = DMA_REQ_SSI1_TX2,
 			.bd_number = 32,
 			.word_size = TRANSFER_32BIT,
@@ -737,6 +743,11 @@ EXPORT_SYMBOL(mxc_sdma_get_channel_params);
 void mxc_get_static_channels(mxc_dma_channel_t *chnl)
 {
 	/* No channels statically allocated for MX35 */
+#ifdef CONFIG_SDMA_IRAM
+	int i;
+	for (i = MXC_DMA_CHANNEL_IRAM; i < MAX_DMA_CHANNELS; i++)
+		chnl[i].dynamic = 0;
+#endif
 }
 
 EXPORT_SYMBOL(mxc_get_static_channels);
diff --git a/arch/arm/mach-mx35/mx35_3stack.c b/arch/arm/mach-mx35/mx35_3stack.c
index 229db10..606db95 100644
--- a/arch/arm/mach-mx35/mx35_3stack.c
+++ b/arch/arm/mach-mx35/mx35_3stack.c
@@ -273,8 +273,8 @@ static struct resource mlb_resource[] = {
 };
 
 static struct mxc_mlb_platform_data mlb_data = {
-	.buf_address = IRAM_BASE_ADDR_VIRT,
-	.phy_address = IRAM_BASE_ADDR,
+	.buf_address = IRAM_BASE_ADDR_VIRT + MLB_IRAM_ADDR_OFFSET,
+	.phy_address = IRAM_BASE_ADDR + MLB_IRAM_ADDR_OFFSET,
 	.reg_nvcc = "LDO6",
 	.mlb_clk = "mlb_clk",
 };
diff --git a/include/asm-arm/arch-mxc/mx35.h b/include/asm-arm/arch-mxc/mx35.h
index b125e56..9a26edb 100644
--- a/include/asm-arm/arch-mxc/mx35.h
+++ b/include/asm-arm/arch-mxc/mx35.h
@@ -74,12 +74,13 @@
 #define CONFIG_SDMA_IRAM_SIZE 0
 #endif
 #ifdef CONFIG_SND_MXC_SOC_IRAM
-#define SND_RAM_SIZE 0x3000
+#define SND_RAM_SIZE 0x10000
 #else
 #define SND_RAM_SIZE 0
 #endif
 
 #define SND_RAM_BASE_ADDR       (IRAM_BASE_ADDR + CONFIG_SDMA_IRAM_SIZE)
+#define MLB_IRAM_ADDR_OFFSET   CONFIG_SDMA_IRAM_SIZE + SND_RAM_SIZE
 
 /*
  * L2CC
@@ -147,6 +148,7 @@
 /*!
  * Defines for modules using static and dynamic DMA channels
  */
+#define MXC_DMA_CHANNEL_IRAM         30
 #define MXC_DMA_CHANNEL_UART1_RX  MXC_DMA_DYNAMIC_CHANNEL
 #define MXC_DMA_CHANNEL_UART1_TX  MXC_DMA_DYNAMIC_CHANNEL
 #define MXC_DMA_CHANNEL_UART2_RX  MXC_DMA_DYNAMIC_CHANNEL
@@ -157,7 +159,11 @@
 #define MXC_DMA_CHANNEL_MMC2  MXC_DMA_DYNAMIC_CHANNEL
 #define MXC_DMA_CHANNEL_MMC3  MXC_DMA_DYNAMIC_CHANNEL
 #define MXC_DMA_CHANNEL_SSI1_RX  MXC_DMA_DYNAMIC_CHANNEL
+#ifdef CONFIG_SDMA_IRAM
+#define MXC_DMA_CHANNEL_SSI1_TX  (MXC_DMA_CHANNEL_IRAM + 1)
+#else
 #define MXC_DMA_CHANNEL_SSI1_TX  MXC_DMA_DYNAMIC_CHANNEL
+#endif
 #define MXC_DMA_CHANNEL_SSI2_RX  MXC_DMA_DYNAMIC_CHANNEL
 #define MXC_DMA_CHANNEL_SSI2_TX  MXC_DMA_DYNAMIC_CHANNEL
 #define MXC_DMA_CHANNEL_CSPI1_RX  MXC_DMA_DYNAMIC_CHANNEL
-- 
1.5.4.4

