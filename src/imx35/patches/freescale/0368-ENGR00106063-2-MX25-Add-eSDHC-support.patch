From 93a2a5250d628e17bc3e865d5d4178d28416c866 Mon Sep 17 00:00:00 2001
From: Quinn Jensen <quinn.jensen@freescale.com>
Date: Fri, 30 Jan 2009 15:33:53 -0700
Subject: [PATCH] ENGR00106063-2 MX25: Add eSDHC support

Adds MX25-3stack platform support for eSDHC

Signed-off-by: Quinn Jensen <quinn.jensen@freescale.com>
---
 arch/arm/configs/imx25_3stack_defconfig |   65 ++++++++++++++++++--
 arch/arm/mach-mx25/board-mx25_3stack.h  |    2 +
 arch/arm/mach-mx25/clock.c              |    2 +-
 arch/arm/mach-mx25/mx25_3stack.c        |  101 +++++++++++++++++++++++++++++++
 arch/arm/mach-mx25/mx25_3stack_gpio.c   |   65 ++++++++------------
 5 files changed, 190 insertions(+), 45 deletions(-)

diff --git a/arch/arm/configs/imx25_3stack_defconfig b/arch/arm/configs/imx25_3stack_defconfig
index ad1b60f..4f6a5d0 100644
--- a/arch/arm/configs/imx25_3stack_defconfig
+++ b/arch/arm/configs/imx25_3stack_defconfig
@@ -1,7 +1,7 @@
 #
 # Automatically generated make config: don't edit
 # Linux kernel version: 2.6.26
-# Thu Oct  2 16:41:46 2008
+# Fri Jan 30 15:19:25 2009
 #
 CONFIG_ARM=y
 CONFIG_SYS_SUPPORTS_APM_EMULATION=y
@@ -424,7 +424,7 @@ CONFIG_IEEE80211=y
 CONFIG_UEVENT_HELPER_PATH="/sbin/hotplug"
 CONFIG_STANDALONE=y
 CONFIG_PREVENT_FIRMWARE_BUILD=y
-CONFIG_FW_LOADER=m
+CONFIG_FW_LOADER=y
 # CONFIG_SYS_HYPERVISOR is not set
 CONFIG_CONNECTOR=y
 CONFIG_PROC_EVENTS=y
@@ -736,6 +736,27 @@ CONFIG_I2C_BOARDINFO=y
 #
 CONFIG_I2C_MXC=y
 # CONFIG_I2C_MXC_HS is not set
+# CONFIG_I2C_OCORES is not set
+# CONFIG_I2C_PARPORT_LIGHT is not set
+# CONFIG_I2C_SIMTEC is not set
+# CONFIG_I2C_TAOS_EVM is not set
+# CONFIG_I2C_STUB is not set
+# CONFIG_I2C_PCA_PLATFORM is not set
+
+#
+# Miscellaneous I2C Chip support
+#
+# CONFIG_DS1682 is not set
+# CONFIG_SENSORS_EEPROM is not set
+# CONFIG_SENSORS_PCF8574 is not set
+# CONFIG_PCF8575 is not set
+# CONFIG_SENSORS_PCF8591 is not set
+# CONFIG_SENSORS_MAX6875 is not set
+# CONFIG_SENSORS_TSL2550 is not set
+# CONFIG_I2C_DEBUG_CORE is not set
+# CONFIG_I2C_DEBUG_ALGO is not set
+# CONFIG_I2C_DEBUG_BUS is not set
+# CONFIG_I2C_DEBUG_CHIP is not set
 # CONFIG_I2C_SLAVE is not set
 CONFIG_SPI=y
 CONFIG_SPI_MASTER=y
@@ -748,6 +769,7 @@ CONFIG_SPI_MXC=y
 # CONFIG_SPI_MXC_TEST_LOOPBACK is not set
 CONFIG_SPI_MXC_SELECT1=y
 # CONFIG_SPI_MXC_SELECT2 is not set
+# CONFIG_SPI_MXC_SELECT3 is not set
 
 #
 # SPI Protocol Masters
@@ -798,6 +820,16 @@ CONFIG_VIDEO_MEDIA=y
 # Multimedia drivers
 #
 # CONFIG_MEDIA_ATTACH is not set
+CONFIG_MEDIA_TUNER=y
+# CONFIG_MEDIA_TUNER_CUSTOMIZE is not set
+CONFIG_MEDIA_TUNER_SIMPLE=y
+CONFIG_MEDIA_TUNER_TDA8290=y
+CONFIG_MEDIA_TUNER_TDA9887=y
+CONFIG_MEDIA_TUNER_TEA5761=y
+CONFIG_MEDIA_TUNER_TEA5767=y
+CONFIG_MEDIA_TUNER_MT20XX=y
+CONFIG_MEDIA_TUNER_XC2028=y
+CONFIG_MEDIA_TUNER_XC5000=y
 CONFIG_VIDEO_V4L2=y
 CONFIG_VIDEO_V4L1=y
 CONFIG_VIDEO_CAPTURE_DRIVERS=y
@@ -808,6 +840,9 @@ CONFIG_VIDEO_HELPER_CHIPS_AUTO=y
 # CONFIG_VIDEO_MXC_OUTPUT is not set
 # CONFIG_VIDEO_MXC_OPL is not set
 # CONFIG_VIDEO_CPIA is not set
+# CONFIG_VIDEO_SAA5246A is not set
+# CONFIG_VIDEO_SAA5249 is not set
+# CONFIG_TUNER_3036 is not set
 # CONFIG_SOC_CAMERA is not set
 CONFIG_RADIO_ADAPTERS=y
 CONFIG_DAB=y
@@ -964,7 +999,8 @@ CONFIG_MMC_BLOCK_BOUNCE=y
 #
 # CONFIG_MMC_SPI is not set
 # CONFIG_MMC_MXC is not set
-# CONFIG_MMC_IMX_ESDHCI is not set
+CONFIG_MMC_IMX_ESDHCI=y
+# CONFIG_MMC_IMX_ESDHCI_SELECT2 is not set
 # CONFIG_MMC_IMX_ESDHCI_PIO_MODE is not set
 # CONFIG_NEW_LEDS is not set
 CONFIG_RTC_LIB=y
@@ -983,6 +1019,22 @@ CONFIG_RTC_INTF_DEV=y
 # CONFIG_RTC_DRV_TEST is not set
 
 #
+# I2C RTC drivers
+#
+# CONFIG_RTC_DRV_DS1307 is not set
+# CONFIG_RTC_DRV_DS1374 is not set
+# CONFIG_RTC_DRV_DS1672 is not set
+# CONFIG_RTC_DRV_MAX6900 is not set
+# CONFIG_RTC_DRV_RS5C372 is not set
+# CONFIG_RTC_DRV_ISL1208 is not set
+# CONFIG_RTC_DRV_X1205 is not set
+# CONFIG_RTC_DRV_PCF8563 is not set
+# CONFIG_RTC_DRV_PCF8583 is not set
+# CONFIG_RTC_DRV_M41T80 is not set
+# CONFIG_RTC_DRV_S35390A is not set
+# CONFIG_RTC_DRV_FM3130 is not set
+
+#
 # SPI RTC drivers
 #
 # CONFIG_RTC_DRV_MAX6902 is not set
@@ -1012,7 +1064,6 @@ CONFIG_RTC_DRV_IMXDI=y
 #
 # MXC support drivers
 #
-# CONFIG_MXC_IPU is not set
 
 #
 # MXC SSI support
@@ -1031,10 +1082,14 @@ CONFIG_MXC_PMIC=y
 # CONFIG_MXC_PMIC_MC13783 is not set
 # CONFIG_MXC_PMIC_MC13892 is not set
 CONFIG_MXC_PMIC_MC34704=y
-# CONFIG_MXC_PMIC_MC9SDZ60 is not set
 CONFIG_MXC_PMIC_CHARDEV=y
 
 #
+# MXC PMIC Client Drivers
+#
+# CONFIG_MXC_PMIC_MC9SDZ60 is not set
+
+#
 # Advanced Power Management devices
 #
 
diff --git a/arch/arm/mach-mx25/board-mx25_3stack.h b/arch/arm/mach-mx25/board-mx25_3stack.h
index 966df63..0c45418 100644
--- a/arch/arm/mach-mx25/board-mx25_3stack.h
+++ b/arch/arm/mach-mx25/board-mx25_3stack.h
@@ -165,6 +165,8 @@ extern int mxc_clocks_init(void);
 extern void __init early_console_setup(char *);
 extern int headphone_det_status(void);
 extern void sgtl5000_enable_amp(void);
+extern unsigned int sdhc_get_card_det_status(struct device *dev);
+extern int sdhc_write_protect(struct device *dev);
 
 #endif				/* CONFIG_MACH_MX25_3DS */
 #endif				/* __ASM_ARCH_MXC_BOARD_MX25_3STACK_H__ */
diff --git a/arch/arm/mach-mx25/clock.c b/arch/arm/mach-mx25/clock.c
index 072c3fd..92d5116 100644
--- a/arch/arm/mach-mx25/clock.c
+++ b/arch/arm/mach-mx25/clock.c
@@ -461,7 +461,7 @@ static struct clk per_clk[] = {
 	 .set_parent = _clk_perclkx_set_parent,
 	 .recalc = _clk_perclkx_recalc,
 	 .enable = _perclk_enable,
-	 .name = "per_esdhc2_clk",
+	 .disable = _perclk_disable,
 	 .flags = RATE_PROPAGATES,},
 	{
 	 .name = "per_esdhc2_clk",
diff --git a/arch/arm/mach-mx25/mx25_3stack.c b/arch/arm/mach-mx25/mx25_3stack.c
index 6a24f4c..1b02605 100644
--- a/arch/arm/mach-mx25/mx25_3stack.c
+++ b/arch/arm/mach-mx25/mx25_3stack.c
@@ -38,6 +38,7 @@
 #include <asm/mach/irq.h>
 #include <asm/arch/memory.h>
 #include <asm/arch/gpio.h>
+#include <asm/arch/mmc.h>
 
 #include "board-mx25_3stack.h"
 #include "crm_regs.h"
@@ -328,6 +329,105 @@ unsigned int expio_intr_fec = MXC_INT_POWER_FAIL;
 EXPORT_SYMBOL(expio_intr_fec);
 #endif
 
+#if defined(CONFIG_MMC_IMX_ESDHCI) || defined(CONFIG_MMC_IMX_ESDHCI_MODULE)
+static struct mxc_mmc_platform_data mmc1_data = {
+	.ocr_mask = MMC_VDD_29_30 | MMC_VDD_32_33,
+	.caps = MMC_CAP_4_BIT_DATA,
+	.min_clk = 400000,
+	.max_clk = 52000000,
+	.card_inserted_state = 1,
+	.status = sdhc_get_card_det_status,
+	.wp_status = sdhc_write_protect,
+	.clock_mmc = "esdhc_clk",
+};
+
+/*!
+ * Resource definition for the SDHC1
+ */
+static struct resource mxcsdhc1_resources[] = {
+	[0] = {
+	       .start = MMC_SDHC1_BASE_ADDR,
+	       .end = MMC_SDHC1_BASE_ADDR + SZ_4K - 1,
+	       .flags = IORESOURCE_MEM,
+	       },
+	[1] = {
+	       .start = MXC_INT_SDHC1,
+	       .end = MXC_INT_SDHC1,
+	       .flags = IORESOURCE_IRQ,
+	       },
+	[2] = {
+	       .start = IOMUX_TO_IRQ(MX25_PIN_A15),
+	       .end = IOMUX_TO_IRQ(MX25_PIN_A15),
+	       .flags = IORESOURCE_IRQ,
+	       },
+};
+
+/*! Device Definition for MXC SDHC1 */
+static struct platform_device mxcsdhc1_device = {
+	.name = "mxsdhci",
+	.id = 0,
+	.dev = {
+		.release = mxc_nop_release,
+		.platform_data = &mmc1_data,
+		},
+	.num_resources = ARRAY_SIZE(mxcsdhc1_resources),
+	.resource = mxcsdhc1_resources,
+};
+
+#ifdef CONFIG_MMC_IMX_ESDHCI_SELECT2
+static struct mxc_mmc_platform_data mmc2_data = {
+	.ocr_mask = MMC_VDD_29_30 | MMC_VDD_32_33,
+	.caps = MMC_CAP_4_BIT_DATA,
+	.min_clk = 400000,
+	.max_clk = 52000000,
+	.card_fixed = 1,
+	.card_inserted_state = 1,
+	.status = sdhc_get_card_det_status,
+	.clock_mmc = "esdhc2_clk",
+};
+
+/*!
+ * Resource definition for the SDHC2
+ */
+static struct resource mxcsdhc2_resources[] = {
+	[0] = {
+	       .start = MMC_SDHC2_BASE_ADDR,
+	       .end = MMC_SDHC2_BASE_ADDR + SZ_4K - 1,
+	       .flags = IORESOURCE_MEM,
+	       },
+	[1] = {
+	       .start = MXC_INT_SDHC2,
+	       .end = MXC_INT_SDHC2,
+	       .flags = IORESOURCE_IRQ,
+	       },
+};
+
+/*! Device Definition for MXC SDHC2 */
+static struct platform_device mxcsdhc2_device = {
+	.name = "mxsdhci",
+	.id = 1,
+	.dev = {
+		.release = mxc_nop_release,
+		.platform_data = &mmc2_data,
+		},
+	.num_resources = ARRAY_SIZE(mxcsdhc2_resources),
+	.resource = mxcsdhc2_resources,
+};
+#endif
+
+static inline void mxc_init_mmc(void)
+{
+	(void)platform_device_register(&mxcsdhc1_device);
+#ifdef CONFIG_MMC_IMX_ESDHCI_SELECT2
+	(void)platform_device_register(&mxcsdhc2_device);
+#endif
+}
+#else
+static inline void mxc_init_mmc(void)
+{
+}
+#endif
+
 /*!
  * Board specific fixup function. It is called by \b setup_arch() in
  * setup.c file very early on during kernel starts. It allows the user to
@@ -376,6 +476,7 @@ static void __init mxc_board_init(void)
 	mxc_init_bl();
 	mxc_init_nand_mtd();
 	mxc_sgtl5000_init();
+	mxc_init_mmc();
 }
 
 /*
diff --git a/arch/arm/mach-mx25/mx25_3stack_gpio.c b/arch/arm/mach-mx25/mx25_3stack_gpio.c
index 892bfb2..dde0e19 100644
--- a/arch/arm/mach-mx25/mx25_3stack_gpio.c
+++ b/arch/arm/mach-mx25/mx25_3stack_gpio.c
@@ -778,31 +778,17 @@ void gpio_sdhc_active(int module)
 		mxc_request_iomux(MX25_PIN_SD1_DATA1, MUX_CONFIG_FUNC);
 		mxc_request_iomux(MX25_PIN_SD1_DATA2, MUX_CONFIG_FUNC);
 		mxc_request_iomux(MX25_PIN_SD1_DATA3, MUX_CONFIG_FUNC);
-		mxc_request_iomux(MX25_PIN_D15, MUX_CONFIG_ALT6); /*DAT7*/
-		mxc_request_iomux(MX25_PIN_D14, MUX_CONFIG_ALT6); /*DAT6*/
-		mxc_request_iomux(MX25_PIN_D13, MUX_CONFIG_ALT6); /*DAT5*/
-		mxc_request_iomux(MX25_PIN_D12, MUX_CONFIG_ALT6); /*DAT4*/
 		mxc_request_iomux(MX25_PIN_A14, MUX_CONFIG_ALT5); /*SD1_WP*/
 		mxc_request_iomux(MX25_PIN_A15, MUX_CONFIG_ALT5); /*SD1_DET*/
 
-#if 0
-		/* Or if UART2 pins are not in use */
-		mxc_request_iomux(MX25_PIN_UART2_RXD, MUX_CONFIG_ALT1); /*DAT7*/
-		mxc_request_iomux(MX25_PIN_UART2_TXD, MUX_CONFIG_ALT1); /*DAT6*/
-		mxc_request_iomux(MX25_PIN_UART2_RTS, MUX_CONFIG_ALT1); /*DAT5*/
-		mxc_request_iomux(MX25_PIN_UART2_CTS, MUX_CONFIG_ALT1); /*DAT4*/
-#endif
-
 		mxc_iomux_set_pad(MX25_PIN_SD1_CMD, SDHC_PAD_CTL);
 		mxc_iomux_set_pad(MX25_PIN_SD1_CLK, SDHC_PAD_CTL);
 		mxc_iomux_set_pad(MX25_PIN_SD1_DATA0, SDHC_PAD_CTL);
 		mxc_iomux_set_pad(MX25_PIN_SD1_DATA1, SDHC_PAD_CTL);
 		mxc_iomux_set_pad(MX25_PIN_SD1_DATA2, SDHC_PAD_CTL);
 		mxc_iomux_set_pad(MX25_PIN_SD1_DATA3, SDHC_PAD_CTL);
-		mxc_iomux_set_pad(MX25_PIN_D15, SDHC_PAD_CTL);
-		mxc_iomux_set_pad(MX25_PIN_D14, SDHC_PAD_CTL);
-		mxc_iomux_set_pad(MX25_PIN_D13, SDHC_PAD_CTL);
-		mxc_iomux_set_pad(MX25_PIN_D12, SDHC_PAD_CTL);
+		mxc_iomux_set_pad(MX25_PIN_A14, PAD_CTL_DRV_NORMAL);
+		mxc_iomux_set_pad(MX25_PIN_A15, PAD_CTL_DRV_NORMAL);
 
 		/* Set write protect and card detect gpio as inputs */
 		mxc_set_gpio_direction(MX25_PIN_A14, 1); /*SD1_WP*/
@@ -819,21 +805,6 @@ void gpio_sdhc_active(int module)
 		mxc_request_iomux(MX25_PIN_LD11, MUX_CONFIG_ALT6); /*DAT1*/
 		mxc_request_iomux(MX25_PIN_LD12, MUX_CONFIG_ALT6); /*DAT2*/
 		mxc_request_iomux(MX25_PIN_LD13, MUX_CONFIG_ALT6); /*DAT3*/
-		mxc_request_iomux(MX25_PIN_CSI_D2, MUX_CONFIG_ALT2); /*DAT4*/
-		mxc_request_iomux(MX25_PIN_CSI_D3, MUX_CONFIG_ALT2); /*DAT5*/
-		mxc_request_iomux(MX25_PIN_CSI_D4, MUX_CONFIG_ALT2); /*DAT6*/
-		mxc_request_iomux(MX25_PIN_CSI_D5, MUX_CONFIG_ALT2); /*DAT7*/
-
-#if 0
-		/* Or if CSI pins are not in use */
-		mxc_request_iomux(MX25_PIN_CSI_D6, MUX_CONFIG_ALT2); /*CMD*/
-		mxc_request_iomux(MX25_PIN_CSI_D7, MUX_CONFIG_ALT2); /*CLK*/
-		mxc_request_iomux(MX25_PIN_CSI_MCLK, MUX_CONFIG_ALT2); /*DAT0*/
-		mxc_request_iomux(MX25_PIN_CSI_VSYNC, MUX_CONFIG_ALT2); /*DAT1*/
-		mxc_request_iomux(MX25_PIN_CSI_HSYNC, MUX_CONFIG_ALT2); /*DAT2*/
-		/*DAT3*/
-		mxc_request_iomux(MX25_PIN_CSI_PIXCLK, MUX_CONFIG_ALT2);
-#endif
 
 		mxc_iomux_set_pad(MX25_PIN_LD8, SDHC_PAD_CTL);
 		mxc_iomux_set_pad(MX25_PIN_LD9, SDHC_PAD_CTL);
@@ -868,10 +839,6 @@ void gpio_sdhc_inactive(int module)
 		mxc_request_gpio(MX25_PIN_SD1_DATA1);
 		mxc_request_gpio(MX25_PIN_SD1_DATA2);
 		mxc_request_gpio(MX25_PIN_SD1_DATA3);
-		mxc_request_gpio(MX25_PIN_D15); /*DAT7*/
-		mxc_request_gpio(MX25_PIN_D14); /*DAT6*/
-		mxc_request_gpio(MX25_PIN_D13); /*DAT5*/
-		mxc_request_gpio(MX25_PIN_D12); /*DAT4*/
 
 		mxc_free_iomux(MX25_PIN_SD1_CMD, MUX_CONFIG_GPIO);
 		mxc_free_iomux(MX25_PIN_SD1_CLK, MUX_CONFIG_GPIO);
@@ -879,10 +846,6 @@ void gpio_sdhc_inactive(int module)
 		mxc_free_iomux(MX25_PIN_SD1_DATA1, MUX_CONFIG_GPIO);
 		mxc_free_iomux(MX25_PIN_SD1_DATA2, MUX_CONFIG_GPIO);
 		mxc_free_iomux(MX25_PIN_SD1_DATA3, MUX_CONFIG_GPIO);
-		mxc_free_iomux(MX25_PIN_D15, MUX_CONFIG_GPIO);
-		mxc_free_iomux(MX25_PIN_D14, MUX_CONFIG_GPIO);
-		mxc_free_iomux(MX25_PIN_D13, MUX_CONFIG_GPIO);
-		mxc_free_iomux(MX25_PIN_D12, MUX_CONFIG_GPIO);
 		break;
 	case 1:
 		/* SDHC2 */
@@ -915,6 +878,30 @@ void gpio_sdhc_inactive(int module)
 EXPORT_SYMBOL(gpio_sdhc_inactive);
 
 /*
+ * Probe for the card. If present the GPIO data would be set.
+ */
+unsigned int sdhc_get_card_det_status(struct device *dev)
+{
+	unsigned int ret = 0;
+
+	ret = mxc_get_gpio_datain(MX25_PIN_A15);
+	return ret;
+}
+EXPORT_SYMBOL(sdhc_get_card_det_status);
+
+/*!
+ * Get pin value to detect write protection
+ */
+int sdhc_write_protect(struct device *dev)
+{
+	unsigned int rc = 0;
+
+	rc = mxc_get_gpio_datain(MX25_PIN_A14);
+	return rc;
+}
+EXPORT_SYMBOL(sdhc_write_protect);
+
+/*
  *  USB Host2
  */
 int gpio_usbh2_active(void)
-- 
1.5.4.4

