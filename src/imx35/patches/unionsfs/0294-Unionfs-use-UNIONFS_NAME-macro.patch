From 0bf26fde02ef244e57bf6a33fff66f44ce35d8f0 Mon Sep 17 00:00:00 2001
From: Erez Zadok <ezk@cs.sunysb.edu>
Date: Sat, 29 Sep 2007 01:36:57 -0400
Subject: [PATCH] Unionfs: use UNIONFS_NAME macro

Signed-off-by: Erez Zadok <ezk@cs.sunysb.edu>
---
 fs/unionfs/debug.c |    2 +-
 fs/unionfs/main.c  |    4 ++--
 2 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/fs/unionfs/debug.c b/fs/unionfs/debug.c
index b103eb9..da82a47 100644
--- a/fs/unionfs/debug.c
+++ b/fs/unionfs/debug.c
@@ -428,7 +428,7 @@ void __unionfs_check_nd(const struct nameidata *nd,
 		file = nd->intent.open.file;
 		if (unlikely(file->f_path.dentry &&
 			     strcmp(file->f_dentry->d_sb->s_type->name,
-				    "unionfs"))) {
+				    UNIONFS_NAME))) {
 			PRINT_CALLER(fname, fxn, line);
 			printk(" CND1: lower_file of type %s\n",
 			       file->f_path.dentry->d_sb->s_type->name);
diff --git a/fs/unionfs/main.c b/fs/unionfs/main.c
index 72438fb..615617a 100644
--- a/fs/unionfs/main.c
+++ b/fs/unionfs/main.c
@@ -227,7 +227,7 @@ void unionfs_reinterpose(struct dentry *dentry)
 int check_branch(struct nameidata *nd)
 {
 	/* XXX: remove in ODF code -- stacking unions allowed there */
-	if (!strcmp(nd->dentry->d_sb->s_type->name, "unionfs"))
+	if (!strcmp(nd->dentry->d_sb->s_type->name, UNIONFS_NAME))
 		return -EINVAL;
 	if (!nd->dentry->d_inode)
 		return -ENOENT;
@@ -722,7 +722,7 @@ static int unionfs_get_sb(struct file_system_type *fs_type,
 
 static struct file_system_type unionfs_fs_type = {
 	.owner		= THIS_MODULE,
-	.name		= "unionfs",
+	.name		= UNIONFS_NAME,
 	.get_sb		= unionfs_get_sb,
 	.kill_sb	= generic_shutdown_super,
 	.fs_flags	= FS_REVAL_DOT,
-- 
1.5.4.3

