From 48c8213a6d3fd502b3eef11e67729a0110fe0b6a Mon Sep 17 00:00:00 2001
From: Erez Zadok <ezk@cs.sunysb.edu>
Date: Sat, 29 Sep 2007 01:36:57 -0400
Subject: [PATCH] Unionfs: coding style: avoid multiple assignments on same line

Signed-off-by: Erez Zadok <ezk@cs.sunysb.edu>
---
 fs/unionfs/mmap.c  |    3 ++-
 fs/unionfs/super.c |    9 ++++++---
 2 files changed, 8 insertions(+), 4 deletions(-)

diff --git a/fs/unionfs/mmap.c b/fs/unionfs/mmap.c
index ac1a060..6440282 100644
--- a/fs/unionfs/mmap.c
+++ b/fs/unionfs/mmap.c
@@ -179,7 +179,8 @@ static int unionfs_do_readpage(struct file *file, struct page *page)
 	 * may be a little slower, but a lot safer, as the VFS does a lot of
 	 * the necessary magic for us.
 	 */
-	offset = lower_file->f_pos = page_offset(page);
+	lower_file->f_pos = page_offset(page);
+	offset = page_offset(page);
 	old_fs = get_fs();
 	set_fs(KERNEL_DS);
 	err = vfs_read(lower_file, page_data, PAGE_CACHE_SIZE,
diff --git a/fs/unionfs/super.c b/fs/unionfs/super.c
index 0da9181..0a0b075 100644
--- a/fs/unionfs/super.c
+++ b/fs/unionfs/super.c
@@ -477,13 +477,16 @@ static int unionfs_remount_fs(struct super_block *sb, int *flags,
 	 * "add" and "del" commands.  Copy the "options" string because
 	 * strsep modifies the string and we need it later.
 	 */
-	optionstmp = tmp_to_free = kstrdup(options, GFP_KERNEL);
+	tmp_to_free = kstrdup(options, GFP_KERNEL);
+	optionstmp = tmp_to_free;
 	if (unlikely(!optionstmp)) {
 		err = -ENOMEM;
 		goto out_free;
 	}
-	new_branches = cur_branches = sbmax(sb); /* current no. branches */
-	add_branches = del_branches = 0;
+	cur_branches = sbmax(sb); /* current no. branches */
+	new_branches = sbmax(sb);
+	del_branches = 0;
+	add_branches = 0;
 	new_high_branch_id = sbhbid(sb); /* save current high_branch_id */
 	while ((optname = strsep(&optionstmp, ",")) != NULL) {
 		char *optarg;
-- 
1.5.4.3

