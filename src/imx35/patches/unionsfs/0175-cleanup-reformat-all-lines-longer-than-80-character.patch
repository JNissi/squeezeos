From c3c558107eb0f6f3809730c1c53681642402782e Mon Sep 17 00:00:00 2001
From: Erez_Zadok <ezk@cs.sunysb.edu>
Date: Thu, 31 May 2007 22:32:10 -0400
Subject: [PATCH] cleanup: reformat all lines longer than 80 characters

Signed-off-by: Erez Zadok <ezk@cs.sunysb.edu>
---
 fs/unionfs/mmap.c  |    2 +-
 fs/unionfs/union.h |   30 +++++++++++++++++++-----------
 2 files changed, 20 insertions(+), 12 deletions(-)

diff --git a/fs/unionfs/mmap.c b/fs/unionfs/mmap.c
index 82d4095..1c90f15 100644
--- a/fs/unionfs/mmap.c
+++ b/fs/unionfs/mmap.c
@@ -10,7 +10,7 @@
  * Copyright (c) 2003      Puja Gupta
  * Copyright (c) 2003      Harikesavan Krishnan
  * Copyright (c) 2003-2007 Stony Brook University
- * Copyright (c) 2003-2007 The Research Foundation of State University of New York
+ * Copyright (c) 2003-2007 The Research Foundation of SUNY
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License version 2 as
diff --git a/fs/unionfs/union.h b/fs/unionfs/union.h
index 3709e57..37a53fd 100644
--- a/fs/unionfs/union.h
+++ b/fs/unionfs/union.h
@@ -191,11 +191,14 @@ extern void unionfs_destroy_dentry_cache(void);
 
 /* Initialize and free readdir-specific  state. */
 extern int init_rdstate(struct file *file);
-extern struct unionfs_dir_state *alloc_rdstate(struct inode *inode, int bindex);
-extern struct unionfs_dir_state *find_rdstate(struct inode *inode, loff_t fpos);
+extern struct unionfs_dir_state *alloc_rdstate(struct inode *inode,
+					       int bindex);
+extern struct unionfs_dir_state *find_rdstate(struct inode *inode,
+					      loff_t fpos);
 extern void free_rdstate(struct unionfs_dir_state *state);
-extern int add_filldir_node(struct unionfs_dir_state *rdstate, const char *name,
-			    int namelen, int bindex, int whiteout);
+extern int add_filldir_node(struct unionfs_dir_state *rdstate,
+			    const char *name, int namelen, int bindex,
+			    int whiteout);
 extern struct filldir_node *find_filldir_node(struct unionfs_dir_state *rdstate,
 					      const char *name, int namelen);
 
@@ -522,14 +525,19 @@ static inline void unionfs_mntput(struct dentry *dentry, int bindex)
 /* useful for tracking code reachability */
 #define UDBG printk("DBG:%s:%s:%d\n",__FILE__,__FUNCTION__,__LINE__)
 
-#define unionfs_check_inode(i)	__unionfs_check_inode((i),__FILE__,__FUNCTION__,__LINE__)
-#define unionfs_check_dentry(d)	__unionfs_check_dentry((d),__FILE__,__FUNCTION__,__LINE__)
-#define unionfs_check_file(f)	__unionfs_check_file((f),__FILE__,__FUNCTION__,__LINE__)
-#define show_branch_counts(sb)	__show_branch_counts((sb),__FILE__,__FUNCTION__,__LINE__)
-extern void __unionfs_check_inode(const struct inode *inode,
-				  const char *fname, const char *fxn, int line);
+#define unionfs_check_inode(i)	__unionfs_check_inode((i),\
+	__FILE__,__FUNCTION__,__LINE__)
+#define unionfs_check_dentry(d)	__unionfs_check_dentry((d),\
+	__FILE__,__FUNCTION__,__LINE__)
+#define unionfs_check_file(f)	__unionfs_check_file((f),\
+	__FILE__,__FUNCTION__,__LINE__)
+#define show_branch_counts(sb)	__show_branch_counts((sb),\
+	__FILE__,__FUNCTION__,__LINE__)
+extern void __unionfs_check_inode(const struct inode *inode, const char *fname,
+				  const char *fxn, int line);
 extern void __unionfs_check_dentry(const struct dentry *dentry,
-				   const char *fname, const char *fxn, int line);
+				   const char *fname, const char *fxn,
+				   int line);
 extern void __unionfs_check_file(const struct file *file,
 				 const char *fname, const char *fxn, int line);
 extern void __show_branch_counts(const struct super_block *sb,
-- 
1.5.4.3

