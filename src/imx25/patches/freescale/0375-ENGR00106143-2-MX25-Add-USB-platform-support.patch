From 7a6a83ec7ede07eb93939362c88caf917430ab82 Mon Sep 17 00:00:00 2001
From: Quinn Jensen <quinn.jensen@freescale.com>
Date: Thu, 29 Jan 2009 23:02:51 -0700
Subject: [PATCH] ENGR00106143-2 MX25: Add USB platform support

Add i.MX25 3-stack USB support.

Signed-off-by: Quinn Jensen <quinn.jensen@freescale.com>
---
 arch/arm/configs/imx25_3stack_defconfig |  206 ++++++++++++++++++++++++++++++-
 arch/arm/mach-mx25/Kconfig              |    1 +
 arch/arm/mach-mx25/Makefile             |    6 +
 arch/arm/mach-mx25/clock.c              |    9 +-
 arch/arm/mach-mx25/mx25_3stack_gpio.c   |  184 +++++----------------------
 arch/arm/mach-mx25/usb.h                |  103 +++++++++++++++
 arch/arm/mach-mx25/usb_dr.c             |  101 +++++++++++++++
 arch/arm/mach-mx25/usb_h2.c             |   87 +++++++++++++
 8 files changed, 540 insertions(+), 157 deletions(-)

diff --git a/arch/arm/configs/imx25_3stack_defconfig b/arch/arm/configs/imx25_3stack_defconfig
index 18c803c..23bc81d 100644
--- a/arch/arm/configs/imx25_3stack_defconfig
+++ b/arch/arm/configs/imx25_3stack_defconfig
@@ -1,7 +1,7 @@
 #
 # Automatically generated make config: don't edit
 # Linux kernel version: 2.6.26
-# Fri Jan 30 15:19:25 2009
+# Fri Jan 30 20:51:13 2009
 #
 CONFIG_ARM=y
 CONFIG_SYS_SUPPORTS_APM_EMULATION=y
@@ -193,6 +193,8 @@ CONFIG_ARCH_MXC_HAS_NFC_V2_1=y
 #
 # CONFIG_I2C_MXC_SELECT3 is not set
 CONFIG_DMA_ZONE_SIZE=24
+CONFIG_UTMI_MXC=y
+CONFIG_UTMI_MXC_OTG=m
 
 #
 # Processor Type
@@ -289,7 +291,10 @@ CONFIG_BINFMT_ELF=y
 #
 # Power management options
 #
-# CONFIG_PM is not set
+CONFIG_PM=y
+# CONFIG_PM_DEBUG is not set
+# CONFIG_SUSPEND is not set
+# CONFIG_APM_EMULATION is not set
 CONFIG_ARCH_SUSPEND_POSSIBLE=y
 
 #
@@ -392,10 +397,16 @@ CONFIG_IRTTY_SIR=m
 # Dongle support
 #
 # CONFIG_DONGLE is not set
+# CONFIG_KINGSUN_DONGLE is not set
+# CONFIG_KSDAZZLE_DONGLE is not set
+# CONFIG_KS959_DONGLE is not set
 
 #
 # FIR device drivers
 #
+# CONFIG_USB_IRDA is not set
+# CONFIG_SIGMATEL_FIR is not set
+# CONFIG_MCS_FIR is not set
 # CONFIG_MXC_FIR is not set
 # CONFIG_BT is not set
 # CONFIG_AF_RXRPC is not set
@@ -521,6 +532,7 @@ CONFIG_MTD_NAND_MXC_V2=y
 # CONFIG_MTD_NAND_MXC_FORCE_CE is not set
 # CONFIG_MXC_NAND_LOW_LEVEL_ERASE is not set
 # CONFIG_MTD_NAND_PLATFORM is not set
+# CONFIG_MTD_ALAUDA is not set
 # CONFIG_MTD_ONENAND is not set
 
 #
@@ -542,6 +554,7 @@ CONFIG_BLK_DEV=y
 CONFIG_BLK_DEV_LOOP=y
 # CONFIG_BLK_DEV_CRYPTOLOOP is not set
 # CONFIG_BLK_DEV_NBD is not set
+# CONFIG_BLK_DEV_UB is not set
 CONFIG_BLK_DEV_RAM=y
 CONFIG_BLK_DEV_RAM_COUNT=16
 CONFIG_BLK_DEV_RAM_SIZE=16384
@@ -630,6 +643,25 @@ CONFIG_FEC=m
 # CONFIG_WLAN_PRE80211 is not set
 # CONFIG_WLAN_80211 is not set
 # CONFIG_IWLWIFI_LEDS is not set
+
+#
+# USB Network Adapters
+#
+# CONFIG_USB_CATC is not set
+# CONFIG_USB_KAWETH is not set
+# CONFIG_USB_PEGASUS is not set
+CONFIG_USB_RTL8150=m
+CONFIG_USB_USBNET=m
+CONFIG_USB_NET_AX8817X=m
+CONFIG_USB_NET_CDCETHER=m
+# CONFIG_USB_NET_DM9601 is not set
+# CONFIG_USB_NET_GL620A is not set
+# CONFIG_USB_NET_NET1080 is not set
+# CONFIG_USB_NET_PLUSB is not set
+# CONFIG_USB_NET_MCS7830 is not set
+# CONFIG_USB_NET_RNDIS_HOST is not set
+# CONFIG_USB_NET_CDC_SUBSET is not set
+# CONFIG_USB_NET_ZAURUS is not set
 # CONFIG_WAN is not set
 CONFIG_PPP=m
 # CONFIG_PPP_MULTILINK is not set
@@ -689,6 +721,7 @@ CONFIG_TOUCHSCREEN_IMX_ADC=y
 # CONFIG_TOUCHSCREEN_TOUCHRIGHT is not set
 # CONFIG_TOUCHSCREEN_TOUCHWIN is not set
 # CONFIG_TOUCHSCREEN_UCB1400 is not set
+# CONFIG_TOUCHSCREEN_USB_COMPOSITE is not set
 # CONFIG_INPUT_MISC is not set
 
 #
@@ -742,6 +775,7 @@ CONFIG_I2C_MXC=y
 # CONFIG_I2C_SIMTEC is not set
 # CONFIG_I2C_TAOS_EVM is not set
 # CONFIG_I2C_STUB is not set
+# CONFIG_I2C_TINY_USB is not set
 # CONFIG_I2C_PCA_PLATFORM is not set
 
 #
@@ -791,6 +825,11 @@ CONFIG_WATCHDOG_NOWAYOUT=y
 # CONFIG_MXC_WATCHDOG is not set
 
 #
+# USB-based Watchdog Cards
+#
+# CONFIG_USBPCWATCHDOG is not set
+
+#
 # Sonics Silicon Backplane
 #
 CONFIG_SSB_POSSIBLE=y
@@ -841,12 +880,17 @@ CONFIG_VIDEO_HELPER_CHIPS_AUTO=y
 # CONFIG_VIDEO_MXC_OUTPUT is not set
 # CONFIG_VIDEO_MXC_OPL is not set
 # CONFIG_VIDEO_CPIA is not set
+# CONFIG_VIDEO_CPIA2 is not set
 # CONFIG_VIDEO_SAA5246A is not set
 # CONFIG_VIDEO_SAA5249 is not set
 # CONFIG_TUNER_3036 is not set
+# CONFIG_V4L_USB_DRIVERS is not set
 # CONFIG_SOC_CAMERA is not set
 CONFIG_RADIO_ADAPTERS=y
+# CONFIG_USB_DSBR is not set
+# CONFIG_USB_SI470X is not set
 CONFIG_DAB=y
+# CONFIG_USB_DABUSB is not set
 
 #
 # Graphics support
@@ -952,6 +996,12 @@ CONFIG_SND_VERBOSE_PROCFS=y
 #
 
 #
+# USB devices
+#
+# CONFIG_SND_USB_AUDIO is not set
+# CONFIG_SND_USB_CAIAQ is not set
+
+#
 # System on Chip audio support
 #
 CONFIG_SND_SOC=y
@@ -982,7 +1032,157 @@ CONFIG_HID_SUPPORT=y
 CONFIG_HID=y
 # CONFIG_HID_DEBUG is not set
 # CONFIG_HIDRAW is not set
-# CONFIG_USB_SUPPORT is not set
+
+#
+# USB Input Devices
+#
+CONFIG_USB_HID=y
+# CONFIG_USB_HIDINPUT_POWERBOOK is not set
+# CONFIG_HID_FF is not set
+# CONFIG_USB_HIDDEV is not set
+CONFIG_USB_SUPPORT=y
+CONFIG_USB_ARCH_HAS_HCD=y
+# CONFIG_USB_ARCH_HAS_OHCI is not set
+CONFIG_USB_ARCH_HAS_EHCI=y
+CONFIG_USB=y
+# CONFIG_USB_DEBUG is not set
+CONFIG_USB_ANNOUNCE_NEW_DEVICES=y
+
+#
+# Miscellaneous USB options
+#
+CONFIG_USB_DEVICEFS=y
+# CONFIG_USB_DEVICE_CLASS is not set
+# CONFIG_USB_DYNAMIC_MINORS is not set
+CONFIG_USB_SUSPEND=y
+CONFIG_USB_OTG=y
+# CONFIG_USB_OTG_WHITELIST is not set
+# CONFIG_USB_OTG_BLACKLIST_HUB is not set
+
+#
+# USB Host Controller Drivers
+#
+# CONFIG_USB_C67X00_HCD is not set
+CONFIG_USB_EHCI_HCD=m
+CONFIG_USB_EHCI_ARC=y
+CONFIG_USB_EHCI_ARC_H2=y
+CONFIG_USB_EHCI_ARC_OTG=y
+# CONFIG_USB_STATIC_IRAM is not set
+# CONFIG_USB_EHCI_FSL_MC13783 is not set
+# CONFIG_USB_EHCI_FSL_1301 is not set
+# CONFIG_USB_EHCI_FSL_1504 is not set
+CONFIG_USB_EHCI_FSL_UTMI=y
+CONFIG_USB_EHCI_ROOT_HUB_TT=y
+# CONFIG_USB_EHCI_TT_NEWSCHED is not set
+# CONFIG_USB_ISP116X_HCD is not set
+# CONFIG_USB_ISP1760_HCD is not set
+# CONFIG_USB_SL811_HCD is not set
+# CONFIG_USB_R8A66597_HCD is not set
+
+#
+# USB Device Class drivers
+#
+# CONFIG_USB_ACM is not set
+# CONFIG_USB_PRINTER is not set
+# CONFIG_USB_WDM is not set
+
+#
+# NOTE: USB_STORAGE enables SCSI, and 'SCSI disk support'
+#
+
+#
+# may also be needed; see USB_STORAGE Help for more information
+#
+CONFIG_USB_STORAGE=y
+# CONFIG_USB_STORAGE_DEBUG is not set
+# CONFIG_USB_STORAGE_DATAFAB is not set
+# CONFIG_USB_STORAGE_FREECOM is not set
+# CONFIG_USB_STORAGE_ISD200 is not set
+# CONFIG_USB_STORAGE_DPCM is not set
+# CONFIG_USB_STORAGE_USBAT is not set
+# CONFIG_USB_STORAGE_SDDR09 is not set
+# CONFIG_USB_STORAGE_SDDR55 is not set
+# CONFIG_USB_STORAGE_JUMPSHOT is not set
+# CONFIG_USB_STORAGE_ALAUDA is not set
+# CONFIG_USB_STORAGE_ONETOUCH is not set
+# CONFIG_USB_STORAGE_KARMA is not set
+# CONFIG_USB_STORAGE_CYPRESS_ATACB is not set
+# CONFIG_USB_LIBUSUAL is not set
+
+#
+# USB Imaging devices
+#
+# CONFIG_USB_MDC800 is not set
+# CONFIG_USB_MICROTEK is not set
+# CONFIG_USB_MON is not set
+
+#
+# Belcarra USBLAN Networking for USB
+#
+# CONFIG_USB_USBLAN is not set
+
+#
+# USB port drivers
+#
+# CONFIG_USB_SERIAL is not set
+
+#
+# USB Miscellaneous drivers
+#
+# CONFIG_USB_EMI62 is not set
+# CONFIG_USB_EMI26 is not set
+# CONFIG_USB_ADUTUX is not set
+# CONFIG_USB_AUERSWALD is not set
+# CONFIG_USB_RIO500 is not set
+# CONFIG_USB_LEGOTOWER is not set
+# CONFIG_USB_LCD is not set
+# CONFIG_USB_BERRY_CHARGE is not set
+# CONFIG_USB_LED is not set
+# CONFIG_USB_CYPRESS_CY7C63 is not set
+# CONFIG_USB_CYTHERM is not set
+# CONFIG_USB_PHIDGET is not set
+# CONFIG_USB_IDMOUSE is not set
+# CONFIG_USB_FTDI_ELAN is not set
+# CONFIG_USB_APPLEDISPLAY is not set
+# CONFIG_USB_SISUSBVGA is not set
+# CONFIG_USB_LD is not set
+# CONFIG_USB_TRANCEVIBRATOR is not set
+# CONFIG_USB_IOWARRIOR is not set
+# CONFIG_USB_TEST is not set
+# CONFIG_USB_ISIGHTFW is not set
+CONFIG_USB_GADGET=m
+# CONFIG_USB_GADGET_DEBUG_FILES is not set
+CONFIG_USB_GADGET_SELECTED=y
+# CONFIG_USB_GADGET_AMD5536UDC is not set
+# CONFIG_USB_GADGET_ATMEL_USBA is not set
+# CONFIG_USB_GADGET_FSL_USB2 is not set
+# CONFIG_USB_GADGET_NET2280 is not set
+# CONFIG_USB_GADGET_PXA2XX is not set
+# CONFIG_USB_GADGET_M66592 is not set
+# CONFIG_USB_GADGET_PXA27X is not set
+# CONFIG_USB_GADGET_GOKU is not set
+# CONFIG_USB_GADGET_LH7A40X is not set
+# CONFIG_USB_GADGET_OMAP is not set
+CONFIG_USB_GADGET_ARC=y
+CONFIG_USB_ARC=m
+# CONFIG_USB_GADGET_S3C2410 is not set
+# CONFIG_USB_GADGET_AT91 is not set
+# CONFIG_USB_GADGET_DUMMY_HCD is not set
+CONFIG_USB_GADGET_DUALSPEED=y
+CONFIG_USB_GADGET_ARC_OTG=y
+# CONFIG_USB_GADGET_FSL_MC13783 is not set
+# CONFIG_USB_GADGET_FSL_1301 is not set
+# CONFIG_USB_GADGET_FSL_1504 is not set
+CONFIG_USB_GADGET_FSL_UTMI=y
+# CONFIG_USB_ZERO is not set
+CONFIG_USB_ETH=m
+CONFIG_USB_ETH_RNDIS=y
+# CONFIG_USB_GADGETFS is not set
+CONFIG_USB_FILE_STORAGE=m
+# CONFIG_USB_FILE_STORAGE_TEST is not set
+CONFIG_USB_G_SERIAL=m
+# CONFIG_USB_MIDI_GADGET is not set
+# CONFIG_USB_G_PRINTER is not set
 CONFIG_MMC=y
 # CONFIG_MMC_DEBUG is not set
 # CONFIG_MMC_UNSAFE_RESUME is not set
diff --git a/arch/arm/mach-mx25/Kconfig b/arch/arm/mach-mx25/Kconfig
index 5a28920..03d27eb 100644
--- a/arch/arm/mach-mx25/Kconfig
+++ b/arch/arm/mach-mx25/Kconfig
@@ -5,6 +5,7 @@ config MX25_OPTIONS
 	bool
 	default y
 	select CPU_ARM926T
+	select USB_ARCH_HAS_EHCI
 
 config MACH_MX25_3DS
 	bool "Support MX25 3STACK platforms"
diff --git a/arch/arm/mach-mx25/Makefile b/arch/arm/mach-mx25/Makefile
index fad1e76..0c69f28 100644
--- a/arch/arm/mach-mx25/Makefile
+++ b/arch/arm/mach-mx25/Makefile
@@ -8,3 +8,9 @@ obj-y		:= system.o iomux.o cpu.o mm.o clock.o devices.o serial.o
 obj-$(CONFIG_MXC_SDMA_API) 	+= dma.o
 obj-$(CONFIG_SPI_MXC)		+= mx25_3stack_cpld.o
 obj-$(CONFIG_MACH_MX25_3DS)	+= mx25_3stack.o mx25_3stack_gpio.o
+
+obj-$(CONFIG_USB_EHCI_ARC_H2)	+= usb_h2.o
+
+ifneq ($(strip $(CONFIG_USB_GADGET_ARC) $(CONFIG_USB_EHCI_ARC_OTG)),)
+	obj-y	+= usb_dr.o
+endif
diff --git a/arch/arm/mach-mx25/clock.c b/arch/arm/mach-mx25/clock.c
index 92d5116..d4d9d4f 100644
--- a/arch/arm/mach-mx25/clock.c
+++ b/arch/arm/mach-mx25/clock.c
@@ -378,8 +378,8 @@ static struct clk ipg_clk = {
 
 /* Bottom-level clocks */
 
-struct clk usbotg_clk = {
-	.name = "usbotg_clk",
+struct clk usb_ahb_clk = {
+	.name = "usb_ahb_clk",
 	.id = 0,
 	.parent = &ahb_clk,
 	.enable = _clk_enable,
@@ -1354,7 +1354,7 @@ static int _clk_usb_set_rate(struct clk *clk, unsigned long rate)
 
 	reg = __raw_readl(MXC_CCM_CCTL) & ~MXC_CCM_CCTL_USB_DIV_MASK;
 	reg |= (div - 1) << MXC_CCM_CCTL_USB_DIV_OFFSET;
-	__raw_writel(reg, MXC_CCM_MCR);
+	__raw_writel(reg, MXC_CCM_CCTL);
 
 	return 0;
 }
@@ -1362,7 +1362,7 @@ static int _clk_usb_set_rate(struct clk *clk, unsigned long rate)
 static void _clk_usb_recalc(struct clk *clk)
 {
 	unsigned long div =
-	    __raw_readl(MXC_CCM_MCR) & MXC_CCM_CCTL_USB_DIV_MASK;
+	    __raw_readl(MXC_CCM_CCTL) & MXC_CCM_CCTL_USB_DIV_MASK;
 
 	div >>= MXC_CCM_CCTL_USB_DIV_OFFSET;
 
@@ -1506,6 +1506,7 @@ static struct clk *mxc_clks[] = {
 	&cpu_clk,
 	&ahb_clk,
 	&ipg_clk,
+	&usb_ahb_clk,
 	&per_clk[0],
 	&per_clk[1],
 	&per_clk[2],
diff --git a/arch/arm/mach-mx25/mx25_3stack_gpio.c b/arch/arm/mach-mx25/mx25_3stack_gpio.c
index dde0e19..39eaeac 100644
--- a/arch/arm/mach-mx25/mx25_3stack_gpio.c
+++ b/arch/arm/mach-mx25/mx25_3stack_gpio.c
@@ -903,55 +903,28 @@ EXPORT_SYMBOL(sdhc_write_protect);
 
 /*
  *  USB Host2
+ *
+ *  This configuration uses the on-chip FS/LS serial transceiver.
+ *  USBPHY2_{DP,DM} pins are not muxed.
+ *  We just need to grab USBH2_PWR, USBH2_OC and the Bluetooth/USB
+ *  mux control signal.
  */
 int gpio_usbh2_active(void)
 {
-	mxc_request_iomux(MX25_PIN_D9, MUX_CONFIG_ALT6); /*PWR*/
-	mxc_request_iomux(MX25_PIN_D8, MUX_CONFIG_ALT6); /*OC*/
-	mxc_request_iomux(MX25_PIN_LD0, MUX_CONFIG_ALT6); /*CLK*/
-	mxc_request_iomux(MX25_PIN_LD1, MUX_CONFIG_ALT6); /*DIR*/
-	mxc_request_iomux(MX25_PIN_LD2, MUX_CONFIG_ALT6); /*STP*/
-	mxc_request_iomux(MX25_PIN_LD3, MUX_CONFIG_ALT6); /*NXT*/
-	mxc_request_iomux(MX25_PIN_LD4, MUX_CONFIG_ALT6); /*DATA0*/
-	mxc_request_iomux(MX25_PIN_LD5, MUX_CONFIG_ALT6); /*DATA1*/
-	mxc_request_iomux(MX25_PIN_LD6, MUX_CONFIG_ALT6); /*DATA2*/
-	mxc_request_iomux(MX25_PIN_LD7, MUX_CONFIG_ALT6); /*DATA3*/
-	mxc_request_iomux(MX25_PIN_HSYNC, MUX_CONFIG_ALT6); /*DATA4*/
-	mxc_request_iomux(MX25_PIN_VSYNC, MUX_CONFIG_ALT6); /*DATA5*/
-	mxc_request_iomux(MX25_PIN_LSCLK, MUX_CONFIG_ALT6); /*DATA6*/
-	mxc_request_iomux(MX25_PIN_OE_ACD, MUX_CONFIG_ALT6); /*DATA7*/
-
-	/* If D9-D8 are used */
-#if 0
-	mxc_request_iomux(MX25_PIN_CONTRAST, MUX_CONFIG_ALT6); /*PWR*/
-	mxc_request_iomux(MX25_PIN_PWM, MUX_CONFIG_ALT6); /*OC*/
-#endif
+	if (mxc_request_iomux(MX25_PIN_D9, MUX_CONFIG_ALT6)  ||	/* PWR */
+	    mxc_request_iomux(MX25_PIN_D8, MUX_CONFIG_ALT6)  ||	/* OC */
+	    mxc_request_iomux(MX25_PIN_A21, MUX_CONFIG_ALT5)) {	/* BT_USB_CS */
+		return -EINVAL;
+	}
 
-	mxc_iomux_set_input(MUX_IN_USB_TOP_IPP_IND_UH2_USB_OC, INPUT_CTL_PATH0);
-
-#define USB_PAD_CTL_SLOW (PAD_CTL_PKE_ENABLE | PAD_CTL_PUE_PUD | \
-			  PAD_CTL_100K_PU)
-#define USB_PAD_CTL_FAST (PAD_CTL_PKE_ENABLE | PAD_CTL_PUE_PUD | \
-			  PAD_CTL_100K_PU | PAD_CTL_DRV_MAX | PAD_CTL_SRE_FAST)
-
-	mxc_iomux_set_pad(MX25_PIN_D9, PAD_CTL_PUE_PUD | PAD_CTL_100K_PU);
-	mxc_iomux_set_pad(MX25_PIN_D8, PAD_CTL_HYS_SCHMITZ |
-			  PAD_CTL_PKE_ENABLE | PAD_CTL_PUE_PUD);
-	mxc_iomux_set_pad(MX25_PIN_LD0, USB_PAD_CTL_SLOW);
-	mxc_iomux_set_pad(MX25_PIN_LD1, USB_PAD_CTL_SLOW);
-	mxc_iomux_set_pad(MX25_PIN_LD2, USB_PAD_CTL_FAST);
-	mxc_iomux_set_pad(MX25_PIN_LD3, USB_PAD_CTL_SLOW);
-	mxc_iomux_set_pad(MX25_PIN_LD4, USB_PAD_CTL_FAST);
-	mxc_iomux_set_pad(MX25_PIN_LD5, USB_PAD_CTL_FAST);
-	mxc_iomux_set_pad(MX25_PIN_LD6, USB_PAD_CTL_FAST);
-	mxc_iomux_set_pad(MX25_PIN_LD7, USB_PAD_CTL_FAST);
-	mxc_iomux_set_pad(MX25_PIN_HSYNC, USB_PAD_CTL_FAST);
-	mxc_iomux_set_pad(MX25_PIN_VSYNC, USB_PAD_CTL_FAST);
-	mxc_iomux_set_pad(MX25_PIN_LSCLK, USB_PAD_CTL_FAST);
-	mxc_iomux_set_pad(MX25_PIN_OE_ACD, USB_PAD_CTL_FAST);
-
-#undef USB_PAD_CTL_SLOW
-#undef USB_PAD_CTL_FAST
+	/*
+	 * This pin controls the mux that switches between
+	 * the J18 connector and the on-board bluetooth module.
+	 *  dir: 0 = out
+	 *  pin: 0 = J18, 1 = BT
+	 */
+	mxc_set_gpio_direction(MX25_PIN_A21, 0);
+	mxc_set_gpio_dataout(MX25_PIN_A21, 0);
 
 	return 0;
 }
@@ -959,124 +932,35 @@ EXPORT_SYMBOL(gpio_usbh2_active);
 
 void gpio_usbh2_inactive(void)
 {
-	mxc_request_gpio(MX25_PIN_D9); /*PWR*/
-	mxc_request_gpio(MX25_PIN_D8); /*OC*/
-	mxc_request_gpio(MX25_PIN_LD0); /*CLK*/
-	mxc_request_gpio(MX25_PIN_LD1); /*DIR*/
-	mxc_request_gpio(MX25_PIN_LD2); /*STP*/
-	mxc_request_gpio(MX25_PIN_LD3); /*NXT*/
-	mxc_request_gpio(MX25_PIN_LD4); /*DATA0*/
-	mxc_request_gpio(MX25_PIN_LD5); /*DATA1*/
-	mxc_request_gpio(MX25_PIN_LD6); /*DATA2*/
-	mxc_request_gpio(MX25_PIN_LD7); /*DATA3*/
-	mxc_request_gpio(MX25_PIN_HSYNC); /*DATA4*/
-	mxc_request_gpio(MX25_PIN_VSYNC); /*DATA5*/
-	mxc_request_gpio(MX25_PIN_LSCLK); /*DATA6*/
-	mxc_request_gpio(MX25_PIN_OE_ACD); /*DATA7*/
-
-	mxc_free_iomux(MX25_PIN_D9, MUX_CONFIG_GPIO);
-	mxc_free_iomux(MX25_PIN_D8, MUX_CONFIG_GPIO);
-	mxc_free_iomux(MX25_PIN_LD0, MUX_CONFIG_GPIO);
-	mxc_free_iomux(MX25_PIN_LD1, MUX_CONFIG_GPIO);
-	mxc_free_iomux(MX25_PIN_LD2, MUX_CONFIG_GPIO);
-	mxc_free_iomux(MX25_PIN_LD3, MUX_CONFIG_GPIO);
-	mxc_free_iomux(MX25_PIN_LD4, MUX_CONFIG_GPIO);
-	mxc_free_iomux(MX25_PIN_LD5, MUX_CONFIG_GPIO);
-	mxc_free_iomux(MX25_PIN_LD6, MUX_CONFIG_GPIO);
-	mxc_free_iomux(MX25_PIN_LD7, MUX_CONFIG_GPIO);
-	mxc_free_iomux(MX25_PIN_HSYNC, MUX_CONFIG_GPIO);
-	mxc_free_iomux(MX25_PIN_VSYNC, MUX_CONFIG_GPIO);
-	mxc_free_iomux(MX25_PIN_LSCLK, MUX_CONFIG_GPIO);
-	mxc_free_iomux(MX25_PIN_OE_ACD, MUX_CONFIG_GPIO);
+	mxc_free_iomux(MX25_PIN_D9, MUX_CONFIG_FUNC);
+	mxc_free_iomux(MX25_PIN_D8, MUX_CONFIG_FUNC);
+	mxc_free_iomux(MX25_PIN_A21, MUX_CONFIG_GPIO);
 }
 
 /*
  *  USB OTG UTMI
+ *
+ *  This configuration uses the on-chip UTMI transceiver.
+ *  USBPHY1_{VBUS,DP,DM,UID,RREF} pins are not muxed.
+ *  We just need to grab the USBOTG_PWR and USBOTG_OC pins.
  */
 int gpio_usbotg_utmi_active(void)
 {
-	mxc_request_iomux(MX25_PIN_D11, MUX_CONFIG_ALT6); /*PWR*/
-	mxc_request_iomux(MX25_PIN_D10, MUX_CONFIG_ALT6); /*OC*/
-	mxc_request_iomux(MX25_PIN_CSI_D2, MUX_CONFIG_ALT6); /*DATA0*/
-	mxc_request_iomux(MX25_PIN_CSI_D3, MUX_CONFIG_ALT6); /*DATA1*/
-	mxc_request_iomux(MX25_PIN_CSI_D4, MUX_CONFIG_ALT6); /*DATA2*/
-	mxc_request_iomux(MX25_PIN_CSI_D5, MUX_CONFIG_ALT6); /*DATA3*/
-	mxc_request_iomux(MX25_PIN_CSI_D6, MUX_CONFIG_ALT6); /*DATA4*/
-	mxc_request_iomux(MX25_PIN_CSI_D7, MUX_CONFIG_ALT6); /*DATA5*/
-	mxc_request_iomux(MX25_PIN_CSI_D8, MUX_CONFIG_ALT6); /*DATA6*/
-	mxc_request_iomux(MX25_PIN_CSI_D9, MUX_CONFIG_ALT6); /*DATA7*/
-	mxc_request_iomux(MX25_PIN_CSI_MCLK, MUX_CONFIG_ALT6); /*DIR*/
-	mxc_request_iomux(MX25_PIN_CSI_VSYNC, MUX_CONFIG_ALT6); /*STP*/
-	mxc_request_iomux(MX25_PIN_CSI_HSYNC, MUX_CONFIG_ALT6); /*NXT*/
-	mxc_request_iomux(MX25_PIN_CSI_PIXCLK, MUX_CONFIG_ALT6); /*CLK*/
-
-#if 0
-	/*if D10, D11 are in use */
-	mxc_request_iomux(MX25_PIN_GPIO_A, MUX_CONFIG_ALT2); /*PWR*/
-	mxc_request_iomux(MX25_PIN_GPIO_B, MUX_CONFIG_ALT2); /*OC*/
-#endif
-
-#define USB_PAD_CTL_SLOW (PAD_CTL_PKE_ENABLE | PAD_CTL_PUE_PUD | \
-			  PAD_CTL_100K_PU)
-#define USB_PAD_CTL_FAST (PAD_CTL_PKE_ENABLE | PAD_CTL_PUE_PUD | \
-			  PAD_CTL_100K_PU | PAD_CTL_DRV_MAX | PAD_CTL_SRE_FAST)
-
-	mxc_iomux_set_pad(MX25_PIN_D11, USB_PAD_CTL_SLOW);
-	mxc_iomux_set_pad(MX25_PIN_D10, PAD_CTL_HYS_SCHMITZ |
-			  PAD_CTL_PKE_ENABLE | PAD_CTL_PUE_PUD);
-	mxc_iomux_set_pad(MX25_PIN_CSI_D2, USB_PAD_CTL_FAST);
-	mxc_iomux_set_pad(MX25_PIN_CSI_D3, USB_PAD_CTL_FAST);
-	mxc_iomux_set_pad(MX25_PIN_CSI_D4, USB_PAD_CTL_FAST);
-	mxc_iomux_set_pad(MX25_PIN_CSI_D5, USB_PAD_CTL_FAST);
-	mxc_iomux_set_pad(MX25_PIN_CSI_D6, USB_PAD_CTL_FAST);
-	mxc_iomux_set_pad(MX25_PIN_CSI_D7, USB_PAD_CTL_FAST);
-	mxc_iomux_set_pad(MX25_PIN_CSI_D8, USB_PAD_CTL_FAST);
-	mxc_iomux_set_pad(MX25_PIN_CSI_D9, USB_PAD_CTL_FAST);
-	mxc_iomux_set_pad(MX25_PIN_CSI_MCLK, USB_PAD_CTL_SLOW);
-	mxc_iomux_set_pad(MX25_PIN_CSI_VSYNC, USB_PAD_CTL_FAST);
-	mxc_iomux_set_pad(MX25_PIN_CSI_HSYNC, USB_PAD_CTL_SLOW);
-	mxc_iomux_set_pad(MX25_PIN_CSI_PIXCLK, USB_PAD_CTL_SLOW);
-
-	mxc_iomux_set_input(MUX_IN_USB_TOP_IPP_IND_OTG_USB_OC, INPUT_CTL_PATH0);
-
-#undef USB_PAD_CTL_SLOW
-#undef USB_PAD_CTL_FAST
-
+	if (mxc_request_iomux(MX25_PIN_GPIO_A, MUX_CONFIG_ALT2)  || /* PWR */
+	    mxc_request_iomux(MX25_PIN_GPIO_B, MUX_CONFIG_ALT2)) {  /* OC */
+		return -EINVAL;
+	}
 	return 0;
 }
 EXPORT_SYMBOL(gpio_usbotg_utmi_active);
 
 void gpio_usbotg_utmi_inactive(void)
 {
-	mxc_request_gpio(MX25_PIN_D11); /*PWR*/
-	mxc_request_gpio(MX25_PIN_D10); /*OC*/
-	mxc_request_gpio(MX25_PIN_CSI_D2); /*DATA0*/
-	mxc_request_gpio(MX25_PIN_CSI_D3); /*DATA1*/
-	mxc_request_gpio(MX25_PIN_CSI_D4); /*DATA2*/
-	mxc_request_gpio(MX25_PIN_CSI_D5); /*DATA3*/
-	mxc_request_gpio(MX25_PIN_CSI_D6); /*DATA4*/
-	mxc_request_gpio(MX25_PIN_CSI_D7); /*DATA5*/
-	mxc_request_gpio(MX25_PIN_CSI_D8); /*DATA6*/
-	mxc_request_gpio(MX25_PIN_CSI_D9); /*DATA7*/
-	mxc_request_gpio(MX25_PIN_CSI_MCLK); /*DIR*/
-	mxc_request_gpio(MX25_PIN_CSI_VSYNC); /*STP*/
-	mxc_request_gpio(MX25_PIN_CSI_HSYNC); /*NXT*/
-	mxc_request_gpio(MX25_PIN_CSI_PIXCLK); /*CLK*/
-
-	mxc_free_iomux(MX25_PIN_D11, MUX_CONFIG_GPIO);
-	mxc_free_iomux(MX25_PIN_D10, MUX_CONFIG_GPIO);
-	mxc_free_iomux(MX25_PIN_CSI_D2, MUX_CONFIG_GPIO);
-	mxc_free_iomux(MX25_PIN_CSI_D3, MUX_CONFIG_GPIO);
-	mxc_free_iomux(MX25_PIN_CSI_D4, MUX_CONFIG_GPIO);
-	mxc_free_iomux(MX25_PIN_CSI_D5, MUX_CONFIG_GPIO);
-	mxc_free_iomux(MX25_PIN_CSI_D6, MUX_CONFIG_GPIO);
-	mxc_free_iomux(MX25_PIN_CSI_D7, MUX_CONFIG_GPIO);
-	mxc_free_iomux(MX25_PIN_CSI_D8, MUX_CONFIG_GPIO);
-	mxc_free_iomux(MX25_PIN_CSI_D9, MUX_CONFIG_GPIO);
-	mxc_free_iomux(MX25_PIN_CSI_MCLK, MUX_CONFIG_GPIO);
-	mxc_free_iomux(MX25_PIN_CSI_VSYNC, MUX_CONFIG_GPIO);
-	mxc_free_iomux(MX25_PIN_CSI_HSYNC, MUX_CONFIG_GPIO);
-	mxc_free_iomux(MX25_PIN_CSI_PIXCLK, MUX_CONFIG_GPIO);
+	mxc_request_gpio(MX25_PIN_GPIO_A);
+	mxc_request_gpio(MX25_PIN_GPIO_B);
+
+	mxc_free_iomux(MX25_PIN_GPIO_A, MUX_CONFIG_GPIO);
+	mxc_free_iomux(MX25_PIN_GPIO_B, MUX_CONFIG_GPIO);
 }
 EXPORT_SYMBOL(gpio_usbotg_utmi_inactive);
 
diff --git a/arch/arm/mach-mx25/usb.h b/arch/arm/mach-mx25/usb.h
new file mode 100644
index 0000000..0ab29b5
--- /dev/null
+++ b/arch/arm/mach-mx25/usb.h
@@ -0,0 +1,103 @@
+/*
+ * Copyright 2005-2009 Freescale Semiconductor, Inc. All Rights Reserved.
+ */
+
+/*
+ * The code contained herein is licensed under the GNU General Public
+ * License. You may obtain a copy of the GNU General Public License
+ * Version 2 or later at the following locations:
+ *
+ * http://www.opensource.org/licenses/gpl-license.html
+ * http://www.gnu.org/copyleft/gpl.html
+ */
+
+extern int usbotg_init(struct platform_device *pdev);
+extern void usbotg_uninit(struct fsl_usb2_platform_data *pdata);
+extern int gpio_usbotg_utmi_active(void);
+extern void gpio_usbotg_utmi_inactive(void);
+extern struct platform_device *host_pdev_register(struct resource *res,
+						  int n_res,
+						  struct fsl_usb2_platform_data
+						  *config);
+
+extern int fsl_usb_host_init(struct platform_device *pdev);
+extern void fsl_usb_host_uninit(struct fsl_usb2_platform_data *pdata);
+extern int gpio_usbh2_active(void);
+extern void gpio_usbh2_inactive(void);
+
+/*
+ * Determine which platform_data struct to use for the DR controller,
+ * based on which transceiver is configured.
+ * PDATA is a pointer to it.
+ */
+static struct fsl_usb2_platform_data __maybe_unused dr_utmi_config;
+#define PDATA (&dr_utmi_config)
+
+/*
+ * Used to set pdata->operating_mode before registering the platform_device.
+ * If OTG is configured, the controller operates in OTG mode,
+ * otherwise it's either host or device.
+ */
+#ifdef CONFIG_USB_OTG
+#define DR_UDC_MODE	FSL_USB2_DR_OTG
+#define DR_HOST_MODE	FSL_USB2_DR_OTG
+#else
+#define DR_UDC_MODE	FSL_USB2_DR_DEVICE
+#define DR_HOST_MODE	FSL_USB2_DR_HOST
+#endif
+
+#ifdef CONFIG_USB_EHCI_ARC_OTG
+static inline void dr_register_host(struct resource *r, int rs)
+{
+	PDATA->operating_mode = DR_HOST_MODE;
+	host_pdev_register(r, rs, PDATA);
+}
+#else
+static inline void dr_register_host(struct resource *r, int rs)
+{
+}
+#endif
+
+#ifdef CONFIG_USB_GADGET_ARC
+static struct platform_device dr_udc_device;
+
+static inline void dr_register_udc(void)
+{
+	PDATA->operating_mode = DR_UDC_MODE;
+	dr_udc_device.dev.platform_data = PDATA;
+
+	if (platform_device_register(&dr_udc_device))
+		printk(KERN_ERR "usb: can't register DR gadget\n");
+	else
+		printk(KERN_INFO "usb: DR gadget (%s) registered\n",
+		       PDATA->transceiver);
+}
+#else
+static inline void dr_register_udc(void)
+{
+}
+#endif
+
+#ifdef CONFIG_USB_OTG
+static struct platform_device dr_otg_device;
+
+/*
+ * set the proper operating_mode and
+ * platform_data pointer, then register the
+ * device.
+ */
+static inline void dr_register_otg(void)
+{
+	PDATA->operating_mode = FSL_USB2_DR_OTG;
+	dr_otg_device.dev.platform_data = PDATA;
+
+	if (platform_device_register(&dr_otg_device))
+		printk(KERN_ERR "usb: can't register otg device\n");
+	else
+		printk(KERN_INFO "usb: DR OTG registered\n");
+}
+#else
+static inline void dr_register_otg(void)
+{
+}
+#endif
diff --git a/arch/arm/mach-mx25/usb_dr.c b/arch/arm/mach-mx25/usb_dr.c
new file mode 100644
index 0000000..ecf494b
--- /dev/null
+++ b/arch/arm/mach-mx25/usb_dr.c
@@ -0,0 +1,101 @@
+/*
+ * Copyright 2005-2009 Freescale Semiconductor, Inc. All Rights Reserved.
+ */
+
+/*
+ * The code contained herein is licensed under the GNU General Public
+ * License. You may obtain a copy of the GNU General Public License
+ * Version 2 or later at the following locations:
+ *
+ * http://www.opensource.org/licenses/gpl-license.html
+ * http://www.gnu.org/copyleft/gpl.html
+ */
+
+#include <linux/kernel.h>
+#include <linux/types.h>
+#include <linux/platform_device.h>
+#include <linux/fsl_devices.h>
+#include <asm/arch/arc_otg.h>
+#include "usb.h"
+
+/*
+ * platform data structs
+ * 	- Which one to use is determined by CONFIG options in usb.h
+ * 	- operating_mode plugged at run time
+ */
+static struct fsl_usb2_platform_data __maybe_unused dr_utmi_config = {
+	.name              = "DR",
+	.platform_init     = usbotg_init,
+	.platform_uninit   = usbotg_uninit,
+	.phy_mode          = FSL_USB2_PHY_UTMI_WIDE,
+	.power_budget      = 500,		/* via RT9706 */
+	.gpio_usb_active   = gpio_usbotg_utmi_active,
+	.gpio_usb_inactive = gpio_usbotg_utmi_inactive,
+	.transceiver       = "utmi",
+};
+
+/*
+ * resources
+ */
+static struct resource otg_resources[] = {
+	[0] = {
+	       .start = (u32)(USB_OTGREGS_BASE),
+	       .end   = (u32)(USB_OTGREGS_BASE + 0x1ff),
+	       .flags = IORESOURCE_MEM,
+	       },
+	[1] = {
+	       .start = MXC_INT_USB_OTG,
+	       .flags = IORESOURCE_IRQ,
+	       },
+};
+
+static u64 dr_udc_dmamask = ~(u32) 0;
+static void dr_udc_release(struct device *dev)
+{
+}
+
+static u64 dr_otg_dmamask = ~(u32) 0;
+static void dr_otg_release(struct device *dev)
+{
+}
+
+/*
+ * platform device structs
+ * 	dev.platform_data field plugged at run time
+ */
+static struct platform_device __maybe_unused dr_udc_device = {
+	.name = "fsl-usb2-udc",
+	.id   = -1,
+	.dev  = {
+		.release           = dr_udc_release,
+		.dma_mask          = &dr_udc_dmamask,
+		.coherent_dma_mask = 0xffffffff,
+	},
+	.resource      = otg_resources,
+	.num_resources = ARRAY_SIZE(otg_resources),
+};
+
+static struct platform_device __maybe_unused dr_otg_device = {
+	.name = "fsl-usb2-otg",
+	.id = -1,
+	.dev = {
+		.release           = dr_otg_release,
+		.dma_mask          = &dr_otg_dmamask,
+		.coherent_dma_mask = 0xffffffff,
+	},
+	.resource      = otg_resources,
+	.num_resources = ARRAY_SIZE(otg_resources),
+};
+
+static int __init usb_dr_init(void)
+{
+	pr_debug("%s: \n", __func__);
+
+	dr_register_otg();
+	dr_register_host(otg_resources, ARRAY_SIZE(otg_resources));
+	dr_register_udc();
+
+	return 0;
+}
+
+module_init(usb_dr_init);
diff --git a/arch/arm/mach-mx25/usb_h2.c b/arch/arm/mach-mx25/usb_h2.c
new file mode 100644
index 0000000..b1b30ce
--- /dev/null
+++ b/arch/arm/mach-mx25/usb_h2.c
@@ -0,0 +1,87 @@
+/*
+ * Copyright 2005-2009 Freescale Semiconductor, Inc. All Rights Reserved.
+ */
+
+/*
+ * The code contained herein is licensed under the GNU General Public
+ * License. You may obtain a copy of the GNU General Public License
+ * Version 2 or later at the following locations:
+ *
+ * http://www.opensource.org/licenses/gpl-license.html
+ * http://www.gnu.org/copyleft/gpl.html
+ */
+
+#include <linux/kernel.h>
+#include <linux/types.h>
+#include <linux/platform_device.h>
+#include <linux/fsl_devices.h>
+#include <linux/usb/fsl_xcvr.h>
+#include <linux/regulator/regulator.h>
+#include <asm/arch/arc_otg.h>
+#include "usb.h"
+
+static struct fsl_usb2_platform_data usbh2_config = {
+	.name              = "Host 2",
+	.platform_init     = fsl_usb_host_init,
+	.platform_uninit   = fsl_usb_host_uninit,
+	.operating_mode    = FSL_USB2_MPH_HOST,
+	.phy_mode          = FSL_USB2_PHY_SERIAL,
+	.power_budget      = 500,		/* via RT9702 */
+	.gpio_usb_active   = gpio_usbh2_active,
+	.gpio_usb_inactive = gpio_usbh2_inactive,
+	.transceiver       = "serial",		/* on-chip */
+};
+
+static struct resource usbh2_resources[] = {
+	[0] = {
+	       .start = (u32) (USB_H2REGS_BASE),
+	       .end   = (u32) (USB_H2REGS_BASE + 0x1ff),
+	       .flags = IORESOURCE_MEM,
+	       },
+	[1] = {
+	       .start = MXC_INT_USB_HTG,
+	       .flags = IORESOURCE_IRQ,
+	       },
+};
+
+void usbh2_get_xcvr_power(struct device *dev)
+{
+	struct regulator *usbh2_regux;
+
+	usbh2_regux = regulator_get(dev, "GPO1");
+	regulator_enable(usbh2_regux);
+	((struct fsl_usb2_platform_data *)dev->platform_data)->
+	    xcvr_pwr->regu1 = usbh2_regux;
+
+	usbh2_regux = regulator_get(dev, "GPO3");
+	regulator_enable(usbh2_regux);
+	((struct fsl_usb2_platform_data *)dev->platform_data)->
+	    xcvr_pwr->regu2 = usbh2_regux;
+}
+EXPORT_SYMBOL(usbh2_get_xcvr_power);
+
+void usbh2_put_xcvr_power(struct device *dev)
+{
+	struct regulator *usbh2_regux;
+
+	usbh2_regux = ((struct fsl_usb2_platform_data *)dev->
+		       platform_data)->xcvr_pwr->regu2;
+	regulator_disable(usbh2_regux);
+	regulator_put(usbh2_regux, dev);
+
+	usbh2_regux = ((struct fsl_usb2_platform_data *)dev->
+		       platform_data)->xcvr_pwr->regu1;
+	regulator_disable(usbh2_regux);
+	regulator_put(usbh2_regux, dev);
+}
+EXPORT_SYMBOL(usbh2_put_xcvr_power);
+
+static int __init usbh2_init(void)
+{
+	pr_debug("%s: \n", __func__);
+
+	host_pdev_register(usbh2_resources, ARRAY_SIZE(usbh2_resources),
+			   &usbh2_config);
+	return 0;
+}
+module_init(usbh2_init);
-- 
1.5.4.4

