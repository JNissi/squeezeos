From edb7f0ee12a9fa5649b7192d6683510ae08d403a Mon Sep 17 00:00:00 2001
From: Robby Cai <r63905@freescale.com>
Date: Fri, 8 Aug 2008 07:14:29 +0800
Subject: [PATCH] ENGR00087006 VPU clocks gate off/on at appropriate run time to save power

Enabling/disabling VPU clocks in the CCGR registers for each frame at
appropriate run-time.

Add a new ioctl - VPU_IOC_CLKGATE_SETTING in driver.

Signed-off-by: Robby Cai <r63905@freescale.com>
---
 drivers/mxc/vpu/mxc_vpu.c          |   61 ++++++++++++++----------------------
 include/asm-arm/arch-mxc/mxc_vpu.h |    1 +
 2 files changed, 25 insertions(+), 37 deletions(-)

diff --git a/drivers/mxc/vpu/mxc_vpu.c b/drivers/mxc/vpu/mxc_vpu.c
index 2af91bb..c14ea8e 100644
--- a/drivers/mxc/vpu/mxc_vpu.c
+++ b/drivers/mxc/vpu/mxc_vpu.c
@@ -107,10 +107,11 @@ static int vpu_free_buffers(void)
  */
 static irqreturn_t vpu_irq_handler(int irq, void *dev_id)
 {
-	struct vpu_t *dev;
-	dev = (struct vpu_t *)dev_id;
+	struct vpu_t *dev = dev_id;
+
 	__raw_readl(IO_ADDRESS(VPU_BASE_ADDR + BIT_INT_STATUS));
 	__raw_writel(0x1, IO_ADDRESS(VPU_BASE_ADDR + BIT_INT_CLEAR));
+
 	if (dev->async_queue)
 		kill_fasync(&dev->async_queue, SIGIO, POLL_IN);
 
@@ -121,35 +122,6 @@ static irqreturn_t vpu_irq_handler(int irq, void *dev_id)
 }
 
 /*!
- * @brief vpu hardware enable function
- *
- * @return  0 on success or negative error code on error
- */
-static int vpu_hardware_enable(void)
-{
-	if (cpu_is_mx32()) {
-		vl2cc_enable();
-	}
-	clk_enable(vpu_clk);
-	return 0;
-}
-
-/*!
- * @brief vpu hardware disable function
- *
- * @return  0 on success or negative error code on error
- */
-static int vpu_hardware_disable(void)
-{
-	if (cpu_is_mx32()) {
-		vl2cc_disable();
-	}
-	clk_disable(vpu_clk);
-	return 0;
-
-}
-
-/*!
  * @brief open function for vpu file operation
  *
  * @return  0 on success or negative error code on error
@@ -158,7 +130,9 @@ static int vpu_open(struct inode *inode, struct file *filp)
 {
 	if (open_count++ == 0) {
 		filp->private_data = (void *)(&vpu_data);
-		vpu_hardware_enable();
+
+		if (cpu_is_mx32())
+			vl2cc_enable();
 	} else {
 		printk(KERN_ERR "VPU has already been opened.\n");
 		return -EACCES;
@@ -283,10 +257,21 @@ static int vpu_ioctl(struct inode *inode, struct file *filp, u_int cmd,
 		{
 			ret = copy_to_user((void __user *)arg, &iram,
 					   sizeof(struct iram_setting));
-			if (ret) {
+			if (ret)
 				ret = -EFAULT;
-				break;
-			}
+
+			break;
+		}
+	case VPU_IOC_CLKGATE_SETTING:
+		{
+			u32 clkgate_en;
+			if (get_user(clkgate_en, (u32 __user *) arg))
+				return -EFAULT;
+
+			if (clkgate_en)
+				clk_enable(vpu_clk);
+			else
+				clk_disable(vpu_clk);
 
 			break;
 		}
@@ -309,9 +294,11 @@ static int vpu_ioctl(struct inode *inode, struct file *filp, u_int cmd,
  */
 static int vpu_release(struct inode *inode, struct file *filp)
 {
-	if (--open_count == 0) {
+	if (open_count > 0 && !(--open_count)) {
 		vpu_free_buffers();
-		vpu_hardware_disable();
+
+		if (cpu_is_mx32())
+			vl2cc_disable();
 	}
 
 	return 0;
diff --git a/include/asm-arm/arch-mxc/mxc_vpu.h b/include/asm-arm/arch-mxc/mxc_vpu.h
index dbbf174..0dad3d0 100644
--- a/include/asm-arm/arch-mxc/mxc_vpu.h
+++ b/include/asm-arm/arch-mxc/mxc_vpu.h
@@ -44,6 +44,7 @@ typedef struct vpu_mem_desc {
 #define VPU_IOC_REG_DUMP	_IO(VPU_IOC_MAGIC, 4)
 #define VPU_IOC_VL2CC_FLUSH	_IO(VPU_IOC_MAGIC, 5)
 #define VPU_IOC_IRAM_SETTING	_IO(VPU_IOC_MAGIC, 6)
+#define VPU_IOC_CLKGATE_SETTING	_IO(VPU_IOC_MAGIC, 7)
 
 int vl2cc_init(u32 vl2cc_hw_base);
 void vl2cc_enable(void);
-- 
1.5.4.4

