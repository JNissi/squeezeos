---
 bfd/warning.m4   |    2 +-
 configure.ac     |    2 +-
 gdb/Makefile.in  |    4 ++--
 gdb/configure.ac |    8 ++------
 4 files changed, 6 insertions(+), 10 deletions(-)

--- gdb-6.8.orig/bfd/warning.m4
+++ gdb-6.8/bfd/warning.m4
@@ -21,11 +21,11 @@ case "${host}" in
   *) ;;
 esac
 
 # Enable -Werror by default when using gcc
 if test "${GCC}" = yes -a -z "${ERROR_ON_WARNING}" ; then
-    ERROR_ON_WARNING=yes
+    ERROR_ON_WARNING=no
 fi
 
 NO_WERROR=
 if test "${ERROR_ON_WARNING}" = yes ; then
     GCC_WARN_CFLAGS="$GCC_WARN_CFLAGS -Werror"
--- gdb-6.8.orig/configure.ac
+++ gdb-6.8/configure.ac
@@ -2739,11 +2739,11 @@ AC_SUBST(stage1_checking)
 
 # Enable -Werror in bootstrap stage2 and later.
 AC_ARG_ENABLE(werror,
 [  --enable-werror         enable -Werror in bootstrap stage2 and later], [],
 [if test -d ${srcdir}/gcc && test x"`cat $srcdir/gcc/DEV-PHASE`" = xexperimental; then
-  enable_werror=yes
+  enable_werror=no
 else
   enable_werror=no
 fi])
 case ${enable_werror} in
   yes) stage2_werror_flag="--enable-werror-always" ;;
--- gdb-6.8.orig/gdb/Makefile.in
+++ gdb-6.8/gdb/Makefile.in
@@ -140,13 +140,13 @@ READLINE_CFLAGS = @READLINE_CFLAGS@
 
 # Where is expat?  This will be empty if expat was not available.
 LIBEXPAT = @LIBEXPAT@
 
 WARN_CFLAGS = @WARN_CFLAGS@
-WERROR_CFLAGS = @WERROR_CFLAGS@
+WERROR_CFLAGS =
 GDB_WARN_CFLAGS = $(WARN_CFLAGS)
-GDB_WERROR_CFLAGS = $(WERROR_CFLAGS)
+GDB_WERROR_CFLAGS =
 
 GDB_WARN_CFLAGS_NO_FORMAT = `echo " $(GDB_WARN_CFLAGS) " | sed "s/ -Wformat-nonliteral / /g"`
 
 # Where is the INTL library?  Typically in ../intl.
 INTL = @LIBINTL@
--- gdb-6.8.orig/gdb/configure.ac
+++ gdb-6.8/gdb/configure.ac
@@ -1292,24 +1292,21 @@ AC_SUBST(TARGET_SYSTEM_ROOT)
 AC_SUBST(TARGET_SYSTEM_ROOT_DEFINE)
 
 AC_ARG_ENABLE(werror,
   [  --enable-werror    treat compile warnings as errors],
   [case "${enableval}" in
-     yes | y) ERROR_ON_WARNING="yes" ;;
+     yes | y) ERROR_ON_WARNING="no" ;;
      no | n)  ERROR_ON_WARNING="no" ;;
      *) AC_MSG_ERROR(bad value ${enableval} for --enable-werror) ;;
    esac])
 
 # Enable -Werror by default when using gcc
 if test "${GCC}" = yes -a -z "${ERROR_ON_WARNING}" ; then
-    ERROR_ON_WARNING=yes
+    ERROR_ON_WARNING=no
 fi
 
 WERROR_CFLAGS=""
-if test "${ERROR_ON_WARNING}" = yes ; then
-    WERROR_CFLAGS="-Werror"
-fi
 
 # The entries after -Wno-pointer-sign are disabled warnings which may
 # be enabled in the future, which can not currently be used to build
 # GDB.
 # NOTE: If you change this list, remember to update
@@ -1352,11 +1349,10 @@ then
     AC_MSG_CHECKING(compiler warning flags)
     # Separate out the -Werror flag as some files just cannot be
     # compiled with it enabled.
     for w in ${build_warnings}; do
 	case $w in
-	-Werr*) WERROR_CFLAGS=-Werror ;;
 	*) # Check that GCC accepts it
 	    saved_CFLAGS="$CFLAGS"
 	    CFLAGS="$CFLAGS $w"
 	    AC_TRY_COMPILE([],[],WARN_CFLAGS="${WARN_CFLAGS} $w",)
 	    CFLAGS="$saved_CFLAGS"
